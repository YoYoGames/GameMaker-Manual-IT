<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Sprite non bitmap</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Section explaining non-bitmap sprites in GameMaker" />
  <meta name="search-keywords" content="SWF,Spine,skeleton animation,vector sprites" />
  <meta name="rh-index-keywords" content="Texture Goups - Non-Bitmap Sprites,SWF,Spine" />
</head>
<body>
  <h1>Sprite non bitmap</h1>
  <p><span data-keyref="GameMaker Name">GameMaker</span> supporta <span class="notranslate">sprites</span> non bitmap sotto forma di file <a class="glossterm" data-glossterm="vettore" href="#">vettoriali</a> <span class="inline">SWF </span>o di file <strong>Spine Skeletal Animation</strong>. Entrambi i formati hanno i loro pro e i loro contro e le due sezioni seguenti spiegano come importarli nello <a href="../../The_Asset_Editors/Sprites.htm">Sprite Editor</a> e forniscono alcune informazioni su come vengono disegnati.</p>
  <h2>Animazione scheletrica <span class="notranslate">Sprites</span> (<span class="notranslate">Spine</span>)</h2>
  <p>Un sito <span class="notranslate">sprite</span> realizzato con l'animazione scheletrica è un sito in cui è stato creato uno &quot;scheletro&quot; di base e animato usando fotogrammi chiave per muovere le parti componenti dello scheletro nel tempo. Questo scheletro viene poi rivestito da un <a class="glossterm" data-glossterm="atlante delle texture" href="#">atlante di texture</a> e l'animazione risultante viene esportata in uno dei tanti tipi di file. <span data-keyref="GameMaker Name">GameMaker</span> consente di importare questo tipo di <span class="notranslate">sprite</span> purché sia stato esportato come file in formato <span class="inline">*.json</span> e abbia il file atlante <span class="notranslate">texture</span> correttamente associato (<span class="inline">*.atlas</span>) e il file immagine (come <span class="inline">*.png</span>) nella <em>stessa directory</em>.</p>
  <p><img>Attualmente <span data-keyref="GameMaker Name">GameMaker</span> può <strong>importare solo immagini vettoriali da file in formato JSON creati dal programma <a href="http://esotericsoftware.com/">Spine</a></strong>, ma il modo per importarle nel programma è quasi identico a quello per aggiungere una normale immagine bitmap. Per aggiungere un'animazione scheletrica, è necessario creare un nuovo <span class="notranslate">sprite</span>, che farà apparire la finestra di dialogo standard <strong>Load Sprite</strong>, solo che in questo caso è necessario assicurarsi di aver selezionato <span class="inline">*.json</span> dal filtro file in basso:</p>
  <p><img alt="Spine UI" class="center" src="../../assets/Images/Settings/Spine_Example.png" /></p>
  <p>Premendo il pulsante &quot;Carica&quot;, l'animazione scheletrica verrà aggiunta al <a href="../../Introduction/The_Asset_Browser.htm">Browser delle risorse</a> come <span class="notranslate">sprite</span>, con una barra di avanzamento che viene visualizzata mentre il file viene elaborato. Si noti che, a seconda della complessità del file, questa operazione potrebbe richiedere uno o due momenti. Al termine dell'elaborazione si tornerà alla finestra di dialogo delle proprietà di <span class="notranslate">sprite</span>, che ora avrà il seguente aspetto:</p>
  <p><img>Una volta importata l'animazione, è possibile impostare le proprietà di collisione, ma si noti che in questo caso si è limitati a usare semplicemente collisioni precise o collisioni con riquadro di delimitazione, e che i dati di collisione per un'animazione scheletrica sono presi esplicitamente dai dati forniti. <span data-keyref="GameMaker Name">GameMaker</span> non genera alcuna maschera di collisione se i dati mancano dal file importato, il che significa che non si otterranno collisioni funzionanti se le maschere non sono impostate correttamente nel programma utilizzato per creare l'immagine importata.</p>
  <p class="note"><span class="note">NOTA A</span> causa della complessità delle animazioni scheletriche, l'immagine di anteprima mostrata nell'editor <span class="notranslate">sprite</span> non è destinata a rappresentare accuratamente l'animazione, ma piuttosto a fornire una semplice immagine che rappresenta l'animazione per la visualizzazione nell'editor <span class="notranslate">room</span>.</p>
  <p>A differenza della bitmap <span class="notranslate">sprites</span>, l'animazione scheletrica importata <span class="notranslate">sprite</span> <strong>non può essere modificata</strong> in alcun modo <strong>nell'editor</strong>, ma ci sono una serie di funzioni disponibili all'interno di <span class="notranslate">GameMaker Language</span> (<span class="notranslate">GML</span>) che possono essere usate per cambiare le skin, impostare le proprietà e controllare altri aspetti dell'animazione. Inoltre, non è possibile impostare nessuna delle opzioni di <span class="notranslate">texture</span> per <span class="notranslate">sprite</span>, poiché <span class="notranslate">GameMaker</span> utilizzerà l'atlante <span class="notranslate">texture</span> fornito dal programma che ha generato <span class="notranslate">sprite</span>.</p>
  <p> <span class="notranslate">sprites</span> Ci sono una serie di cose di cui bisogna essere consapevoli quando si importa l'animazione dello scheletro <span class="notranslate">sprite</span>, la più importante delle quali è che alcune delle funzioni di disegno e di gestione di <span class="notranslate">sprite</span> non sono supportate per motivi tecnici, in particolare quelle funzioni di disegno che disegnano solo una parte di <span class="notranslate">sprite</span>, o che &quot;inclinano&quot; la posizione in qualche modo (vedere le singole funzioni per i dettagli esatti). <a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/Sprites_And_Tiles.htm"><span class="inline">draw_sprite_*()</span></a> per i dettagli esatti). Tuttavia, le funzioni di disegno di base di <span class="notranslate">sprite</span> sono pienamente supportate, così come le variabili incorporate di <span class="notranslate">sprite</span>. Oltre a queste funzioni e variabili, è possibile impostare e modificare le proprietà dell'animazione utilizzando le funzioni speciali di <span class="inline">skeleton_*</span>, che sono elencate e spiegate nella sezione di riferimento sulle <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Skeletal_Animation/Skeletal_Animation.htm">Animazioni scheletriche</a>.</p>
  <h2>Vettore <span class="notranslate">Sprites</span> (SWF)</h2>
  <p>Generalmente tutti i <span class="notranslate">sprites</span> in <span class="notranslate">GameMaker</span> utilizzano bitmap che, pur essendo flessibili in termini di contenuto, pongono dei limiti sia alla dimensione che al numero di fotogrammi possibili in un <span class="notranslate">sprite</span> prima che l'utilizzo della memoria diventi proibitivo. I <span class="notranslate">sprites</span> vettoriali aggirano queste limitazioni memorizzando e disegnando i loro contenuti in modo diverso: invece di essere una griglia di pixel, che può diventare a blocchi o sfocata quando viene scalata, vengono disegnati come triangoli usando la matematica vettoriale e questi possono essere scalati (o ridotti) senza perdere definizione, come illustrato nell'immagine sottostante:</p>
  <p><img>Per aiutarvi a visualizzare come questo avviene, l'immagine qui sotto è lo stesso vettore Fireman <span class="notranslate">sprite</span> solo che ora possiamo vedere i poligoni che vengono utilizzati per creare l'immagine all'interno di <span data-keyref="GameMaker Name">GameMaker</span>:</p>
  <p><img>Tuttavia, nulla è mai gratis quando si tratta di programmare giochi e il compromesso con i vettori <span class="notranslate">sprites</span> è che il loro disegno è più costoso per la CPU rispetto ai bitmap <span class="notranslate">sprites</span> e questa differenza di velocità aumenta con l'aumentare della complessità dell'animazione importata. Inoltre, il loro utilizzo di memoria è influenzato dalla loro complessità visiva, a differenza dei bitmap <span class="notranslate">sprites</span>. Tenendo conto di ciò, essi consentono di aggiungere grafica animata di grandi dimensioni in modi che sarebbero impossibili utilizzando le tradizionali bitmap <span class="notranslate">sprites</span>.</p>
  <p>Dal punto di vista delle prestazioni, poiché il vettore <span class="notranslate">sprites</span> disegna solo i pixel assolutamente necessari (a differenza delle bitmap <span class="notranslate">sprites</span> che &quot;disegnano&quot; anche lo spazio vuoto intorno all'immagine), può essere più economico dal punto di vista della GPU. Inoltre, in generale i vettori <span class="notranslate">sprites</span> sono molto più piccoli degli equivalenti bitmap: per l'esempio del pompiere di cui sopra, le dimensioni dei vari tipi di <span class="notranslate">sprite</span> sono le seguenti:</p>
  <p class="code">Bitmap at 70x68 = 4x70x68 bytes x 12 frames = 223k<br />
    Vector = 54k</p>
  <p>Se si quadruplica la risoluzione dello sprite:</p>
  <p class="code">Bitmap at 280x272 = 4x280x272 bytes x 12 frames = 3570k<br />
    Vector = 54k</p>
  <p>Quindi, come si può vedere, si può potenzialmente risparmiare molta memoria utilizzando il vettore <span class="notranslate">sprites</span>, e si può ancora risparmiare spazio in futuro.</p>
  <p>Attualmente <span data-keyref="GameMaker Name">GameMaker</span> ha un supporto <em>limitato </em>per il vettore <span class="notranslate">sprites</span>. e può importare immagini vettoriali solo da file in formato <span class="inline">SWF</span>. Il modo di importarle nel programma è quasi identico a quello di aggiungere una normale immagine bitmap. Per aggiungere un'immagine vettoriale <span class="notranslate">sprite</span>, create un nuovo <span class="notranslate">sprite</span>, che farà apparire la finestra di dialogo standard Load <span class="notranslate">Sprite</span>, ma assicuratevi di aver selezionato <span class="inline">*.swf</span> dal filtro file in basso.</p>
  <p><img>Premendo il pulsante &quot;Carica&quot; si aggiunge l'immagine vettoriale o l'animazione al <a href="../../Introduction/The_Asset_Browser.htm">Browser delle risorse</a>, con una barra di avanzamento che viene visualizzata man mano che il file viene elaborato. A seconda della complessità del file, questa operazione può richiedere un po' di tempo (fino a un minuto per le animazioni più complesse). Al termine dell'elaborazione si tornerà alla finestra di dialogo delle proprietà di <span class="notranslate">sprite</span>, che ora avrà il seguente aspetto:</p>
  <p><img>L'editor <span class="notranslate">sprite</span> non è cambiato molto, ma ora il pulsante <strong>Modifica immagine</strong> è grigio e non può essere cliccato, poiché non ci sono bitmap da modificare in questo tipo di <span class="notranslate">sprite</span>. In secondo luogo, anche tutte le opzioni di <span class="notranslate">texture</span> sono grigie. SWF <span class="notranslate">sprites</span> sono basati sulla matematica e come tali non hanno di solito <span class="notranslate">textures</span> associati, quindi nessuna delle opzioni disponibili è applicabile a questo tipo di <span class="notranslate">sprite</span>.</p>
  <p class="note"><span class="note">NOTA</span> L'aspetto dell'immagine nell'editor di anteprima prescelto non sarà lo stesso di quello del gioco, né di quello della finestra di anteprima dell'editor <span class="notranslate">sprite</span>. L'immagine vettoriale sarà importata alla dimensione in cui è stata creata, che non è necessariamente quella dell'anteprima (i browser normalmente scalano l'immagine per adattarla, ad esempio).</p>
  <p>Un'aggiunta all'editor di <span class="notranslate">Sprite</span> è la possibilità di impostare la <em>qualità </em>del vettore <span class="notranslate">sprite</span> quando viene disegnato utilizzando il cursore <strong>SWF Precision</strong> in alto. In questo modo si riduce o aumenta il numero di triangoli utilizzati per generare <span class="notranslate">sprite</span> - un valore di circa il 50% è sufficiente per la maggior parte dei giochi; tuttavia, si dovrebbe sperimentare questo valore se si utilizza una scalatura estrema o si hanno problemi di prestazioni.</p>
  <p> <span class="notranslate">sprites</span> Ci sono una serie di cose di cui bisogna tener conto quando si importa <span class="notranslate">sprite</span> vettoriale, la più importante delle quali è che alcune funzioni di disegno e di gestione di <span class="notranslate">sprite</span> non sono supportate per motivi tecnici, in particolare quelle funzioni di disegno che disegnano solo una parte di <span class="notranslate">sprite</span>, o che &quot;sbandano&quot; la posizione in qualche modo (vedere le singole funzioni per i dettagli esatti). <a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/Sprites_And_Tiles.htm"><span class="inline">draw_sprite_*()</span></a> per i dettagli esatti). Tuttavia, le funzioni di disegno di base di <span class="notranslate">sprite</span> sono pienamente supportate, così come le variabili incorporate in <span class="notranslate">sprite</span>. È inoltre possibile impostare diversi valori di <a class="glossterm" data-glossterm="anti-aliasing" href="#">anti-aliasing</a> (AA) per l'SWF <span class="notranslate">sprites</span> che viene disegnato utilizzando le funzioni <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_enable_swf_aa.htm">draw_enable_swf_aa()</a></span>, <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_get_swf_aa_level.htm">draw_get_swf_aa_level()</a></span> o <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_set_swf_aa_level.htm">draw_set_swf_aa_level()</a></span>.</p>
  <p>È inoltre necessario tenere presente quanto segue:</p>
  <ul class="colour">
    <li>Quando si importa un file <span class="inline">*.SWF</span>, Actionscript <em>non è </em>supportato, quindi se il vostro SWF si basa su di esso per funzionare correttamente, probabilmente non risulterà corretto. Allo stesso modo, qualsiasi clip di filmato incorporato che abbia il proprio <span class="notranslate">timeline</span> avrà solo il primo fotogramma mostrato nel corso dell'animazione; tutte le animazioni devono essere sul sito principale <span class="notranslate">timeline</span>.</li>
    <li>Se il vostro file vettoriale ha dettagli particolarmente fini, potreste occasionalmente notare che nel risultato di <span class="notranslate">sprites</span> appaiono buchi o triangoli strani. Ciò è dovuto al fatto che a piccole scale la geometria può talvolta collassare insieme per creare forme che non triangolano bene. In questo caso si hanno due opzioni: si può scalare il contenuto del file vettoriale, dando all'importatore più <span class="notranslate">room</span> con cui giocare, oppure si può cercare di ridurre il livello di dettaglio di <span class="notranslate">object</span> che si rompe.</li>
    <li><span data-keyref="GameMaker Name">GameMaker</span> utilizza le dimensioni dello stage dell'SWF come limiti del sito <span class="notranslate">sprite</span>. Tuttavia, se si trova qualcosa sullo stage al di fuori di questi limiti, viene comunque disegnato. Ciò significa che bisogna evitare di mettere qualcosa al di fuori dei limiti dello stage se non si vuole che venga mostrato, oppure usare un livello di maschera per limitare il disegno a quest'area.</li>
    <li>La dimensione del palcoscenico influisce anche sulla dimensione delle maschere di collisione generate; pertanto, se si dispone di un palcoscenico di grandi dimensioni e di molti fotogrammi nell'animazione, si può consumare molta memoria. Pertanto, si consiglia di utilizzare maschere di collisione precise solo se è veramente necessario.</li>
    <li>Poiché un file SWF viene creato da più livelli, alcuni dei quali potenzialmente si sovrappongono, l'alfa non funziona come nel caso dei bitmap <span class="notranslate">sprites</span>: le aree che si sovrappongono non appariranno trasparenti come altre parti di <span class="notranslate">sprite</span>, poiché i pixel vengono disegnati più volte.</li>
    <li>I riempimenti di bitmap <em>sono </em>supportati, anche se se si utilizzano riempimenti di bitmap a piastrelle come parte del file SWF, è necessario assicurarsi che la bitmap sia di dimensioni pari a una potenza di due, altrimenti non <span class="notranslate">tile</span> verrà visualizzata correttamente. È supportato anche il rendering del testo, ma è necessario incorporare il <span class="notranslate">font</span> file SWF perché venga visualizzato nel <span class="notranslate">sprite</span> risultato. Inoltre, attualmente è supportato solo il testo a riga singola allineato a sinistra.</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Texture_Groups.htm">Gruppi di texture</a></div>
        <div style="float:right">Avanti: <a href="Texture_Pages.htm">Pagine di texture</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
</body>
</html>