<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Costruire tramite la riga di comando</title>
    <meta name="generator" content="Adobe RoboHelp 2020" />
    <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
    <script src="../assets/scripts/main_script.js"></script>
    <meta name="rh-authors" content="Gurpreet S. Matharoo" />
    <meta name="topic-comment" content="Page that explains how your project can be compiled and tested through a CLI
" />
    <meta name="rh-index-keywords" content="Building via Command Line" />
    <meta name="search-keywords" content="build, command line, cli, ci, igor, continuous integration" />
  </head>
  <body><!--<div class="body-scroll" style="top: 150px;">-->
    <h1 id="h">Costruire tramite la riga di comando</h1>
    <p class="note"><span class="note"><strong>NOTA</strong></span> La creazione di pacchetti eseguibili tramite la riga di comando è disponibile solo su licenze specifiche, quindi guarda <a href="https://help.yoyogames.com/hc/en-us/articles/115002637011" title="Which Licence Is Right For Me?">questa pagina</a> per scoprire se la tua licenza la supporta. Per tutte le altre licenze, puoi eseguire e fare il debug del tuo progetto attraverso la linea di comando senza alcuna restrizione.</p>
    <p>Oltre a costruire il vostro progetto attraverso il sito <span class="notranslate">IDE</span>, <span data-keyref="GameMaker Name"><span data-keyref="GameMaker Name">GameMaker</span></span> vi permette di costruire i vostri progetti attraverso un'interfaccia a riga di comando usando le molte opzioni e comandi descritti di seguito. Potete usarlo per costruire il vostro progetto, testarlo e distribuirlo su più piattaforme eseguendo un unico file batch, e per impostare l'integrazione continua attraverso un'automazione <span class="notranslate">server</span> come <a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a>.</p>
    <p>Questo viene fatto eseguendo l'eseguibile <span class="inline">Igor.exe</span> presente nella vostra cartella <span class="notranslate">runtime</span> e passando le opzioni e i comandi elencati in questa pagina. Su <span class="notranslate">Windows</span> questo sarà presente nella cartella <span class="inline">C:\ProgramData\GameMaker\Cache\runtimes\runtime-[version]\bin</span> e su Mac sotto <span class="inline">/Users/Shared/GameMaker/Cache/runtimes/runtime-[version]/bin</span>.</p>
    <p> </p>
    <h1>Edificio Igor CI</h1>
    <h2>Impostazione</h2>
    <p>Per impostare la costruzione di CI su una macchina, è necessario fare quanto segue:</p>
    <ul class="colour">
      <li>Installare <span data-keyref="GameMaker Name">GameMaker</span> e il <span class="notranslate">runtimes</span> necessario</li>
      <li>Costruire i progetti attraverso il sito <span class="notranslate">IDE</span> per gli obiettivi richiesti, per assicurarsi che funzionino bene</li>
      <li>Test di costruzione dalla linea di comando (vedi esempi qui sotto)</li>
      <li>Creare un file batch che faccia la costruzione che si richiede all'interno del compito (testare questo dalla riga di comando)</li>
      <li>Impostare un ambiente CI (questo dipende da come si intende costruire i giochi); suggeriamo di usare <a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a></li>
      <li>Impostare il task CI e assicurarsi che tutti i prerequisiti siano impostati (cioè <span class="notranslate">source control</span> sync to your project)</li>
      <li>Agganciare il file batch nel task CI e testare nell'ambiente Jenkins</li>
    </ul>
    <h2>Note</h2>
    <ul class="colour">
      <li>Alcune piattaforme potrebbero avere problemi con la lunghezza del vostro file <span class="notranslate">paths</span>, nel qual caso avrete bisogno di <span class="inline"><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/subst" title="subst documentation">subst</a></span> unità virtuali sul vostro PC (come fa <span class="notranslate">IDE</span> ) prima di passarle nei vostri comandi</li>
      <li>Alcune piattaforme (in particolare <span class="notranslate">Android</span>) automaticamente <span class="inline">subst</span> un'unità durante la costruzione, quindi potrebbe essere necessario pulire manualmente in caso di errore</li>
    </ul>
    <h2>Opzioni</h2>
    <p>Ecco le opzioni che potete usare durante l'esecuzione dell'eseguibile di <strong>Igor </strong>:</p>
    <table>
      <colgroup>
        <col style="width: 316px;" />
        <col />
      </colgroup>
      <tbody>
        <tr>
          <th style="">Opzione</th>
          <th style="">Descrizione</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">La cartella utente usata per recuperare le informazioni sulla licenza
            <br>
            <br>
            Su <span class="notranslate">Windows</span>, questa sarà: <span class="inline"><span>%appdata%\GameMaker\&lt;user_name&gt;_&lt;number&gt;</span>
            <br>
            Su <span class="notranslate">macOS</span>, questo sarà: <span class="inline"><span>~/.config/GameMaker/&lt;user_name&gt;_&lt;number&gt;</span> </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">La cartella principale del runtime</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/project=[project_YYP_file]</span></td>
          <td style="">Il completo <span class="notranslate">path</span> al file <span class="inline">.yyp</span> del progetto</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/cache=[cache_dir_path]</span></td>
          <td style="">La directory <span class="notranslate">cache</span> da usare (l'impostazione predefinita è <span class="inline">\cache</span> nella directory corrente)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/temp=[temp_dir_path]</span></td>
          <td style="">La directory temporanea da usare (predefinita: <span class="inline">c:\temp</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/of=[output_folder_filename]</span></td>
          <td style="">La directory di output dove la compilazione sarà estratta; non specificare solo una directory perché la voce finale viene sempre rimossa (ad esempio: specificando <span class="inline">d:\game\output</span> i file di gioco saranno collocati in <span class="inline">d:\game</span>)
            <br>
            <br>
            Se questo non è specificato, verrà creata una directory chiamata <span class="inline">output</span> nella stessa directory del file <span class="inline">.bat</span> (o da dove il comando viene eseguito), contenente i file di build estratti </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/tf=[target_file]</span></td>
          <td style="">Il nome effettivo del file ZIP o del programma di installazione NSIS che viene creato</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/config=[configName]</span></td>
          <td style="">Il nome della configurazione da usare (predefinito: <span class="inline">Default</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/runtime=YYC|VM</span></td>
          <td style="">Il tipo di uscita (YYC o VM), di default VM</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/j=[NumCPUs]</span></td>
          <td style="">Il numero di CPU da utilizzare durante il processo di compilazione</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name_from_IDE]</span></td>
          <td style="">Il nome del dispositivo di destinazione come impostato nell'IDE</td>
        </tr>
      </tbody>
    </table>
    <h2>Esempi</h2>
    <p>Qui sotto potete trovare esempi di comandi di compilazione per tutte le piattaforme:</p>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#">Opera GX</a></p>
    <div class="droptext" data-targetname="drop-down12">
      <p>Pulizia del progetto Opera GX:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Clean</p>
      <p>Esecuzione di Opera GX:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Run</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Windows</a></p>
    <div class="droptext" data-targetname="drop-down">
      <p>Progetto di pulizia <span class="notranslate">Windows</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>Costruire VM per <span class="notranslate">Windows</span> -- <span class="inline">Run</span>, <span class="inline">PackageZip </span>e <span class="inline">PackageNsis</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageNsis</p>
      <p>Costruire YYC per Windows-- <span class="inline">Run</span>, <span class="inline">PackageZip </span>e <span class="inline">PackageNsis</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /platform=YYC -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageNsis</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">macOS</a></p>
    <div class="droptext" data-targetname="drop-down1">
      <p>Progetto di pulizia <span class="notranslate">macOS</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Mac Clean</p>
      <p>Costruire VM per <span class="notranslate">macOS</span> su un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Mac Package</p>
      <p><strong>Notate</strong> che su Mac avrete bisogno di usare mono per eseguire Igor, quindi dovrete scrivere <span class="inline"><strong>mono</strong></span> prima di tutti i vostri comandi, per esempio: <span class="inline">mono Igor.exe [options]</span></p>
      <p>Costruire VM per <span class="notranslate">macOS</span> su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Mac Package</p>
      <p>Costruire YYC per <span class="notranslate">macOS</span> su un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Mac Package</p>
      <p>Costruire YYC per <span class="notranslate">macOS</span> su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Mac Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Linux / Ubuntu</a></p>
    <div class="droptext" data-targetname="drop-down2">
      <p>Progetto di pulizia <span class="notranslate">Linux</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Linux Clean</p>
      <p>Costruire VM per <span class="notranslate">Linux</span> su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Linux Package</p>
      <p>Costruire YYC per <span class="notranslate">Linux</span> su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Linux Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">HTML5</a></p>
    <div class="droptext" data-targetname="drop-down3">
      <p>Pulizia del progetto HTML5:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- HTML5 Clean</p>
      <p>Costruire la cartella HTML5 (assicurarsi di specificare una cartella di destinazione con <span class="inline">/tf)</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_folder] -- HTML5 folder</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">iOS</a></p>
    <div class="droptext" data-targetname="drop-down4">
      <p>Costruire VM per <span class="notranslate">iOS</span> su un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- ios Package</p>
      <p>Costruire VM per <span class="notranslate">iOS</span> su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ios Package</p>
      <p>Costruire YYC per <span class="notranslate">iOS</span> su un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- ios Package</p>
      <p>Costruire YYC per <span class="notranslate">iOS</span> su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ios Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">Android</a></p>
    <div class="droptext" data-targetname="drop-down5">
      <p>Progetto di pulizia <span class="notranslate">Android</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>Costruire un <span class="notranslate">Android</span> APK usando la VM:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Android Package</p>
      <p>Costruire un <span class="notranslate">Android</span> APK usando YYC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Android Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">tvOS</a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p>Progetto di pulizia <span class="notranslate">tvOS</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- tvos Clean</p>
      <p>Costruire VM per <span class="notranslate">tvOS</span> su un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- tvos Package</p>
      <p>Costruire VM per <span class="notranslate">tvOS</span> su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- tvos Package</p>
      <p>Costruire YYC per <span class="notranslate">tvOS</span> su un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- tvos Package</p>
      <p>Costruire YYC per <span class="notranslate">tvOS</span> su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- tvos Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">PS4</a></p>
    <div class="droptext" data-targetname="drop-down7">
      <p>Progetto PS4 per la pulizia:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps4 Clean</p>
      <p>Costruire una VM per PS4 su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps4 Package</p>
      <p>Costruire YYC per PS4 su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps4 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#">PS5</a></p>
    <div class="droptext" data-targetname="drop-down10">
      <p>Pulizia del progetto PS5:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps5 Clean</p>
      <p>Costruire una VM per PS5 su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps5 Package</p>
      <p>Costruire YYC per PS5 su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps5 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">Xbox One</a></p>
    <div class="droptext" data-targetname="drop-down8">
      <p>Pulizia del progetto Xbox One:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOne Clean</p>
      <p>Costruire una VM per Xbox One su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOne Package</p>
      <p>Costruire YYC per Xbox One su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOne Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#">Xbox Serie X/S</a></p>
    <div class="droptext" data-targetname="drop-down11">
      <p>Pulizia del progetto Xbox Series X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOneSeriesXS Clean</p>
      <p>Costruire VM per Xbox Series X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
      <p>Costruire YYC per Xbox Series X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#">Interruttore</a></p>
    <div class="droptext" data-targetname="drop-down9">
      <p>Progetto di pulizia <span class="notranslate">Switch</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Switch Clean</p>
      <p>Costruire VM per <span class="notranslate">Switch</span> su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Switch Package</p>
      <p>Costruire VM per YYC su un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Switch Package</p>
    </div>
    <p> </p>
    <h1>Igor Runtime</h1>
    <p>Ecco le opzioni che possono essere utilizzate con il runtime Igor:</p>
    <table>
      <tbody>
        <tr>
          <th style="">Opzione</th>
          <th style="">Descrizione</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Impostare la cartella utente usata per recuperare le informazioni sulla licenza in modo che <span data-keyref="GameMaker Name">GameMaker</span> sappia quali moduli possono essere installati</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">Impostare il diretto <span class="notranslate">path</span> a un file di licenza, può essere usato come alternativa all'impostazione di una cartella utente (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/ru=[runtime_url]</span></td>
          <td style="">Impostare l'URL da cui recuperare le informazioni di <span class="notranslate">runtime</span> (predefinito il rilascio stabile)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">Impostare la cartella di installazione locale di <span class="notranslate">runtime</span> per elencare il <span class="notranslate">runtimes</span> installato o installare nuovi runtime</td>
        </tr>
      </tbody>
    </table>
    <p>Ecco i comandi che possono essere utilizzati con il runtime Igor:</p>
    <h4>Sintassi:</h4>
    <p class="code">Igor.exe [command]</p>
    <table>
      <colgroup>
        <col style="width: 237px;" />
        <col style="width: 537px;" />
      </colgroup>
      <tbody>
        <tr>
          <th style="">Comando</th>
          <th style="">Descrizione</th>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime List</span></td>
          <td style="">Elenca i <span class="notranslate">runtimes</span> disponibili su un feed (numero di versione, data/ora di compilazione)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime ListInstalled [directory]</span></td>
          <td style="">Elenca il <span class="notranslate">runtimes</span> disponibile nella cartella corrente (<span class="inline">directory</span>=completo <span class="notranslate">path</span> alla cartella)
            <br>
            <br>
            È possibile specificare una directory in cui cercare, ma se non viene specificato, il default è la directory corrente
            <br>
            <br>
            Questo controlla anche se c'è un file <span class="inline">receipt.json</span> e una cartella <span class="inline">manifest</span> all'interno della directory (assicurandosi che sia effettivamente una <span class="notranslate">runtime</span>) </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Info [version]</span></td>
          <td style="">Stampa informazioni sul più recente <span class="notranslate">runtime</span> sul feed dato; ha anche bisogno di un file di licenza per mostrare informazioni sui moduli disponibili per l'utente
            <br>
            <br>
            <span class="inline">version</span> può essere un <span class="notranslate">string</span> usato per cercare tra i titoli dei feed (ad esempio: <span class="inline">&quot;739&quot;</span> mostrerebbe informazioni per tutte le build contenenti 739 nei loro numeri di versione), oppure può essere <span class="inline">all</span> per mostrare informazioni per tutti i feed
            <br>
            <br>
            Elencherà i moduli con i nomi dei file <span class="inline">.zip</span> per ogni modulo </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Install [version]</span></td>
          <td style="">Installa l'ultimo <span class="notranslate">runtime</span> dal feed dato usando il dato <span class="inline">version</span> come filtro di ricerca; se questo non è specificato, ha come default l'ultima versione. Otterrà tutti i moduli che l'utente ha sulla sua licenza.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Verify [folder=.]</span></td>
          <td style="">Calcola le checksum per tutti i file installati e le confronta con le checksum scritte nel manifest <span class="inline">folder</span>. È possibile specificare una cartella da controllare, ma se non viene specificata, il calcolo si basa sulla directory corrente.
            <br>
            <br>
            Questo segnalerà tutti i file in cui le checksum non corrispondono, i file che mancano e quelli che non dovrebbero essere presenti.
            <br>
            <br>
            Si noti che i file manifest stessi non sono verificati e un utente può alterare i file manifest per farli corrispondere a quelli installati. </td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <h1>Test di Igor</h1>
    <p>Ecco le opzioni che possono essere utilizzate per testare le vostre build con Igor:</p>
    <table>
      <tbody>
        <tr>
          <th style="">Opzione</th>
          <th style="">Descrizione</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Impostare la cartella utente usata per recuperare le informazioni sulla licenza in modo che <span data-keyref="GameMaker Name">GameMaker</span> sappia quali moduli possono essere installati</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">Imposta un <span class="notranslate">path</span> diretto a un file di licenza, può essere usato come alternativa all'impostazione di una cartella utente (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/df=[device_file]</span></td>
          <td style="">Imposta un <span class="notranslate">path</span> diretto a un file <span class="inline">devices.json</span>, può essere usato come alternativa all'impostazione di una cartella utente (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/timeout=[number_of_seconds_to_wait]</span></td>
          <td style="">Il timeout da usare per il test in secondi, il valore predefinito è 120 secondi; il test sarà fermato dopo questo timeout e sarà segnato come fallito</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/waittime=[number_of_seconds_to_wait]</span></td>
          <td style="">Numero di secondi da aspettare nel principale <span class="notranslate">loop</span> prima di dichiarare il test come superato, l'impostazione predefinita è 30 secondi</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name]</span></td>
          <td style="">Usato per cercare il nome del dispositivo nel file <span class="inline">devices.json</span> della cartella utente</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/target=[list_of_targets]</span></td>
          <td style="">Elenco separato da virgole di obiettivi nel formato <span class="inline">PLATFORM|DEVICE</span>, ad esempio: <span class="inline">/target=&quot;Windows|Local,HTML|Firefox&quot;</span>
            <br>
            <br>
            Se si specifica <strong>all</strong>, i test tenteranno di essere eseguiti per ogni dispositivo nel file <span class="inline">devices.json</span> </td>
        </tr>
      </tbody>
    </table>
    <p>C'è un comando che potete usare per eseguire dei test con Igor:</p>
    <p class="code">Igor.exe Tests RunTests [test_directory/test_filename]</p>
    <p>Dovete specificare o una directory di prova o un nome di file di prova.</p>
    <ul class="colour">
      <li>Se è una directory, Igor cercherà un file chiamato <span class="inline">tests.json</span> nella directory
        <ul>
          <li>Se il file <strong>non viene trovato</strong>, Igor cercherà ricorsivamente i file <span class="inline">.yyz</span> e <span class="inline">.yyp</span> nella directory
            <ul>
              <li>Ogni progetto trovato sarà costruito ed eseguito su Windows</li>
              <li>Aspetterà finché il corridore non raggiunge il ciclo principale
                <ul>
                  <li>Il test passa se il runner è ancora in esecuzione dopo il tempo di attesa</li>
                  <li>Il test fallisce se il progetto non viene compilato entro il periodo di timeout, o va in crash prima che il tempo di attesa sia finito</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>Se <strong>viene trovato</strong> un file <span class="inline">tests.json</span>, Igor eseguirà i test descritti nel file (vedi esempio qui sotto)</li>
        </ul>
      </li>
      <li>In alternativa, si può fornire un <span class="notranslate">path</span> diretto a un file <span class="inline">tests.json</span> invece di una directory</li>
    </ul>
    <p> </p>
    <h1>File Tests.json</h1>
    <h2>Formato</h2>
    <p>Il file <span class="inline">tests.json</span> deve avere il seguente formato:</p>
    <ul class="colour">
      <li>Il file JSON dovrebbe contenere un array di oggetti</li>
      <li>Ogni <span class="notranslate">object</span> dovrebbe descrivere un test
        <ul>
          <li>Il test <span class="notranslate">object</span> deve contenere queste chiavi:
            <ul>
              <li><span class="inline">name</span>: Un nome usato per segnalare se il test è passato o fallito</li>
              <li><span class="inline">path</span>: Un <span class="notranslate">path</span> ad un file o cartella <span class="inline">.yyp</span>, <span class="inline">.yyz</span>, <span class="inline">.gml</span>, <span class="inline">.js</span> per il test</li>
              <li><span class="inline">command</span>: Il comando Igor per il test (<span class="inline">Run</span>, <span class="inline">CreatePackage</span>, ecc. come descritto sopra)</li>
            </ul>
          </li>
          <li>Il test <span class="notranslate">object</span> può anche contenere queste chiavi:
            <ul>
              <li><span class="inline">platform</span>: Passato direttamente a Igor per fare il test</li>
              <li><span class="inline">device</span>: Il nome del dispositivo dal file <span class="inline">devices.json</span> </li>
              <li><span class="inline">target</span>: L'obiettivo in un formato &quot;<span class="inline">PLATFORM|TARGET&quot;</span>, per esempio: &quot;<span class="inline">Windows|Local&quot;</span></li>
              <li><span class="inline">timeout</span>: Un timeout per l'intero test, compresa la compilazione e l'esecuzione; se superato, il test sarà fermato e contrassegnato come fallito</li>
              <li><span class="inline">waittime</span>: Il tempo di attesa dopo l'ingresso nel sito principale <span class="notranslate">loop</span> prima di decidere se il test è stato superato</li>
              <li><span class="inline">owner</span>l'indirizzo e-mail dell'utente che sarà inviato per e-mail se questo test fallisce</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
    <h2>Esempio</h2>
    <p>Ecco un esempio di un file <span class="inline">tests.json</span>:</p>
    <p class="code">[
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Game Idea Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/scratch/GameIdea.yyz&quot;,
      <br/>
      &quot;platform&quot; : &quot;Windows&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;timeout&quot; : &quot;500&quot;,
      <br/>
      &quot;waittime&quot; : &quot;30&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Platformer Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Platformer Game/PlatformerGame.yyp&quot;,
      <br/>
      &quot;target&quot; : &quot;Windows|Local,HTML5|selenium:firefox,PS4|Default&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Puzzle Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Puzzle Game/PuzzleGame.yyp&quot;,
      <br/>
      &quot;platform&quot; : &quot;HTML5&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;device&quot; : &quot;selenium:chrome&quot;
      <br/>
      }
      <br/>
      ]</p>
    <p> </p>
    <p> </p>
    <div class="footer">
      <div class="buttons">
        <div class="clear">
          <div style="float:left">Indietro: <a data-xref="{title}" href="Runner_Details/Runner_Details.htm">Corridore e compilatore</a></div>
          <div style="float:right">Prossimo: <a data-xref="{title}" href="Runner_Details/Compiler_Batch_Files.htm">File batch del compilatore / script</a></div>
        </div>
      </div>
      <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
    </div>
    <!-- KEYWORDS
Building via Command Line
CLI
Command Line Interface
CI
Continuous Integration
--><!-- TAGS
building_via_command_line
--></body>
</html>