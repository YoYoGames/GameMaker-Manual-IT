<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Funzioni dello script del blocco d'azione</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Article explaining how to make action block script functions" />
  <meta name="rh-index-keywords" content="GML Visual Overview - Action Block Script Functions" />
  <meta name="search-keywords" content="GML Visual Scripts" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Funzioni dello script del blocco d'azione</h1>
  <p>Uno dei più importanti <span class="notranslate">assets</span> nell'<a href="../../Introduction/The_Asset_Browser.htm">Asset Browser</a> è lo <a href="../../The_Asset_Editors/Scripts.htm">Script</a> <span class="notranslate">asset</span>. <span class="notranslate">Scripts</span> sono speciali <span class="notranslate">assets</span> in quanto sono essenzialmente &quot;contenitori&quot; per funzioni definite dall'utente e non sono essi stessi chiamati direttamente da voi nei vostri giochi. Tutti i <span class="notranslate">scripts</span> sono <strong>globali</strong> e saranno eseguiti automaticamente da <span class="notranslate">GameMaker</span> all'avvio del gioco, quindi potete usarli per definire variabili globali e funzioni che volete usare nel vostro gioco.</p>
  <p>Ogni <span class="notranslate">GML</span> Visual <span class="notranslate">script</span> può avere una o più funzioni definite dall'utente aggiunte ad esso, e queste funzioni sono create utilizzando l'azione <a href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm">Declare A New Function</a>:</p>
  <p><img>Le funzioni che definite qui saranno globali e agiranno come qualsiasi azione incorporata in <span class="notranslate">GML</span> Visual, cioè: possono prendere diversi valori - o nessuno - chiamati<span class="glossextra">argomenti</span> (o parametri), e poi eseguire un compito, restituendo un valore o non restituendo nulla come richiesto. Dovreste quindi chiamare la funzione nei vostri giochi usando l'azione <a href="../Drag_And_Drop_Reference/Common/Function_Call.htm">Function Call</a> <img>, che assomiglia a questa:</p>
  <p><img>Per creare un <span class="notranslate">GML</span> Visual <span class="notranslate">script</span>, basta usare il tasto destro del mouse <img> in qualsiasi punto del Browser <span class="notranslate">Asset</span> e selezionare <strong>Create </strong>then <strong>Script</strong>. Questo creerà un nuovo <span class="notranslate">GML</span> Visual <span class="notranslate">script</span> e aprirà la finestra dell'editor:</p>
  <p><img>Potete dare un nome a <span class="notranslate">script</span> cliccando con il tasto destro del mouse <img> su di esso nel Browser <span class="notranslate">Asset</span> e selezionando <strong>Rename </strong>(o usando un lento doppio clic sinistro <img>), ma notate che il nome <span class="notranslate">script</span> deve essere conforme alle regole generali per <span class="notranslate">assets</span>, quindi deve iniziare con una lettera e contenere solo lettere, numeri o il simbolo &quot;_&quot; sotto la barra. Il vostro <span class="notranslate">script</span> sarà anche precompilato con un'azione <strong>Declare A New Function</strong>, pronto per essere compilato, e potete aggiungere altre dichiarazioni di funzioni come richiesto (un singolo <span class="notranslate">script</span> può contenere più funzioni, il che è utile per raggruppare insieme funzioni con un uso simile o collegato).</p>
  <p>Come detto sopra, potete passare un certo numero di argomenti a una funzione, ed essa li userà per eseguire il compito per cui l'avete scritta. Per capirlo meglio, prendete - per esempio - una qualsiasi delle azioni incorporate e pensate a come funziona... la inserite in un evento e fornite un certo numero di valori ed essa farà fare qualcosa alla vostra istanza. Le funzioni definite dall'utente sono esattamente la stessa cosa, con l'unica differenza che le scrivete <em>voi </em>.</p>
  <p>Quando si definisce una nuova funzione, le si dà un nome e si definisce anche il nome di tutti gli argomenti che prende, se ne prende (le funzioni possono non prendere argomenti o prenderne di multipli a seconda di ciò che si richiede). Se date i nomi degli argomenti, questi saranno usati nelle azioni che la funzione chiama come <strong>variabili locali </strong>che contengono i valori di input della funzione.</p>
  <p>È anche buona pratica aggiungere un commento per l'azione che spiega cosa fa, seguendo le <a href="../../The_Asset_Editors/Code_Editor_Properties/JSDoc_Script_Comments.htm">regole di JS Doc</a>. Per esempio, considerate questa funzione <span class="inline">set_vec()</span>:</p>
  <p><img>Per chiamare il <span class="notranslate">script</span> di cui sopra dovreste semplicemente usare l'azione <strong>Call Function</strong>, come questa:</p>
  <p><img>Non solo potete passare argomenti in una funzione, ma potete anche chiedere a una funzione di restituire un valore (usando l'azione <a href="../Drag_And_Drop_Reference/Common/Return.htm">Return</a> <img> ), così potete usarle per (per esempio) costruire metodi di calcolo o restituire un ID di istanza dopo un rilevamento di collisione complesso o un numero qualsiasi di cose. Si prega di notare, tuttavia, che l'uso di return <strong>termina la funzione</strong>, e quindi nessuna azione posta dopo che è stata utilizzata sarà eseguita, e questo significa che una certa quantità di pensiero deve andare in come le vostre funzioni sono strutturate.</p>
  <p>Qui sotto c'è una funzione <span class="notranslate">GML</span> Visual che restituisce un valore:</p>
  <p><img alt="Declare A New Function Syntax" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Common/a_Common_Declare_Function.png" /></p>
  <p>La funzione di cui sopra controlla semplicemente tutte le istanze in un <span class="notranslate">room</span> per vedere quale sia il loro <span class="inline">object_index</span> e se una di esse è il giocatore <span class="notranslate">object</span> la funzione restituirà <span class="inline">true</span> (terminando la chiamata della funzione) o <span class="inline">false</span>. Chiamereste questa funzione in questo modo:</p>
  <p><img>Quindi, chiamiamo la funzione e le facciamo creare una variabile temporanea (locale) per memorizzare il valore restituito (che in questo caso è o <span class="inline">true</span> o <span class="inline">false</span>), e poi questa variabile viene controllata e viene intrapresa un'azione.</p>
  <p>Potete anche rendere gli argomenti opzionali e definire un valore predefinito, così nel caso in cui non vengano forniti in una chiamata di funzione verrà usato invece il valore predefinito. Vedere l'<a data-xref="{text}" href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm#h">esempio esteso 2</a> dell'azione per maggiori informazioni.</p>
  <p>Quando create funzioni per il vostro <span class="notranslate">GML</span> Visual <span class="notranslate">scripts</span> potete usare tutte le stesse azioni che usereste quando aggiungete azioni in un evento <span class="notranslate">object</span>, e potete anche chiamare funzioni da dentro funzioni, e in questo modo creare un codice d'azione più &quot;modulare&quot;. Costruire <span class="notranslate">scripts</span> con le funzioni in questo modo può farvi risparmiare molto tempo creando la stessa azione <span class="notranslate">sequences</span> e può anche aiutare a rendere la vostra azione <span class="notranslate">sequences</span> più facile da leggere e più facile da debug.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../../Content.htm">Indice</a></div>
        <div style="float:right">Avanti: <a href="Changing_DnD_To_Code.htm">Cambiare <span class="notranslate">GML</span> Visual in codice</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
GML Visual Scripts
-->
  <!-- TAGS
drag_and_drop_scripts
-->
</body>
</html>