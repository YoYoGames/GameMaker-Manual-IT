<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Mentre</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains the While action" />
  <meta name="rh-index-keywords" content="GML Visual Action - While" />
  <meta name="search-keywords" content="While" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><img> Mentre</h1>
  <p>L'azione <b>While</b> è usata per eseguire <span class="notranslate">loops</span> che terminano solo quando una specifica condizione ritorna <span class="inline">true</span>. Per esempio, potete usare una variabile e impostarla su <span class="inline">false</span> poi eseguire il While <span class="notranslate">loop</span> e fargli controllare questa variabile, poi a
    un certo momento in <span class="notranslate">loop</span> impostate la variabile su <span class="inline">true</span> e il <span class="notranslate">loop</span> terminerà. Notate che non importa dove impostate la condizione all'interno del while <span class="notranslate">loop</span>, <i>tutte le</i> azioni all'interno di <span class="notranslate">loop</span> saranno eseguite fino alla fine prima che il resto dello script
    o evento continui, cambiando la condizione non si esce istantaneamente da <span class="notranslate">loop</span>.</p>
  <p>Quando aggiungete un'azione While nel vostro codice, dovete fornire la variabile da controllare, che tipo di controllo eseguire (minore di, maggiore di, uguale, ecc...), e il valore con cui controllare la variabile (potete anche segnalare di <i>non</i> avere la funzione While
    <span class="notranslate">loop</span> per vedere se la condizione <i>non</i> è vera). Si aggiungono poi le azioni da eseguire all'interno del While <span class="notranslate">loop</span>, proprio come si aggiungerebbe un'azione ad un &quot;if&quot;, cioè: lasciandola a lato dell'azione piuttosto che sotto di essa:</p>
  <p><img>Tutte le azioni aggiunte al lato saranno incluse nel While e saranno eseguite prima che l'evento o lo script
    continui con le azioni aggiunte sotto (come mostrato nell'esempio qui sotto). Si noti che è possibile terminare prematuramente qualsiasi <span class="notranslate">loop</span> se si chiama l'azione <a href="Break.htm">Break</a>.</p>
  <p> </p>
  <h4>Sintassi dell'azione:</h4>
  <p><img alt="While Icon" class="icon" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Loops/i_Loops_While.png" /></p>
  <h4>Argomenti:</h4>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">Variable</span></td>
        <td>La variabile da usare nel controllo</td>
      </tr>
      <tr>
        <td><span class="notranslate">Is</span></td>
        <td>Il tipo di valutazione da eseguire (minore di, maggiore di, uguale a, maggiore o uguale a e minore o uguale a)</td>
      </tr>
      <tr>
        <td><span class="notranslate">Value</span></td>
        <td>Il valore con cui controllare la variabile</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Esempio:</h4>
  <p><img>Il codice del blocco d'azione di cui sopra crea una variabile locale temporanea e la imposta su <span class="inline">false</span>. Questa variabile viene
    poi controllata nell'azione While <span class="notranslate">loop</span> e mentre restituisce false il <span class="notranslate">loop</span> verrà eseguito. In <span class="notranslate">loop</span> otteniamo due variabili locali temporanee per una posizione x/y casuale in <span class="notranslate">room</span> poi controlliamo quella posizione per una collisione. Se non viene trovata nessuna collisione, la variabile iniziale
    iniziale viene impostata su <span class="inline">true</span>, terminando la <span class="notranslate">loop</span>. Dopo che la <span class="notranslate">loop</span> è terminata viene creata una nuova istanza nella posizione casuale che abbiamo scoperto non avere collisioni.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Loop_Actions.htm">Azioni in loop</a></div>
        <div style="float:right">Il prossimo: <a href="For.htm">Per</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
Action - While
-->
  <!-- TAGS
action_while_loop
-->
</body>
</html>