<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Registrazione audio</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Audio Recording async event." />
  <meta name="rh-index-keywords" content="Objects - Async Audio Recording Event" />
  <meta name="search-keywords" content="Audio Recording,ev_audio_recording" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Registrazione audio</h1>
  <p><img>Questo evento può essere innescato solo dalla <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_start_recording.htm"><span class="inline">audio_start_recording()</span></a> funzione
    e restituirà una <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">mappa DS</a> memorizzata nella variabile <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>,
    contenente diverse coppie chiave/valore a seconda del <a class="glossterm" data-glossterm="callback" href="Dialog.htm#">callback</a> della funzione che ha innescato l'evento.</p>
  <p>Le seguenti chiavi saranno disponibili nella ds_map:</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">buffer_id</span>&quot; - l'ID del <a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">buffer</a> temporaneo da usare per recuperare i dati audio</li>
    <li class="dropspot">&quot;<span class="inline">channel_index</span>&quot; - l'indice del canale di registrazione come restituito dalla funzione chiamante da cui provengono questi dati</li>
    <li class="dropspot">&quot;<span class="inline">data_len</span>&quot; - la lunghezza dei dati (in byte) che avete ricevuto</li>
  </ul>
  <p class="note"><strong>NOTA</strong>: come detto all'inizio di questa pagina, la variabile <span class="inline" style="font-size: 14px">async_load </span>è valida solo negli eventi asincroni, poiché la mappa DS a cui punta viene creata all'inizio dell'evento,
    poi cancellata di nuovo alla fine. Tuttavia, nota che anche il temporaneo <span class="notranslate">buffer</span> in cui tutto l'audio è memorizzato con la mappa sarà rimosso alla fine dell'evento, quindi dovresti copiarlo in un <span class="notranslate">buffer</span> personalizzato se vuoi tenerlo per un uso successivo.</p>
  <p>Nell'esempio d'uso che segue creeremo un <span class="notranslate">buffer</span> personalizzato per memorizzare il nostro audio registrato, e anche impostare il nostro gioco per registrare dalla sorgente di ingresso 0:</p>
  <p class="code">channel_index = audio_start_recording(0);<br/> audio_buffer = buffer_create(len, buffer_fast, 1);</p>
  <p>Ogni passo di gioco ora che la registrazione viene rilevata attiverà un evento di registrazione audio asincrono in cui è possibile gestire l'input registrato in modo simile:</p>
  <p class="code">var channel = async_load[? &quot;channel_index&quot;];<br/> if channel == channel_index<br/>    {<br/>    len = async_load[? &quot;data_len&quot;];<br/>    buffer_copy(async_load[? &quot;buffer_id&quot;], 0, len, audio_buffer, 0);<br/>    }</p>
  <p>Qui controlliamo semplicemente la chiave &quot;channel_index&quot; per assicurarci che corrisponda al valore restituito quando abbiamo iniziato la registrazione, e se è così copiamo il contenuto del temporaneo <span class="notranslate">buffer</span> creato per questo evento nel nostro <span class="notranslate">buffer</span> personalizzato. Dopo di che è possibile
    fare quello che volete con il <span class="notranslate">buffer</span> personalizzato - potreste riprodurlo usando le funzioni audio dedicate di <span class="notranslate">buffer</span>, potreste elaborarlo e inviarlo in rete, potreste salvarlo su disco... Una volta che hai il tuo audio registrato in un <span class="notranslate">buffer</span>, puoi fare praticamente
    qualsiasi cosa vogliate.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Async_Events.htm">Eventi asincroni</a></div>
        <div style="float:right">Il prossimo: <a href="Cloud.htm">Cloud</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Recording Event
ev_audio_recording
-->
  <!-- TAGS
ev_audio_recording
-->

</body></html>