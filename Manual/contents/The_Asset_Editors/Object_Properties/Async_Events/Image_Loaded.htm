<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Immagine caricata</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Image Loaded async event." />
  <meta name="rh-index-keywords" content="Objects - Async Image Loaded Event" />
  <meta name="search-keywords" content="Image Loaded,ev_web_image_load" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Immagine caricata</h1>
  <p><img>Questo evento viene attivato quando si carica un'immagine in <span data-keyref="GameMaker Name">GameMaker</span> o su HTML5, o attraverso un <a class="glossterm" data-glossterm="URL" href="#">URL</a>. Per esempio, diciamo che volete caricare un'immagine <span class="notranslate">sprite</span>, e cambiare l'attuale <span class="notranslate">sprite</span> per l'istanza con quella nuova solo dopo che è stata caricata. Avreste qualcosa del genere nell'evento Create (o in qualsiasi altro evento):</p>
  <p class="code">var _url = &quot;http://www.angusgames.com/game/background1.png&quot;;<br/> spr = sprite_add(_url, 0, false, false, 0, 0);</p>
  <p>Questo inizierà ora a caricare l'immagine nel dispositivo o nel browser, ma non bloccherà <span data-keyref="GameMaker Name">GameMaker</span> mentre aspetta che il file venga caricato. Invece <span data-keyref="GameMaker Name">GameMaker</span> continuerà a funzionare normalmente fino a quando l'immagine non sarà caricata e il <a class="glossterm" data-glossterm="callback" href="#">callback</a> innescherà l'<strong>evento Image Loaded</strong>, dove una <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> verrà creata e memorizzata nella variabile speciale
    <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>. La mappa contiene le seguenti informazioni:</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">filename</span>&quot;: Il completo <span class="notranslate">path</span> al file richiesto.</li>
    <li class="dropspot">&quot;<span class="inline">id</span>&quot;: L'ID della risorsa che avete caricato. Questo sarà lo stesso della variabile a cui avete assegnato la risorsa.</li>
    <li class="dropspot">&quot;<span class="inline">status</span>&quot;: Restituisce un valore inferiore a 0 per un errore.</li>
  </ul>
  <p>Si dovrebbe quindi assegnare l'immagine appena caricata a un <span class="notranslate">sprite</span> in questo evento. Il seguente esempio di codice dimostra come verrebbero utilizzate le informazioni restituite:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == spr<br/> {
    <br/>     if ds_map_find_value(async_load, &quot;status&quot;) &gt;= 0<br/>     {<br/>         sprite_index = spr;<br/>     }<br/> }
  </p>
  <p>Il codice di cui sopra controllerà prima il <span class="inline">id</span> della mappa DS che è stata creata, poi controllerà il <span class="inline">status</span> della callback. Se il valore è maggiore o uguale a 0 (segnalando il successo) il risultato di
    della callback sarà quindi utilizzato per impostare l'indice <span class="notranslate">sprite</span> all'immagine appena caricata.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Async_Events.htm">Eventi asincroni</a></div>
        <div style="float:right">Prossimo: <a href="Networking.htm">Networking</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Image Loaded Event
ev_web_image_load
-->
  <!-- TAGS
ev_web_image_load
-->

</body></html>