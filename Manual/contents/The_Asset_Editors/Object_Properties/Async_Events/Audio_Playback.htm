<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Riproduzione audio</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Audio Playback async event." />
  <meta name="rh-index-keywords" content="Objects - Async Audio Playback Event" />
  <meta name="search-keywords" content="Audio Playback,ev_audio_playback" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Riproduzione audio</h1>
  <p><img>Questo evento può essere attivato solo dalle funzioni di riproduzione della <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/Audio_Buffers.htm">coda audio</a> e restituirà una <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> memorizzata nella variabile <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"> <span class="inline">async_load</span></a>,
    contenente diverse coppie chiave/valore relative all'audio <span class="notranslate">queue</span> che ha fatto scattare l'evento. L'evento è innescato da un <a class="glossterm" data-glossterm="callback" href="#">callback</a> quando è stato selezionato un audio <span class="notranslate">queue</span> da riprodurre e un
    <span class="notranslate">buffer</span> in quell'audio <span class="notranslate">queue</span> ha finito di essere riprodotto.</p>
  <p>I seguenti tasti saranno disponibili nella mappa DS:</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">queue_id</span>&quot; - l'indice <span class="notranslate">queue</span> per il <span class="notranslate">queue</span> che ha finito di suonare, come restituito dalla funzione <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_create_play_queue.htm"><span class="inline">audio_create_play_queue()</span></a>.</li>
    <li class="dropspot">&quot;<span class="inline">buffer_id</span>&quot; - l'ID <span class="notranslate">buffer</span> per il <a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">buffer</a> da cui non viene più riprodotto.</li>
    <li class="dropspot">&quot;<span class="inline">queue_shutdown</span>&quot; - questo è impostato su 0 durante la riproduzione normale e su 1 quando l'evento è ricevuto perché <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_free_play_queue.htm"><span class="inline">audio_free_play_queue()</span></a> ha
      stato chiamato. Quando questo è impostato a 1, non vuoi <span class="notranslate">queue</span> ulteriori dati.</li>
  </ul>
  <p>Poiché un audio <span class="notranslate">queue</span> può essere creato da più <span class="notranslate">buffers</span>, questo evento può essere attivato più volte per un <span class="notranslate">queue</span> quando viene raggiunta la fine di ogni sezione di audio bufferizzato, da qui la chiave &quot;buffer_id&quot;.</p>
  <p class="note"><strong>NOTA</strong>: La variabile <span class="inline" style="font-size: 14px">async_load</span> è valida solo negli eventi asincroni, poiché la mappa DS a cui punta viene creata all'inizio dell'evento, poi cancellata di nuovo alla fine, con questa
    Tuttavia, tutte le ulteriori strutture dati create dall'evento devono essere ripulite utilizzando le funzioni appropriate.</p>
  <p>Nell'esempio d'uso dato qui sotto creeremo un audio <span class="notranslate">queue</span> con 10 suoni audio bufferizzati aggiunti ad esso e poi suoneremo la coda:</p>
  <p class="code">audio_queue = audio_create_play_queue(buffer_s16, 11052, audio_mono);<br/> for (var i = 0; i &lt; 10; i++;)<br/>    {<br/>    audio_queue_sound(audio_queue, audio_buffer[i], 0, buffer_get_size(audio_buffer[i]));<br/>    }<br/> audio_play_sound(audio_queue,
    0, true);</p>
  <p>Ogni passo di gioco ora che la registrazione viene rilevata attiverà un evento di registrazione audio asincrono in cui è possibile gestire l'input registrato in modo simile:</p>
  <p class="code">var queue = async_load[? &quot;queue_id&quot;];<br/> var num = 0;<br/> if queue = audio_queue<br/>    {<br/>    for (var i = 0; i &lt; 10; i++;)<br/>       {<br/>       if async_load[? &quot;buffer_id&quot;] == audio_buffer[i]<br/>          {<br/>  buffer_seek(audio_buffer[i],
    buffer_seek_start, 0);<br/>          num = i;<br/>          }<br/>       }<br/>    if num == 9<br/>       {<br/>       audio_stop_sound(audio_queue);<br/>       audio_free_play_queue(audio_queue);<br/>       }<br/>  }
  </p>
  <p>Qui controlliamo l'ID di <span class="notranslate">queue</span> e se è quello che vogliamo, controlliamo poi l'ID di <span class="notranslate">buffer</span> per vedere quale <span class="notranslate">buffer</span> ha finito di essere riprodotto. Poi impostiamo anche una var locale a quel valore di indice per il controllo successivo e impostiamo <span class="notranslate">buffer</span> di nuovo all'inizio per quel
    suono. Una volta che la nostra variabile locale raggiunge 9, indicando che il <span class="notranslate">queue</span> ha finito, fermiamo la riproduzione del suono e liberiamo il <span class="notranslate">queue</span>.</p>
  <p> </p>
  <div class="droptext" data-targetname="drop-down"> </div>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Async_Events.htm">Eventi asincroni</a></div>
        <div style="float:right">Prossimo: <a href="Audio_Recording.htm">Registrazione audio</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Playback Event
ev_audio_playback
Audio Playback
-->
  <!-- TAGS
ev_audio_playback
-->

</body></html>