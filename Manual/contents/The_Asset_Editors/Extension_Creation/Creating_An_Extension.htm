<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Creare un'estensione</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how to create a generic extension" />
  <meta name="rh-index-keywords" content="Extensions - Creating An Extension" />
  <meta name="search-keywords" content="creating extensions" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Creare un'estensione</h1>
  <p>Per creare un <span class="notranslate">extension</span>, è necessario fare clic con il tasto destro del mouse su <img> in un punto qualsiasi del <a href="../../Introduction/The_Asset_Browser.htm">Browser delle risorse</a> e selezionare <strong>Crea -&gt; Estensione</strong>. In questo modo si apriranno le proprietà di <span class="notranslate">Extension</span> per il nuovo <span class="notranslate">asset</span> nell'area di lavoro:</p>
  <p><img>Se non viene visualizzata, è possibile fare doppio clic sul sito <span class="notranslate">Extension</span> <span class="notranslate">asset</span> nel Browser <span class="notranslate">Asset</span> per aprire la finestra delle proprietà o per concentrarsi su di esso quando è già aperto.</p>
  <p>A questo punto è possibile aggiungere i file e le funzioni necessarie e dare un nome a <span class="notranslate">extension</span> (seguendo la solita convenzione che prevede solo lettere/numeri e nessun simbolo speciale tranne il trattino basso &quot;_&quot;). È anche possibile impostare il numero di versione di <span class="notranslate">extension</span>, se lo si desidera.</p>
  <p>Alla voce &quot;Copies To&quot; (Copie su) si possono scegliere le piattaforme su cui esportare questo <span class="notranslate">extension</span>. Per un semplice <span class="notranslate">GML</span> <span class="notranslate">extension</span> non è necessario preoccuparsi di questo aspetto, poiché funzionerà su tutte le piattaforme; tuttavia, se si sta creando un <span class="notranslate">extension</span> specifico per una piattaforma (come per <span class="notranslate">Android</span>), è necessario assicurarsi che <em>non</em> venga esportato su piattaforme non compatibili (come <span class="notranslate">iOS</span>, console, ecc.).</p>
  <h2>File segnaposto</h2>
  <p>Per aggiungere un file al nuovo <span class="notranslate">extension</span> è necessario fare clic sull'icona del menu <img> e selezionare un file segnaposto (&quot;Add Placeholder&quot;) o importare il file effettivo richiesto per la piattaforma di destinazione (&quot;Add File&quot;):</p>
  <p class="dropspot"><img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" /></p>
  <p>Un segnaposto &quot;generico&quot; è un file che può essere di qualsiasi tipo, tranne quelli richiesti dalle piattaforme specifiche (quindi nessun file <span class="inline">DLL</span> o <span class="inline">SO </span>, per esempio), e non sarà usato se non come file &quot;linker&quot; per collegare un insieme di funzioni o costanti con il dato <span class="notranslate">extension</span> (in genere è da usare solo con <span class="notranslate">iOS</span> e <span class="notranslate">Android</span> <span class="notranslate">extensions</span>, il che è spiegato nelle sezioni successive per questi target). Si possono anche aggiungere file segnaposto &quot;GML&quot; e &quot;JS&quot; per un uso più specifico.</p>
  <h2>Aggiunta di file</h2>
  <p>Normalmente non è necessario usare i segnaposto, a meno che non si stia costruendo per <span class="notranslate">iOS</span> e <span class="notranslate">Android</span>, quindi si deve scegliere l'opzione &quot;Add File&quot; per aggiungere uno dei seguenti file, a seconda della piattaforma di destinazione:</p>
  <ul class="colour">
    <li class="dropspot"><span class="inline">.gml</span>: Questo è un file realizzato solo con <span class="notranslate">GameMaker Language</span> ed è compatibile con tutte le piattaforme.</li>
    <li class="dropspot"><span class="inline">.js</span>: Questo è un formato JavaScript <span class="notranslate">extension</span> ed è compatibile solo con il target HTML5.</li>
    <li class="dropspot"><span class="inline">.dll</span>: Si tratta di un formato <span class="notranslate">extension</span> di libreria dynamic-link ed è compatibile solo con i target <span class="notranslate">Windows</span>, UWP e Xbox (ogni target avrà bisogno di un file <span class="inline">*.dll</span> diverso compatibile con le sue specifiche).</li>
    <li class="dropspot"><span class="inline">.dylib</span>: È l'equivalente Mac di una DLL ed è compatibile solo con il target Mac (non con <span class="notranslate">iOS</span>).</li>
    <li class="dropspot"><span class="inline">.so</span>: È l'equivalente <span class="notranslate">Linux</span> di una DLL ed è compatibile solo con il target <span class="notranslate">Ubuntu</span> (<span class="notranslate">Linux</span>).</li>
    <li class="dropspot"><span class="inline">.prx</span>: È un formato di file per aggiungere funzionalità al target PlayStation (ogni target avrà bisogno di un file <span class="inline">*.prx</span> diverso, compatibile con le sue specifiche).</li>
  </ul>
  <p>Si noterà che non c'è un tipo di file per <strong>Android </strong>o <strong>iOS</strong>, perché la loro configurazione è leggermente diversa. Più avanti troverete le spiegazioni su come configurarli, ma prima vediamo come creare un <span class="notranslate">GML</span> <span class="notranslate">extension</span> generale per qualsiasi piattaforma di destinazione, poiché il processo è lo stesso per tutte.</p>
  <h2>Creare un'estensione di <span class="notranslate">GML</span> </h2>
  <p>Per cominciare è necessario creare il file che verrà utilizzato. Nel caso di <span class="notranslate">GML</span> <span class="notranslate">extension</span>, si tratterebbe di un file di testo (salvato con <span class="inline">.gml</span> <span class="notranslate">extension</span>) e formattato in questo modo:</p>
  <p class="code">#define c_alice_blue<br />
    return make_color_rgb(240,248,255);<br />
    <br />
    <br />
    #define instance_create_colour<br />
    var i = instance_create_layer(argument0, argument1, argument2, argument3);<br />
    with (i)<br />
    {<br />
        image_blend = argument3;<br />
    }<br />
    return i;
  </p>
  <p>Come si può vedere, ogni sezione inizia con una chiamata a <span class="inline">#define</span>, che nell'esempio precedente viene utilizzata per definire due funzioni. Vediamo le singole parti di una funzione definita:</p>
  <ul class="colour">
    <li>L'istruzione <span class="inline">#define</span> viene utilizzata per definire una nuova funzione con il nome indicato;</li>
    <li>L'istruzione è seguita dal codice della funzione, che utilizza le variabili <span class="inline">argument0</span>, <span class="inline">argument1</span>, ecc. per accedere agli argomenti passati alla funzione quando questa viene chiamata;</li>
    <li>Alla fine abbiamo un'istruzione <a href="../../GameMaker_Language/GML_Overview/Language_Features/return.htm"><span class="notranslate">return</span></a> che serve a restituire i dati da <span class="notranslate">extension</span> al codice <span class="notranslate">GML</span>, dove è stata chiamata la funzione.</li>
  </ul>
  <p>Se si stesse scrivendo un file <span class="inline">DLL</span> o JavaScript <span class="notranslate">extension</span>, il processo sarebbe simile, ma nel linguaggio corretto per il formato del file dell'estensione.</p>
  <p>Una volta fatto ciò, è necessario aggiungere il file a <span class="notranslate">extension</span> (usando l'opzione &quot;Aggiungi file&quot;), che aprirà una nuova finestra per le proprietà del file in <span class="notranslate">Extensions</span> Properties:</p>
  <p class="dropspot"><img alt="Extension Properties" class="center" height="519" src="../../assets/Images/Asset_Editors/Editor_Extensions.png" width="486" /></p>
  <p>Qui si seleziona la piattaforma di destinazione per <span class="notranslate">extension</span> (per GML si selezionano tutte), si rinomina il file <span class="notranslate">extension</span> e si impostano alcuni altri dettagli, che verranno trattati tra poco.</p>
  <p class="note"><strong>NOTA</strong>: L'aggiunta di un file a <span class="notranslate">extension</span> lo copia nella directory del progetto, il che significa che qualsiasi ulteriore modifica deve essere apportata a quella copia perché sia visibile nel gioco. È possibile trovare la copia facendo clic con il pulsante destro del mouse su <span class="notranslate">extension</span> nel Browser <span class="notranslate">Asset</span> e selezionando &quot;Apri in Explorer&quot;.</p>
  <h2>Aggiunta di funzioni</h2>
  <p>L'editor dovrebbe essere automaticamente popolato con le funzioni incluse nel nostro file <span class="notranslate">GML</span>, ma se così non fosse, è possibile aggiungerle manualmente facendo clic sul pulsante del menu Funzioni <img> e selezionando quelle desiderate:</p>
  <p class="dropspot"><img alt="Estension Options Icon" class="icon" src="../../assets/Images/Icons/Icon_ExtensionMenu.png" /></p>
  <p>Selezionando &quot;Aggiungi funzione&quot; è possibile aggiungere una funzione a <span class="notranslate">extension</span>, che può essere richiamata in <span data-keyref="GameMaker Name">GameMaker</span> come una qualsiasi delle funzioni integrate. <span>Una volta aggiunta la funzione, si aprirà la seguente finestra per definire le proprietà della funzione (oppure si può fare doppio clic sulla funzione per aprirla):</span></p>
  <p class="dropspot"><img alt="Add Files To An Extension" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_Files.png" /></p>
  <p>Nell'immagine qui sopra abbiamo popolato l'editor di funzioni con i dettagli della funzione <span class="inline">instance_create_colour()</span> che abbiamo definito nel nostro file <span class="notranslate">GML</span> <span class="notranslate">extension</span> (si noti che questa finestra dell'editor di funzioni non è solo per definire le funzioni di <span class="notranslate">GML</span> - sarà la stessa per tutti i tipi di <span class="notranslate">extension</span> ). Esaminiamo ogni opzione che può essere definita per una funzione:</p>
  <ul class="colour">
    <li>Si può notare che abbiamo dato alla funzione un <em>nome</em>, che è quello che si userà quando si chiamerà la funzione nel progetto; si noti che questo nome non deve necessariamente corrispondere a quello usato in <span class="notranslate">extension</span>; si può dare un nome a piacere e poi usare il campo <em>Nome esterno</em> per collegarlo al nome effettivo definito nell'estensione:<img></li>
    <li>Al di sotto di questa sezione si trova la sezione per la definizione del testo <em>di aiuto </em>, che è il testo che verrà mostrato nel pop-up di completamento del codice e il testo di aiuto nella parte inferiore dell'editor di codice.</li>
    <li>Quindi si può definire il <em>tipo di ritorno</em>, che può essere un <strong>double </strong>(valore reale in <a class="glossterm" data-glossterm="in virgola mobile" href="#">virgola mobile</a> ) o una <strong>stringa</strong>; se la funzione esterna non restituisce nulla, questo non ha importanza.</li>
    <li>Sotto questo punto si definiscono gli argomenti che la funzione dovrà accettare. Questi argomenti possono essere <strong>doppi </strong>o <strong>stringhe</strong> e possono essere aggiunti facendo clic sul pulsante add <img> e rimossi facendo clic sul pulsante remove <img>.<br>
      <br>
      Se la funzione può accettare un numero variabile di argomenti (cioè ha alcuni argomenti opzionali), occorre selezionare la casella di controllo &quot;Variable Length Arguments&quot; in basso.
    </li>
  </ul>
  <p class="note"><strong>NOTA</strong>: Se la funzione fa parte di un <span class="notranslate">extension</span> nativo per <span class="notranslate">Windows</span>, Mac o <span class="notranslate">Ubuntu</span> (rispettivamente<span class="inline">dll</span>, <span class="inline">dylib</span> o <span class="inline">so</span> ) e ha più di quattro argomenti, <strong>tutti gli argomenti devono essere dello stesso tipo</strong>.</p>
  <p>Una volta fatto tutto ciò, la funzione è pronta per essere utilizzata nel progetto; ora apparirà nel completamento automatico e sarà anche colorata:</p>
  <p><img>Le funzioni definite possono anche essere impostate come <strong>funzioni iniziali</strong> o <strong>finali</strong>, il che significa che saranno richiamate automaticamente all'avvio del gioco (iniziali) e alla fine del gioco (finali).</p>
  <p class="note"><strong>IMPORTANTE!</strong> Tutte le piattaforme supportano la chiamata di funzione Init, <strong>ma non tutte le piattaforme eseguono la chiamata di funzione Final.</strong> Questo perché alcune piattaforme chiudono semplicemente l'applicazione senza dare alcun preavviso o tempo per la chiamata di questa funzione. Le piattaforme maggiormente interessate sono <strong>iOS</strong>, <strong>Android</strong>, <strong>HTML5</strong>, <strong>PlayStation </strong>e <strong>Xbox</strong>.</p>
  <h2>Macro</h2>
  <p>L'altra possibilità è quella di creare una <strong>macro</strong>. Una macro può essere un valore <a class="glossterm" data-glossterm="costante" href="#">costante</a> o un breve frammento di codice (per ulteriori informazioni sulle macro, vedere <a href="../../GameMaker_Language/GML_Overview/Variables/Constants.htm">qui</a>). Ad esempio, possiamo rimuovere la funzione <span class="inline">c_alice_blue</span> dalla nostra estensione <span class="notranslate">GML</span> definita in precedenza e trasformarla in una macro. Per creare una macro, è sufficiente fare clic sul pulsante &quot;Macro&quot; nelle proprietà di <span class="notranslate">Extension</span>, che aprirà la seguente finestra:</p>
  <p class="dropspot"><img alt="File Property Window" class="center" height="553" src="../../assets/Images/Asset_Editors/Editor_Extensions_FileProperties.png" width="1050" /></p>
  <p>L'editor è praticamente autoesplicativo: si fornisce il nome della macro e il suo valore costante, oppure una breve riga di codice. Si noti che se la macro è una riga di codice <strong>, essa verrà valutata ogni volta che viene richiamata</strong>.</p>
  <h2 id="h1">Creare le opzioni di <span class="notranslate">Extension</span> </h2>
  <p>Fare clic sull'icona a forma di ingranaggio accanto a &quot;<strong>Opzioni delle estensioni</strong>&quot; per creare o modificare le opzioni delle estensioni:</p>
  <p><img>Dopo aver fatto clic su &quot;<strong>Sì</strong>&quot; alla richiesta di conferma, verrà visualizzata una nuova finestra, in cui è possibile aggiungere nuove opzioni a <span class="notranslate">extension</span>:</p>
  <p><img>È possibile assegnare a ogni opzione di <span class="notranslate">extension</span> un nome, un valore predefinito e un <span class="notranslate">data type</span>. Il nome è quello che si usa internamente nel codice di <span class="notranslate">extension</span> per recuperare il valore dell'opzione.</p>
  <p>Oltre ad aggiungere opzioni con &quot;Aggiungi opzione&quot;, è possibile aggiungere sezioni con &quot;Aggiungi sezione&quot;. Una sezione <strong>non è</strong> un'opzione, ma solo un'intestazione visualizzata nella finestra principale dell'editor <span class="notranslate">Extension</span>. Si può usare questa funzione se si hanno molte opzioni e si vuole ripulire l'elenco delle opzioni che l'utente finale vede.</p>
  <p>È possibile creare i seguenti tipi di opzioni:</p>
  <ul class="colour">
    <li><strong>Booleano</strong>: Crea una casella di controllo vero/falso.</li>
    <li><strong>Numero</strong>: È un numero reale.</li>
    <li><strong>Stringa</strong>: Si tratta di un testo <span class="notranslate">string</span>.</li>
    <li><strong>Percorso del file</strong>: È l'indirizzo <span class="notranslate">path</span> di un file. Consente di utilizzare l'explorer del sistema operativo per cercare un file.</li>
    <li><strong>Percorso cartella</strong>: Si tratta di un <span class="notranslate">path</span> a una cartella/directory. Consente di utilizzare l'explorer del sistema operativo per cercare una cartella.</li>
    <li><strong>Elenco</strong>: Si tratta di un menu a tendina dal quale è possibile selezionare un singolo elemento da un elenco predefinito di elementi.</li>
  </ul>
  <p>È inoltre possibile fare clic sull'icona a forma di ingranaggio <img> accanto a un'opzione per assegnarle un <strong>nome di visualizzazione</strong> e una <strong>descrizione</strong> facoltativi (che vengono visualizzati come tooltip al passaggio del mouse sul nome di visualizzazione).</p>
  <p>Nella finestra degli extra, si può anche scegliere di esportare questa opzione nel file <strong>options.ini</strong> fornito con il gioco.</p>
  <p>Infine, si può scegliere di nascondere l'opzione dall'editor, rendendola invisibile all'utente finale che utilizza il sito <span class="notranslate">extension</span>.</p>
  <h3>Utilizzo delle opzioni di <span class="notranslate">Extension</span> </h3>
  <p>È possibile recuperare i valori delle opzioni di un'estensione all'indirizzo <span class="notranslate">runtime</span> utilizzando le <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Extensions/Extensions.htm">Funzioni di estensione</a>.</p>
  <p>È anche possibile recuperare le opzioni di <span class="notranslate">extension</span> nei <a data-xref="{title}" href="../../Settings/Runner_Details/Compiler_Batch_Files.htm">file batch e negli script del compilatore</a> usando il nome <span class="inline2">YYEXTOPT_&lt;NomeEstensione&gt;_&lt;NomeOpzione&gt;</span>.</p>
  <p>Le opzioni dell'estensione saranno disponibili in <span class="notranslate">runtime</span> solo se <span class="notranslate">extension</span> ha funzioni utilizzate in <span class="notranslate">runtime</span>. Tuttavia, le opzioni saranno sempre esportate nel file INI (se l'opzione è abilitata) e nel batch <span class="notranslate">scripts</span> indipendentemente dall'uso dell'estensione.</p>
  <h2>File proxy</h2>
  <p>Quando si lavora con più piattaforme di destinazione, è bene notare che è possibile creare un singolo <span class="notranslate">extension</span> con un solo insieme di funzioni/macro che funzionerà su <em>tutte le </em>piattaforme. Ciò si ottiene aggiungendo solo una delle librerie di collegamento al gioco come <span class="notranslate">extension</span> e inserendo le altre nell'elenco dei <strong>file proxy</strong> nella finestra delle <strong>proprietà dell'estensione</strong>.</p>
  <p><img>Ad esempio, supponiamo di avere un <span class="notranslate">Windows</span> <span class="notranslate">extension</span> con il <span class="inline"> <strong>dll </strong></span>&quot;<span class="inline">Haggis.dll</span>&quot;. Si dovrebbe semplicemente replicare questo <span class="inline"> <strong>dll</strong></span> come un Mac <span class="inline"> <strong>DyLib</strong></span>, nominandolo &quot;<span class="inline"><strong>libHaggis.dylib</strong></span>&quot; e assicurandosi che i nomi delle funzioni interne corrispondano a quelli del <span class="notranslate">Windows</span> <span class="inline"> <strong>dll</strong></span> originale. Questo <strong> <span class="inline">DyLib</span> </strong>Questo file dovrebbe essere aggiunto ai file proxy e impostato per l'esportazione quando il gioco viene eseguito sull'obiettivo Mac, e <span data-keyref="GameMaker Name">GameMaker</span> lo utilizzerà automaticamente quando vengono richiamate le funzioni di <span class="notranslate">extension</span>.</p>
  <p>Per aggiungere un file proxy, è sufficiente fare clic sul pulsante <img> nella finestra delle proprietà del file di risorse selezionato e navigare fino alla posizione del file. Una volta aggiunto, potrebbe essere necessario aggiornare gli obiettivi dell'estensione per aggiungere il modulo appropriato e, al successivo avvio del gioco, il file sarà incluso come proxy per quella piattaforma. È anche possibile rimuovere i file proxy facendo clic sul pulsante <img> che rimuoverà il file proxy selezionato.</p>
  <p>Una volta aggiunti i file proxy, essi verranno copiati nella cartella <span class="notranslate">Extensions</span> del progetto (potete trovarli facendo clic con il tasto destro del mouse su <img> su <span class="notranslate">extension</span> e selezionando <em>Apri in Esplora</em> risorse), quindi se dovete modificarli, dovete modificare i file copiati che vengono forniti con il gioco e non il file sorgente che è stato importato, poiché <span data-keyref="GameMaker Name">GameMaker</span> utilizzerà quelli del progetto per la compilazione.</p>
  <h2 id="h">Convenzioni di denominazione</h2>
  <p>È molto importante che i file proxy seguano le convenzioni di denominazione elencate di seguito, poiché <span data-keyref="GameMaker Name">GameMaker</span> analizzerà questi nomi e assegnerà il modulo di destinazione per il file in base al suo <span class="notranslate">extension</span> e al suo nome e collegherà automaticamente i file per voi. Se non si seguono queste convenzioni, il gioco potrebbe non funzionare su <span class="notranslate">runtime</span>, poiché <span data-keyref="GameMaker Name">GameMaker</span> non sarà in grado di capire quale file utilizzare e non lo caricherà correttamente.</p>
  <p>Le convenzioni di denominazione per ciascuna piattaforma di destinazione sono riportate di seguito:</p>
  <table>
    <colgroup>
      <col style="width: 173px;" />
      <col style="width: 715px;" />
    </colgroup>
    <tbody>
      <tr>
        <th>Piattaforma</th>
        <th>Nomi</th>
      </tr>
      <tr>
        <td>Runtime di Windows 32bit</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.dll, lib&lt;<em>Name</em>&gt;.dll</span></td>
      </tr>
      <tr>
        <td>Runtime di Windows a 64 bit</td>
        <td><span class="inline">&lt;<em>N</em><em>ame</em>&gt;_x64.dll, lib&lt;<em>Name</em>&gt;_x64.dll</span></td>
      </tr>
      <tr>
        <td>UWP</td>
        <td><span class="inline"><span class="inline">&lt;<em>Name</em>&gt;.dll, &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_x86.dll, &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_arm.dll, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_x86.dll, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_win8_arm.dll</td>
      </tr>
      <tr>
        <td>Ubuntu (<span class="notranslate">Linux</span>)</td>
        <td><span class="inline">&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;.so,<br>
            &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux.so,<br>
            <br>
            &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_arm.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_arm.so,<br>
            <span class="inline">lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux_arm.so,<br>
            <br>
            &lt;<em>Nome&gt;_arm64</em>.so, lib&lt;<em>Nome&gt;_arm64</em>.so, lib&lt;<em>Nome&gt;_linux_arm64</em>.so,<br>
            <br>
            &lt;<em>Nome&gt;_arm64-v8</em>.so,<br>
           <em>lib&lt;Nome&gt;_arm64-v8</em>.so, lib&lt;Nome&gt;_linux_arm64-v8.so,<br>
            <br>
            &lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_armeabi-v7a.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_armeabi-v7a.so, lib&lt;<span class="inline"><span class="inline"><em>Name</em></span>&gt;_linux_armeabi-v7a.so</td>
      </tr>
      <tr>
        <td>macOS</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.dylib, lib&lt;Name&gt;.dylib</span></td>
      </tr>
      <tr>
        <td>HTML5</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.js</span></td>
      </tr>
      <tr>
        <td>PS4</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.prx, lib&lt;<em>Name</em>&gt;.prx, &lt;<em>Name</em>&gt;_ps4.prx, lib&lt;<em>Name</em>&gt;_ps4.prx</span></td>
      </tr>
      <tr>
        <td>PS5</td>
        <td><span class="inline">&lt;<em>Name</em>&gt;.prx, lib&lt;<em>Name</em>&gt;.prx, &lt;<em>Name</em>&gt;_ps5.prx, lib&lt;<em>Name</em>&gt;_ps5.prx</span></td>
      </tr>
      <tr>
        <td>Xbox One</td>
        <td><span class="inline"><span class="inline">&lt;<em>Name</em>&gt;.dll, </span>&lt;<em>Nome&gt;_xboxone</em>.dll</td>
      </tr>
      <tr>
        <td>Xbox Serie X|S</td>
        <td><span class="inline"><span class="inline">&lt;<em>Name</em>&gt;.dll, </span>&lt;<em>Nome&gt;_xboxseriesxs</em>.dll</td>
      </tr>
    </tbody>
  </table>
  <p>Usando le convenzioni di cui sopra, si dovrebbe sostituire la parte <span class="inline">&lt;<em>Name</em>&gt;</span> con il nome del file di base per il quale si stanno aggiungendo i file proxy.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Extensions.htm">L'editore <span class="notranslate">Extension</span> </a></div>
        <div style="float:right">Avanti: <a href="Android_Extensions.htm">Estensioni Android</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
Creating Extensions
-->
  <!-- TAGS
extensions_create
-->
</body>
</html>