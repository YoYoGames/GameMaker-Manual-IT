<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Estensioni iOS / tvOS</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how iOS extensions work" />
  <meta name="rh-index-keywords" content="Extensions - Creating iOS / tvOS Extensions" />
  <meta name="search-keywords" content="iOS Extensions,iOS, tvOS Extensions, tvOS" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Estensioni iOS / <span class="notranslate">tvOS</span> </h1>
  <p>Per creare un <span class="notranslate">extension</span> per <span class="notranslate">iOS</span> o tvOS è necessario farlo in due parti. La prima parte consiste nell'aggiungere <span class="notranslate">extension</span> stesso, insieme ai file necessari, e la seconda nel creare le funzioni e le macro/costanti che <span class="notranslate">extension</span> richiede.</p>
  <p>Le funzioni e le costanti vengono aggiunte usando file <strong>segnaposto </strong>per raggrupparle, quindi si aggiunge un segnaposto e poi si definiscono le funzioni e le macro come spiegato nella sezione <a href="Creating_An_Extension.htm">qui</a>. Per aggiungere il resto dei file, tuttavia, è necessario selezionare la casella di controllo <em>iOS </em>e/o <em>tvOS </em>nella sezione <strong>Caratteristiche aggiuntive</strong> dell'editor per aprire la finestra delle <strong>proprietà dell'estensione</strong> (l'immagine seguente mostra la finestra delle proprietà di <span class="notranslate">iOS</span>, ma la finestra di <span class="notranslate">tvOS</span> è esattamente la stessa):</p>
  <p class="dropspot"><img alt="iOS Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS.png" /></p>
  <p>Qui è possibile fornire i seguenti dettagli:</p>
  <ul class="colour">
    <li class="dropspot"><strong>Flag del compilatore / flag del linker</strong>: Alcuni framework e SDK di terze parti richiedono l'aggiunta di ulteriori flag del linker e del compilatore per funzionare, che possono essere specificati qui (per i dettagli, consultare la documentazione che accompagna l'SDK o il framework in questione).</li>
    <li class="dropspot"><strong>Nome della classe</strong>: Il vostro <span class="notranslate">extension</span> può avere più classi, ognuna delle quali ha le sue funzioni e le sue costanti, quindi dovreste dargli un nome che rifletta il suo scopo.</li>
    <li class="dropspot"><strong>Nome della classe del delegato dell'applicazione</strong>: Il nome della classe delegata dell'applicazione personalizzata. L'impostazione di questa classe consente a <span class="notranslate">extension</span> di sovrascrivere/estendere le funzionalità principali dell'applicazione. Per utilizzare questa funzione è necessario procedere come segue:
      <ol>
        <li>Assicurarsi che i file sorgenti dei delegati abbiano lo stesso nome della classe del delegato (ad esempio, <span class="inline">@interface MyCustomAppDelegate</span> dovrebbe essere definito in &quot; <span class="inline">MyCustomAppDelegate.h</span>&quot;).</li>
        <li>Aggiungere la variabile d'ambiente <span class="inline">${YYExtAppDelegateIncludes}</span> all'inizio del file header del delegato dell'applicazione. Questa sarà sostituita in fase di compilazione con i file di include pertinenti alla classe delegata genitore.</li>
        <li>Utilizzare la variabile d'ambiente <span class="inline">${YYExtAppDelegateBaseClass}</span> come classe base per il delegato personalizzato dell'applicazione. Questa verrà sostituita in fase di compilazione con la classe delegata di base corretta.<br>
          <br>
          Per garantire che <span class="notranslate">extension</span> funzioni con qualsiasi altro <span class="notranslate">extensions</span> che utilizzi delegati di app personalizzati, è necessario chiamare i metodi della classe base da metodi sovrascritti nella classe figlia. Prima di chiamare il metodo della superclasse, è necessario assicurarsi che sia implementato nella gerarchia delle classi per evitare errori, ad esempio
        </li>
      </ol>
     <p class="code">- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br />
        {<br />
            // Check if any superclasses implement this method and call it<br />
            if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br />
              return [super application:application willFinishLaunchingWithOptions:launchOptions];<br />
            else<br />
                return TRUE;<br />
        }</p>
    </li>
    <li class="dropspot"><strong>Quadri di sistema</strong>: Qui è possibile aggiungere qualsiasi <a class="glossterm" data-glossterm="quadro" href="#">framework</a>di sistema <span class="notranslate">iOS</span> al proprio <span class="notranslate">extension</span>. Questi vengono aggiunti facendo clic sul pulsante <img> che aggiungerà un framework segnaposto, che potrà poi essere modificato facendo doppio clic su <img>. Per saperne di più sui framework di sistema disponibili, <a href="https://developer.apple.com/documentation/">fare clic qui</a>. Per rimuovere un framework di sistema, basta selezionarlo e poi fare clic sul pulsante <img>.<br>
      <br>
      <img>È possibile attivare la casella di controllo di un framework per contrassegnarlo come &quot;<strong>Riferimento debole</strong>&quot;. Questo lo aggiunge alla sezione &quot;<strong>Build Phases -&gt; Link Binary with Libraries</strong>&quot; di <span class="notranslate">Xcode</span> come framework &quot;<strong>Optional</strong>&quot;, invece che come framework &quot;<strong>Required</strong>&quot; (che è il comportamento predefinito).
    </li>
    <li class="dropspot"><strong>Framework di terze parti e bundle</strong>: Questa sezione serve per aggiungere bundle di terze parti e SDK. Come per i framework di sistema, si fa clic sul pulsante <img> per aggiungerli e poi si fa doppio clic su <img> per modificarli; selezionandoli e poi facendo clic su <img> li si rimuove (per informazioni sul nome del framework, consultare la documentazione fornita con l'SDK scelto).<br>
      <br>
      Qui si può scegliere se <strong>non incorporare</strong> il framework, se <strong>incorporarlo e firmarlo</strong> o se <strong>incorporarlo senza firmarlo</strong>:<br>
      <img>Questa opzione riflette la stessa opzione per un framework aggiunto sotto &quot;<strong>Frameworks, Libraries and Embedded Content</strong>&quot; in <span class="notranslate">Xcode</span>.
    </li>
    <li class="dropspot"><strong>Inserire il framework <span class="notranslate">path</span> sul Mac</strong>: Se si desidera aggiungere un framework a <span class="notranslate">extension</span> i cui file sono presenti sul Mac utilizzato per la compilazione del progetto, è possibile inserire il nome <span class="notranslate">path</span> di tale framework (sulla macchina di compilazione) in questo campo e quindi fare clic sul pulsante <img> per aggiungerlo.<br>
      <br>
     <span class="notranslate">path</span> Il file <span class="notranslate">extension</span> deve puntare a un file <span class="inline">.framework</span> che verrà compresso come <span class="inline">.zip</span> e collocato nella cartella <span class="inline">iOSSourceFromMac</span> sotto la vostra directory <span class="notranslate">extension</span>; potete facilmente aprirlo in qualsiasi momento facendo clic con il pulsante destro del mouse su <img> e selezionando <em>Apri in Explorer</em>.
    </li>
    <li class="dropspot"><strong>Aggiungi sorgente</strong>: È possibile utilizzare questa opzione per aggiungere i file sorgente necessari al funzionamento di <span class="notranslate">extension</span>. I file aggiunti saranno memorizzati nella cartella <span class="inline">iOSSource</span> all'interno della cartella delle estensioni.</li>
    <li class="dropspot"><b>Iniezione di codice</b>: Qui è possibile aggiungere qualsiasi codice da iniettare (aggiungere) nell'applicazione <span class="notranslate">iOS</span> quando il gioco viene creato per il test o il rilascio finale. Assicuratevi di rivedere attentamente questo codice (e le vostre autorizzazioni) prima di inviare qualsiasi gioco al negozio, in quanto impostazioni errate causeranno il fallimento dell'invio del gioco.</li>
  </ul>
  <h2>Iniezione di codice</h2>
  <p>Code Injection può essere utilizzato per iOS/tvOS <span class="notranslate">extensions</span> nello stesso modo descritto nella pagina <span class="notranslate">Android</span> <span class="notranslate">Extensions</span>: vedere <a data-xref="{text}" href="Android_Extensions.htm#h">Code Injection</a>.</p>
  <p>I seguenti tag sono disponibili per le piattaforme <span class="notranslate">iOS</span> e <span class="notranslate">tvOS</span>:</p>
  <p class="code">YYIosPlist<br />
    YYIosEntitlements<br />
    YYIosCocoaPods<br />
    YYIosCocoaPodsDependencies<br />
    YYIosBuildRules<br />
    YYIosBuildSettingsInjection<br />
    YYIosScriptPhase<br />
    YYIosCFBundleURLSchemesArray<br />
    YYIosLSApplicationQueriesSchemesArray<br />
    <br />
    YYTvosPlist<br />
    YYTvosEntitlements<br />
    YYTvosCocoaPods<br />
    YYTvosCocoaPodsDependencies<br />
    YYTvosBuildRules<br />
    YYTvosBuildSettingsInjection<br />
    YYTvosScriptPhase<br />
    YYTvosCFBundleURLSchemesArray<br />
    YYTvosLSApplicationQueriesSchemesArray
  </p>
  <p>La posizione di <span class="notranslate">runtime</span> in cui viene iniettato il codice dipende dal tipo di tag:</p>
  <table>
    <colgroup>
      <col style="width: 174px;" />
      <col style="width: 760px;" />
    </colgroup>
    <tbody>
      <tr>
        <th style="">Tipo di etichetta</th>
        <th style="">Percorso di iniezione</th>
      </tr>
      <tr>
        <td style=""><b>Diritti</b></td>
        <td style="">{RUNTIME}\iosempliceProgetto${YXCodeProjName}<br>
         <span>${YXCodeProjName}.entitlements</span>
        </td>
      </tr>
      <tr>
        <td style=""><b>info.plist</b></td>
        <td style="">{RUNTIME}\iosempliceProgetto${YXCodeProjName}<br>
          File di supporto${YXCodeProjName}-Info<span>.plist</span></td>
      </tr>
      <tr>
        <td style=""><strong>infoPlist.stringhe</strong></td>
        <td style="">{RUNTIME}\iosempliceProgetto${YXCodeProjName}<br>
          en.lproj\InfoPlist.strings</td>
      </tr>
      <tr>
        <td style=""><strong>progetto.pbxproj</strong></td>
        <td style="">{RUNTIME}\ios\codeProject}${YXCodeProjName}.xcodeproj\<br>
          progetto.pbxproj</td>
      </tr>
      <tr>
        <td style=""><strong>xcschema</strong></td>
        <td style="">{RUNTIME}\ios\codeProject}${YXCodeProjName}.xcodeproj\<br>
          xcshareddata\xcschemes\${YXCodeProjName}.xcscheme</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><strong></strong><span class="note">NOTA</span> Questi <span class="notranslate">paths</span> sono solo per VM. Per YYC, il codice iniettato andrà nella directory <span class="inline">{RUNTIME}\yyc\</span>, dove i <span class="notranslate">paths</span> possono essere o meno equivalenti a quelli per VM.</p>
  <p>Si noti che esiste un'opzione di gioco <a href="../../Settings/Game_Options/iOS.htm">per iOS</a> e <a href="../../Settings/Game_Options/tvOS.htm">tvOS</a> per aggiungere un file <span class="inline">Podfile.lock</span> a <span data-keyref="GameMaker Name">GameMaker</span>, necessario se si aggiungono le dipendenze di <span class="notranslate">CocoaPods</span> in questa sezione.</p>
  <h2>Informazioni aggiuntive</h2>
  <p>Se al sito <span class="notranslate">extension</span> sono stati aggiunti Framework di sistema o di terze parti, questi saranno ora elencati nella finestra <strong>Proprietà estensione </strong>, con una casella di controllo accanto a ciascuno di essi. Se si seleziona la casella, si abilita il collegamento debole, utile nel caso in cui si debba &quot;sovrascrivere&quot; un simbolo della libreria inclusa con un proprio valore, ma occorre notare che questa operazione rallenta il collegamento.</p>
  <p>Per informazioni sulla creazione di <span class="notranslate">extensions</span> nativo per <span class="notranslate">iOS</span>, vedere <a href="Extended_Examples.htm">Esempi di sorgenti</a>; e per informazioni sull'uso di <span class="notranslate">CocoaPods</span> in <span class="notranslate">extensions</span>, vedere la seguente guida:</p>
  <ul class="colour">
    <li><a href="https://help.yoyogames.com/hc/en-us/articles/360008958858">iOS e tvOS: utilizzo di Cocoa Pods</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Extensions.htm">L'editore <span class="notranslate">Extension</span> </a></div>
        <div style="float:right">Avanti: <a href="Extended_Examples.htm">Esempi di fonti</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
iOS Extensions
tvOS Extensions
-->
  <!-- TAGS
extensions_ios
-->
</body>
</html>