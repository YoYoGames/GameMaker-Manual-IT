<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Costanti</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the different GML constants" />
  <meta name="rh-index-keywords" content="Constants,macro,enum,pointer_invalid,pointer_null,undefined,NaN,infinity,true,false,pi" />
  <meta name="search-keywords" content="constants,macros,enums,macro,enum" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Costanti</h1>
  <p>Una costante è un tipo di variabile che viene impostata una volta all'inizio del gioco e poi non cambia mai. Infatti, i valori costanti <em>non possono essere cambiati dopo che sono stati dichiarati</em>. Questo li rende ideali per contenere valori che vengono utilizzati durante il gioco per identificare dati speciali.</p>
  <p>In <span class="notranslate">GameMaker Language</span> ci sono due tipi di costanti definite dall'utente: le <strong>macro</strong> e gli <strong>enum</strong>, entrambi spiegati di seguito. Notate anche che qualsiasi valore che è sempre lo stesso è classificato come una costante, indipendentemente dal <a href="../Data_Types.htm">tipo di dati</a>, per esempio, un <span class="notranslate">string</span> o il numero 3.</p>
  <p class="note"><span class="note">NOTA</span> Il sito <span class="notranslate">GameMaker Language</span> ha anche un certo numero di valori costanti incorporati che sono usati per identificare cose specifiche. Questi sono descritti nelle pagine appropriate per le funzioni di <span class="notranslate">runtime</span> che li richiedono nella sezione <a href="../../GML_Reference/GML_Reference.htm">GML Reference</a>.</p>
  <h2>Macro</h2>
  <p>Anche se non sono esattamente variabili, le macro sono simili ad esse nel modo in cui vengono usate, cioè: sono valori nominati che potete usare in tutto il vostro codice per sostituire valori <a class="glossterm" data-glossterm="hard-coded" href="#">hard-coded</a>. Fondamentalmente, una macro è una variabile nominata che contiene un'espressione. Potete definire le vostre macro usando lo <a href="../Script_Functions.htm">Script Editor</a> e poi usarle nel vostro codice e nelle azioni come se fossero variabili regolari, con l'unica differenza che <i>non possono essere cambiate nel gioco</i>.</p>
  <p>La struttura sintattica di una macro è la seguente:</p>
  <p class="code">#macro <i>&lt;variable&gt;</i> <i>&lt;expression&gt;</i></p>
  <p>Per esempio, diciamo che definite la seguente macro &quot;<span class="inline">total_weapons</span>&quot;:</p>
  <p class="code">#macro total_weapons 10</p>
  <p class="note_heading">Sintassi macro...</p>
  <p class="note">La sintassi mostrata sopra deve essere usata correttamente per definire le macro. Non puoi usare un segno di uguale (come nelle variabili) o mettere un punto e virgola alla fine (come in una normale istruzione). Così facendo, la definizione della macro non sarà più valida.<br>
    <br>
    Per esempio, questo non è il modo corretto di definire una macro:<br>
    <br>
   <span class="inline2">#macro total_weapons = 10;</span><br>
    <br>
    Rimuovendo il segno di uguale e i due punti si ottiene una definizione di macro valida.
  </p>
  <p>Potreste poi usarlo nel vostro codice in questo modo:</p>
  <p class="code">pos++;<br />
    <br />
    if (pos &gt;= TOTAL_WEAPONS)<br />
    {<br />
        pos = 0;<br />
    }
  </p>
  <p>Notate che non sareste in grado di cambiare il valore della costante, quindi un codice come questo causerà il crash del gioco:</p>
  <p class="code">total_weapons = 11;</p>
  <p>Potete definire una macro ovunque nel vostro codice o in uno script e sarà <i>precompilata</i> e inclusa nel vostro gioco come se fosse lì dall'inizio, ma vi consigliamo di creare un <span class="notranslate">script</span> <span class="notranslate">asset</span> dedicato e definire tutte le vostre macro lì. Sarà più facile da organizzare e debuggare in seguito!</p>
  <p>Se avete bisogno che il valore di una macro cambi a runtime, allora dovreste probabilmente renderla una <a href="Global_Variables.htm">variabile globale</a>, poiché queste possono essere cambiate dal codice durante una partita, a meno che non impostiate la macro come una<span> <a href="../Runtime_Functions.htm">runtime </a></span> <a href="../Runtime_Functions.htm"><span class="notranslate">function</span></a>. Impostando la macro su una funzione significa che questa funzione sarà chiamata ogni volta che si usa la macro. Per esempio:</p>
  <p class="code">#macro col make_colour_hsv(irandom(255), 255, 255)</p>
  <p>Dovreste quindi chiamare questa macro in questo modo:</p>
  <p class="code">image_blend = col;</p>
  <p>Usando questo codice l'immagine si fonderà con un colore diverso ogni volta che la macro viene usata. Vale la pena notare che potete anche dividere le macro su più linee usando il carattere <span class="inline"><span class="inline">\</span> per mostrare dove la linea si interrompe. Un esempio potrebbe essere qualcosa come:</p>
  <p class="code">#macro hello show_debug_message(&quot;Hello&quot; + \<br />
    string(player_name) + \<br />
    &quot;, how are you today?&quot;);</p>
  <p>Questo è puramente cosmetico, nel senso che dividere una macro in questo modo non avrà alcun effetto sul risultato della macro finale quando viene usata, ed è semplicemente per fornire supporto al testo multilinea sulle macro che hanno linee di codice più lunghe.</p>
  <p>Una caratteristica molto importante delle macro è che possono essere definite per l'uso con <a href="../../../Settings/Configurations.htm">configurazioni</a> specifiche (configs), il che significa che puoi avere lo stesso nome di macro ma dargli valori diversi in base alla configurazione attualmente selezionata. Per esempio, diciamo che hai una configurazione per <span class="notranslate">Android</span> Ads e un'altra per <span class="notranslate">iOS</span> Ads, allora potresti definire una singola macro per contenere il valore dell'ID dell'app richiesto:</p>
  <p class="code">#macro ad_id &quot;&quot;;<br />
    #macro Android:ad_id &quot;com.yoyogames.googlegame&quot;<br />
    #macro iOS:ad_id &quot;com.yoyogames.appstoregame&quot;</p>
  <p>Come potete vedere, date prima il nome della configurazione, poi i due punti <span class="inline">:</span> e poi il nome e il valore della macro. Notate che non potete avere alcuno spazio bianco tra i due punti <span class="inline">:</span> e il nome della configurazione o il nome della macro, altrimenti otterrete un errore.</p>
  <h2 id="enumhead">Enums</h2>
  <p>Un enum è un &quot;enumeratore&quot;, e permette essenzialmente di creare il proprio limitato <span class="notranslate">data type</span> con una lista di valori costanti, e hanno la seguente struttura:</p>
  <p class="code">enum <i>&lt;variable&gt;</i><br />
    {<br />
    <i>    &lt;MEMBER&gt;</i> [= <i>&lt;VALUE&gt;</i>],<br />
    <i>    &lt;<i>MEMBER</i>&gt;</i> [= <i>&lt;<i>VALUE</i>&gt;</i>],<br />
        // etc...<br />
    }
  </p>
  <p>Nell'esempio seguente, creiamo un enum per i colori dell'arcobaleno e gli assegniamo varie costanti e valori predefiniti:</p>
  <p class="code">enum rainbowcolours<br />
    {<br />
        RED,<br />
        ORANGE,<br />
        YELLOW,<br />
        GREEN,<br />
        BLUE,<br />
        INDIGO,<br />
        VIOLET<br />
    }</p>
  <p>Le voci di enum possono essere solo <b>numeri interi</b> o <b><a class="glossterm" data-glossterm="espressione" href="#">espressioni</a></b> con enum precedenti che valutano un numero intero, e per default sono numerate da 0 in su, quindi il nostro esempio dato sopra avrebbe come default <span class="inline">red = 0</span>, <span class="inline">orange = 1</span>, <span class="inline">yellow = 2</span>, ecc.</p>
  <p>Potete anche assegnare valori alle variabili enum al momento della creazione:</p>
  <p class="code">enum enum_test<br />
    {<br />
        VAL = 10<br />
    }<br />
    <br />
    enum RAINBOW<br />
    {<br />
        RED = 5,<br />
        ORANGE = 5 * 2,<br />
        YELLOW = 15,<br />
        GREEN = 20,<br />
        BLUE = 25,<br />
        INDIGO = 30,<br />
        VIOLET = 35 * ENUM_TEST.VAL<br />
    }
  </p>
  <p>Notate che nell'esempio precedente usiamo un altro enum per creare un'espressione per &quot;violet&quot;. Questo funziona solo se l'enum a cui si fa riferimento è stato creato <i>prima dell</i> 'enum che lo sta usando in un'espressione, ma non funzionerà per variabili o funzioni, poiché il valore dell'enum deve poter essere valutato come una costante quando il progetto viene <a class="glossterm" data-glossterm="Compilazione di" href="#">compilato</a>. Notate anche che tutti i valori enum sono valutati come valori <b>interi</b>, e quando create il vostro dovreste essere consapevoli che <i>solo i valori interi sono permessi</i> per gli enum per funzionare. Questo valore può essere qualsiasi numero intero che un numero in virgola mobile a doppia precisione può rappresentare, inclusi i valori negativi.</p>
  <p>Per accedere successivamente al valore all'interno di un dato tipo di enum, potete usare il metodo point <span class="inline">&quot;.&quot;</span>, come questo:</p>
  <p class="code">variable = &lt;enum_name&gt;.&lt;<em>enum_variable</em>&gt;;</p>
  <p>Come esempio, usiamo l'enum &quot;<span class="inline">rainbowcolours</span>&quot; che abbiamo creato nel codice precedente:</p>
  <p class="code">colour_value = rainbowcolours.green * rainbowcolours.red;</p>
  <p>La variabile <span class="inline">colour_value</span> conterrebbe ora il valore 100 (20 * 5).</p>
  <p>Notate che <em>non potete </em>modificare i valori di qualsiasi costante enum dopo che è stata creata, proprio come non potete modificare le macro dopo che sono state create.</p>
  <p class="note"><strong>NOTA</strong>: i valori Enum sono memorizzati come <span class="notranslate">int64s</span>, quindi l'esecuzione di <span class="inline"><a href="../../GML_Reference/Variable_Functions/is_real.htm">is_real()</a></span> su di essi restituirà <span class="inline">false</span>.</p>
  <p> </p>
  <h2>Costanti integrate</h2>
  <p>La seguente tabella mostra una lista delle costanti incorporate che possono essere restituite da alcune funzioni e operazioni nei vostri progetti:</p>
  <table>
    <tbody>
      <tr>
        <th>Costante</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">pointer_null</span></td>
        <td>Questa costante indica che il puntatore non sta puntando a niente di significativo (lo stesso che<span> </span><span class="inline">NULL</span> <span> </span> in C++ o <span class="inline">null</span> in C#).<br>
          Questo valore è <a class="glossterm" data-glossterm="falsy" href="../Data_Types.htm#">falso</a>.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">pointer_invalid</span></td>
        <td>Questa costante significa semplicemente che il valore non è un puntatore valido</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">undefined</span></td>
        <td>Questa costante viene restituita quando una funzione deve restituire <em>qualcosa</em> ma non ha un valore appropriato o &quot;corretto&quot; da restituire.<br>
          Questo valore è <a class="glossterm" data-glossterm="falsy" href="../Data_Types.htm#">falso</a>.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">NaN</span></td>
        <td><span>Questa costante che può essere restituita quando il compilatore non può valutare i risultati di un'operazione come un numero - per esempio, 0 / 0 non può essere definito come un numero reale, ed è quindi rappresentato da </span><span class="inline">NaN</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">infinity</span></td>
        <td><span class="inline"><span data-highlight-container="true"><span data-highlight="true">
                <font face="open_sansregular"><span style="font-size: 18px; font-weight: 400;">This constant </span>
              <span>si riferisce a un numero che è considerato infinito, come il risultato che si otterrebbe dividendo qualsiasi valore in virgola mobile per zero, ad esempio: 1,0/0.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">true</span></td>
        <td>Questa costante rappresenta il valore 1, che è quello che <span data-keyref="GameMaker Name">GameMaker</span> valuterà come un booleano &quot;vero&quot; (si noti che qualsiasi valore uguale o maggiore di 1 sarà valutato come <span class="inline">true</span>).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">false</span></td>
        <td>Questa costante rappresenta il valore 0, che è quello che <span data-keyref="GameMaker Name">GameMaker</span> valuterà come un booleano &quot;falso&quot; (si noti che qualsiasi valore minore o uguale a 0 sarà valutato come <span class="inline">false</span>).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">pi</span></td>
        <td>Questa costante rappresenta il valore di pi greco: 3.141592653589793280 ecc... anche se il valore esatto dipenderà da vari fattori come il sistema operativo o la piattaforma a cui ci si rivolge.</td>
      </tr>
    </tbody>
  </table>
  <p>Vedere la <a data-xref="{text}" href="../../../Additional_Information/Type_Tables.htm#h">Tabella dell'uguaglianza</a> per informazioni sui confronti di uguaglianza per alcune delle costanti elencate sopra.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Variables_And_Variable_Scope.htm">Variabili e ambito delle variabili</a></div>
        <div style="float:right">Prossimo: <a href="Local_Variables.htm">Variabili locali</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
constants
macros
enums
macro
enum
-->
  <!-- TAGS
constants
macro
enum
-->
</body>
</html>