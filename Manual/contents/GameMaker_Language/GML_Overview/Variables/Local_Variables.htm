<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Variabili locali</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining local variables" />
  <meta name="rh-index-keywords" content="var,Local Variables" />
  <meta name="search-keywords" content="local variables,local,var,local scope" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Variabili locali</h1>
  <p>Una variabile <strong>locale</strong> è una variabile che creiamo <i>solo</i> per un <strong>evento</strong> o una <strong>funzione</strong> specifica e che poi scartiamo quando l'evento o la funzione sono finiti. Se viene creata in una funzione personalizzata, allora la variabile locale è disponibile solo per la funzione e viene eliminata quando la funzione è finita. Perché dovremmo averne bisogno? Beh, le variabili occupano spazio in memoria e può darsi che le useremo solo per un'operazione o una funzione, nel qual caso abbiamo bisogno di averle in memoria solo per quel breve periodo in cui vengono usate. Questo mantiene il vostro codice base pulito e ordinato, oltre a mantenere lo spazio di memoria ottimizzato per le cose che ne hanno davvero bisogno. Per dichiarare una variabile locale usiamo l'operatore <span class="inline"><strong><span class="inline">var</span> come questo:</p>
  <p class="code">var _i, _num, _str;<br />
    _i = 0;<br />
    _num = 24.5;<br />
    _str = &quot;Hello World&quot;;<br />
    <br />
    // or<br />
    <br />
    var _i = 0, _num = 24.5, _str = &quot;Hello World&quot;;<br />
    <br />
    // or<br />
    <br />
    var _i = 0;<br />
    var _num = 24.5;<br />
    var _str = &quot;Hello World&quot;;
  </p>
  <p>Tutte le variabili create in questo modo saranno &quot;dimenticate&quot; (cioè rimosse dalla memoria) alla fine dell'evento (o funzione) in cui sono state create. Dovreste fare attenzione che il nome che date a tutte le variabili dichiarate su <span class="inline">var</span> non coincida con un'altra variabile di istanza all'interno di <span class="notranslate">object</span> che esegue il codice, e assicuratevi anche di non avere intenzione di usare il valore memorizzato in quella variabile al di fuori dell'evento o della funzione in cui la dichiarate (negli esempi precedenti, tutte le variabili dichiarate su <span class="inline">var</span> sono state definite con il trattino basso &quot;_&quot; prima del nome della variabile, ma questo non è richiesto ed è fatto semplicemente per rendere più ovvio nel codice che abbiamo a che fare con una variabile locale). Detto questo, se vi trovate in una situazione in cui pensate che una variabile locale <em>dovrebbe</em> essere la stessa di una variabile di istanza, allora potete usare la <a href="../Instance_Keywords.htm">parola chiave</a> <span class="inline">self</span> per identificare la variabile di istanza come separata, per esempio:</p>
  <p class="code">var hp = 10;<br />
    with (obj_Enemy)<br />
    {<br />
        self.hp -= hp;<br />
    }</p>
  <p>Le variabili locali sono molto usate nei programmi, specialmente in <span class="notranslate">loops</span> per contare <a class="glossterm" data-glossterm="iterazione" href="#">le iterazioni</a>, o quando si usa un valore più volte in un'operazione che non sarà ripetuta di nuovo. Ecco un altro paio di esempi:</p>
  <p class="code">var _i = 0;<br />
    repeat (10)<br />
    {<br />
        inventory[_i] = 0;<br />
        _i += 1;<br />
    }</p>
  <p>Il codice qui sopra crea una variabile locale chiamata &quot;<span class="inline">_i</span>&quot; e la imposta a 0, tutto nella stessa linea. Notate che nelle versioni precedenti di <i>GameMaker</i> dovevate prima dichiarare le vostre variabili locali e <i>poi</i> assegnare loro dei valori, ma in questa versione potete dichiarare <i>e</i> assegnare loro un valore allo stesso tempo. Il codice di cui sopra utilizza quindi questa variabile per inizializzare un <a href="../Arrays.htm">array</a>. Dato che la variabile &quot;<span class="inline">_i</span>&quot; non sarà usata per altre funzioni nell'istanza oltre a questa, può essere locale nell'ambito. Ecco un altro esempio:</p>
  <p class="code">var _x, _y;<br />
    _x = x - 32 + irandom(64);<br />
    _y = y - 32 + irandom(64);<br />
    instance_create_layer(_x, _y, &quot;Effects&quot;, obj_blood);</p>
  <p>Qui abbiamo usato le variabili locali &quot;<span class="inline">_x</span>&quot; e &quot;<span class="inline">_y</span>&quot; per memorizzare alcune coordinate casuali che poi usiamo per creare un'istanza. In questo esempio potete vedere che non è strettamente necessario che usiamo queste variabili, ma per il bene della leggibilità e della facilità d'uso, lo facciamo. È MOLTO più chiaro e ovvio quello che stiamo facendo lì che se usassimo questo codice:</p>
  <p class="code">instance_create_layer(x - 32 + irandom(64), y - 32 + irandom(64), &quot;Effects&quot;, obj_guts);</p>
  <p>Un'altra cosa su <span class="inline">var</span> variabili locali dichiarate dovrebbe essere notata... Dal momento che sono uniche per l'evento o la funzione che le esegue, possono essere usate anche in qualsiasi altra istanza attraverso il codice! Questo significa che possiamo usare queste variabili per impostare e cambiare cose in altre istanze usando il costrutto &quot;<span class="inline">with()</span>&quot; (vedi la sezione sullo <a href="../Variables_And_Variable_Scope.htm">scope delle variabili</a> per maggiori informazioni). Il codice vero e proprio sarebbe qualcosa di simile a questo:</p>
  <p class="code">var num = instance_number(obj_Enemy);<br />
    with (obj_Enemy)<br />
    {<br />
        if num&gt;10 instance_destroy();<br />
    }</p>
  <p>Il codice di cui sopra funziona perché la variabile dichiarata <span class="inline">var</span> è locale all'<i>evento</i> (o funzione) in cui è contenuta, non all'istanza, né al mondo di gioco, e quindi può essere usata in qualsiasi funzione in qualsiasi <span class="notranslate">object</span> purché sia nello stesso blocco di codice.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Variables_And_Variable_Scope.htm">Variabili e ambito delle variabili</a></div>
        <div style="float:right">Prossimo: <a href="Instance_Variables.htm">Variabili di istanza</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
local variables
var
-->
  <!-- TAGS
var
local_variables
-->
</body>
</html>