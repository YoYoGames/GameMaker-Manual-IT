<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>interruttore</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the switch function" />
  <meta name="rh-index-keywords" content="switch,case" />
  <meta name="search-keywords" content="switch,default" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>interruttore</h1>
  <p>In un certo numero di situazioni volete che le vostre istanze eseguano azioni diverse a seconda di un particolare valore. Potete farlo usando un certo numero di dichiarazioni consecutive <a href="If_Else_and_Conditional_Operators.htm"><span class="inline">if / else</span></a> ma quando le scelte possibili superano le due o tre è solitamente più facile usare l'istruzione <span class="inline">switch</span>.</p>
  <p>Una dichiarazione <span class="inline">switch</span> ha la seguente sintassi:</p>
  <p class="code">switch (&lt;expression&gt;)<br />
    {<br />
        case &lt;constant1&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
    <br />
        case &lt;constant2&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
        <br />
        // more cases (with breaks)<br />
    <br />
        default:<br />
            &lt;code&gt;;<br />
    }
  </p>
  <p>Questo funziona come segue:</p>
  <ul class="colour">
    <li>Prima viene eseguita l'<a class="glossterm" data-glossterm="espressione" href="#">espressione</a>.</li>
    <li>Successivamente, il suo risultato viene confrontato con le diverse costanti dopo ciascuna delle<span class="glossextra">dichiarazioni</span> <span class="inline">case</span>. Quando diciamo &quot;costante&quot; ciò che intendiamo è che il valore nel caso non può essere un'espressione variabile e deve essere un valore fisso di qualsiasi <a href="../Data_Types.htm">tipo di dati</a>, come <span class="inline2">&quot;lotta&quot;</span> o <span class="inline2">3</span> o la parola chiave <span class="inline2"><span class="inline"><a href="../Instance_Keywords.htm">noone</a></span></span>. </li>
    <li>L'esecuzione inizia dalla prima istruzione <span class="inline">case</span> con il valore corrispondente, <i>fino a quando si incontra un'istruzione <a href="break.htm"><span class="notranslate">break</span></a> </i>.</li>
    <li>Se nessuna istruzione <span class="inline">case</span> ha il valore corrispondente, allora verrà eseguita l'istruzione <span class="inline">default</span>. Non è necessario avere una dichiarazione <span class="inline">default</span>, e se non ne viene fornita nessuna, allora non verrà intrapresa alcuna azione quando non ci sono casi corrispondenti. L'istruzione <span class="inline">default</span> può essere posizionata ovunque in un blocco <span class="notranslate">switch</span>, tuttavia è tradizionalmente posizionata in fondo, dopo tutti i casi.</li>
  </ul>
  <p class="note"><span class="note">NOTA</span> L'istruzione <span class="notranslate">switch</span> continuerà ad eseguire il codice all'interno di un <span class="inline">case</span>, fino a quando non si incontra un <span class="inline">break</span>. Se non usate <span class="inline">break</span>s alla fine dei vostri casi, causerà la &quot;fuga&quot; di <span class="notranslate">switch</span> verso il prossimo <span class="inline">case</span>, e anche verso una sezione <span class="inline">default</span>, se non ci sono <span class="inline">break</span>s in mezzo. Questo può causare un comportamento indesiderato, poiché l'esecuzione di un <span class="inline">case</span> può portare all'esecuzione di più <span class="inline">case</span>s, quindi assicuratevi di usare <span class="inline">break</span> dove appropriato.</p>
  <p>Un semplice esempio di utilizzo di una dichiarazione <span class="notranslate">switch</span> sarebbe qualcosa del genere:</p>
  <p class="code">switch (player_lives)<br />
    {<br />
        case 3:<br />
            draw_sprite(20, 20, spr_face_healthy);<br />
        break;<br />
    <br />
        case 2:<br />
            draw_sprite(20, 20, spr_face_hurt);<br />
        break;<br />
    <br />
        case 1:<br />
            draw_sprite(20, 20, spr_face_fatal);<br />
        break;<br />
    <br />
        default:<br />
            draw_sprite(20, 20, spr_face_fainted);<br />
        break;<br />
    }
  </p>
  <p>Si noti che più dichiarazioni <span class="inline">case</span> possono essere usate per eseguire la stessa dichiarazione, poiché il <span class="inline">break</span> non è sempre richiesto per ogni singolo <span class="inline">case</span>. Se non c'è un'istruzione <span class="inline">break</span> per un particolare <span class="inline">case</span>, l'esecuzione continua semplicemente con il codice per il caso successivo, ad esempio:</p>
  <p class="code">switch (keyboard_key)<br />
    {<br />
        case vk_left:<br />
        case ord(&quot;A&quot;):<br />
            x -= 4;<br />
        break;<br />
    <br />
        case vk_right:<br />
        case ord(&quot;D&quot;):<br />
            x += 4;<br />
        break;<br />
    <br />
        case vk_up:<br />
        case ord(&quot;W&quot;):<br />
            y -= 4;<br />
        break;<br />
    <br />
        case vk_down:<br />
        case ord(&quot;S&quot;):<br />
            y += 4;<br />
        break;<br />
    }
  </p>
  <p>Il codice qui sopra usa <span class="inline">switch</span> per verificare la presenza di un evento della tastiera e poi lo confronta con ogni <span class="inline">case</span> elencato. Se incontra uno dei valori richiesti, allora viene eseguito il codice corrispondente. Notate come <span class="inline">switch</span> può controllare più <span class="inline">cases</span> ed eseguire il codice fino al prossimo <span class="inline">break</span>, per permettere di usare vari tasti per ottenere lo stesso risultato.</p>
  <p>Ogni <span class="inline">case</span> può avere il proprio codice, così si può impostare una sorta di sistema di &quot;ereditarietà&quot; dove un caso esegue il proprio codice e poi anche il codice del caso successivo.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Language_Features.htm">Caratteristiche della lingua</a></div>
        <div style="float:right">Il prossimo: <a href="break.htm"><span class="notranslate">break</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
switch
-->
  <!-- TAGS
switch
-->
</body>
</html>