<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ripetere</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the repeat function" />
  <meta name="rh-index-keywords" content="repeat" />
  <meta name="search-keywords" content="if,else,then,?,ternary,conditional" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>ripetere</h1>
  <p>Il sito <span class="notranslate">GameMaker Language</span> ha un certo numero di modi in cui si possono eseguire dei <i>cicli</i>, cioè: far iterare uno o più statement su se stessi un certo numero di volte. Il più semplice di questi è l'istruzione <span class="inline">repeat</span>, che ha la forma:</p>
  <p class="code">repeat (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p>Con <span class="inline">repeat</span> l'<a class="glossterm" data-glossterm="dichiarazione" href="#">istruzione</a> data viene ripetuta il numero di volte indicato dal valore arrotondato dell'<a class="glossterm" data-glossterm="espressione" href="#">espressione</a>. Per esempio, il seguente crea cinque palline in posizioni casuali:</p>
  <p class="code">repeat (5)<br />
    {<br />
        instance_create_layer(random(400), random(400), &quot;Instances&quot;, obj_ball);<br />
    }</p>
  <p>Questo può essere molto utile per evitare di scrivere lo stesso codice più volte, o per usare gli array, o per contare un certo numero di operazioni, ecc. Non siete nemmeno limitati all'uso di una singola dichiarazione, e potete ripetere più dichiarazioni racchiudendole tra parentesi graffe <span class="inline">{}</span>. Per esempio:</p>
  <p class="code">var _x = 32;<br />
    repeat (global.p_lives)<br />
    {<br />
        draw_sprite(spr_heart, 0, _x, 32);<br />
        _x += sprite_get_width(spr_heart);<br />
    }</p>
  <p>L'esempio precedente ripete le istruzioni tra le parentesi graffe per quante <a class="glossterm" data-glossterm="iterazione" href="#">iterazioni</a>ha la variabile globale &quot;lives&quot;, e ogni iterazione disegna il cuore <span class="notranslate">sprite</span> nella posizione <span class="inline">_x</span>, poi sposta la posizione lungo un bit in base alla larghezza del cuore <span class="notranslate">sprite</span>.</p>
  <p><strong>Quando si dovrebbe usare un <span class="inline">repeat</span> <span class="notranslate">loop</span>?</strong> Ogni volta che si vuole ripetere su una o più dichiarazioni un numero fisso di volte senza alcuna necessità specifica di mantenere un conteggio delle iterazioni.</p>
  <p>Vale la pena notare che si possono usare le dichiarazioni speciali <span class="inline"><a href="break.htm">break</a></span> e <span class="inline"><a href="continue.htm">continue</a></span> all'interno di un <font face="Lucida Console"><span style="font-size: 16px;"><b>ripetere</b></span></font> ciclo. Usando <span class="inline">break</span> si uscirà immediatamente da <span class="notranslate">loop</span> e si passerà a qualsiasi codice che si trova nell'evento o nella funzione dopo che <span class="notranslate">loop</span> dovrebbe aver finito, ad es:</p>
  <p class="code">var i = 0;<br />
    var temp = 0;<br />
    repeat (10)<br />
    {<br />
        temp += array[i];<br />
        if (temp &gt; max_total)<br />
        {<br />
            break;<br />
        }<br />
        else<br />
        {<br />
            i += 1;<br />
        }<br />
    }</p>
  <p>Il codice sopra <span class="notranslate">loops</span> attraverso 10 valori di <a href="../Arrays.htm">array</a> e li aggiunge ad una variabile locale. Se il totale della variabile locale è maggiore del valore dato per <span class="inline">max_total</span>, allora il <span class="notranslate">loop</span> è terminato usando break, altrimenti il <span class="notranslate">loop</span> continuerà. </p>
  <p>Un esempio di utilizzo di <span class="inline">continue</span> in un <span class="inline">repeat</span> <span class="notranslate">loop</span> sarebbe:</p>
  <p class="code">repeat(10)<br />
    {   <br />
        var _x = random(room_width);<br />
        var _y = random(room_height);<br />
        if (instance_position(_x, y, obj_Enemy)<br />
        {<br />
            continue;<br />
        }<br />
        instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br />
    }</p>
  <p>Questo codice ripeterà 10 volte, generando una posizione casuale <span class="notranslate">room</span> poi controllando se un'istanza di <span class="notranslate">object</span> <span class="inline">obj_Enemy</span> esiste in quella posizione. Se esiste, l'iterazione corrente di <span class="notranslate">loop</span> viene terminata usando <span class="inline">continue</span> e viene avviata una nuova iterazione; se non esiste, viene creata un'istanza di <span class="notranslate">object</span> <span class="inline">obj_Enemy</span> nella posizione casuale.</p>
  <p>Per altri esempi di funzioni <span class="notranslate">loop</span> si vedano le sezioni su <a href="while.htm"><span class="inline">while</span></a>, <a href="do___until.htm"><span class="inline">do... until</span></a>, e <a href="for.htm"><span class="inline">for</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Language_Features.htm">Caratteristiche della lingua</a></div>
        <div style="float:right">Il prossimo: <a href="while.htm"><span class="notranslate">while</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
repeat
-->
  <!-- TAGS
repeat
-->
</body>
</html>