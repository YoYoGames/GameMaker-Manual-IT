<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>fare / fino a quando</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the do / until functions" />
  <meta name="rh-index-keywords" content="do,until" />
  <meta name="search-keywords" content="do,until" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>fare / fino a quando</h1>
  <p>Una funzione <span class="inline">do</span> è un altro modo di iterare su una o più<span class="glossextra">dichiarazioni</span> più volte, ed è in realtà una dichiarazione &quot;<span class="inline">do... until</span>&quot;, poiché non si può avere una senza l'altra, dato che si sta dicendo a <span data-keyref="GameMaker Name">GameMaker</span> di fare qualcosa finché una specifica <a class="glossterm" data-glossterm="espressione" href="#">espressione</a> non ritorna <span class="inline">true</span>. Ha questa forma:</p>
  <p class="code">do<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }<br />
    until (&lt;expression&gt;);</p>
  <p>Lo statement (che può essere un blocco di codice di più statement all'interno di parentesi graffe <span class="inline">{}</span>) viene eseguito finché l'espressione non viene trovata <span class="inline">true</span>, e lo statement iniziale viene <strong>sempre eseguito almeno una volta</strong>. Qui sotto potete trovare un esempio di un modo tipico di usare <span class="inline">do... until</span>:</p>
  <p class="code">do<br />
    {<br />
        x = random(room_width);<br />
        y = random(room_height);<br />
    }<br />
    until (place_free(x, y));</p>
  <p>Il codice di cui sopra cerca di posizionare l'attuale <span class="notranslate">object</span> in una posizione libera e imposterà le variabili x/y almeno una volta, e poi eseguirà tutte le <a class="glossterm" data-glossterm="iterazione" href="#">iterazioni</a>necessarie finché l'espressione <span class="inline">place_free()</span> non restituirà <span class="inline">true</span>.</p>
  <p><strong>Quando si dovrebbe usare un <span class="inline">do</span> / <span class="inline">until</span> <span class="notranslate">loop</span>?</strong> Dovrebbe essere usato ogni volta che vuoi ripetere una o più dichiarazioni, ma non sai effettivamente quante volte deve ripetere, e vuoi assicurarti che le dichiarazioni siano eseguite <em>almeno una volta</em> prima che il <span class="notranslate">loop</span> finisca.</p>
  <p>Potete anche usare i tasti <a href="break.htm"><span class="inline">break</span></a> e <a href="continue.htm"><span class="inline">continue</span></a> all'interno del vostro <span class="inline">do</span> <span class="notranslate">loops</span>. Usando <span class="inline">break</span> si uscirà immediatamente da <span class="notranslate">loop</span> e si passerà a qualsiasi codice che si trova nell'evento o nella funzione dopo che <span class="notranslate">loop</span> dovrebbe aver finito, ad esempio:</p>
  <p class="code">var _id = noone;<br />
    do<br />
    {<br />
        _id = list[| 0];<br />
        if (instance_exists(_id)) <br />
        {<br />
            _break;<br />
        }<br />
        ds_list_delete(list, 0);<br />
    }<br />
    until (ds_list_empty(list));<br />
    <br />
    target = _id;
  </p>
  <p>Nel codice precedente, creiamo una variabile locale e la impostiamo per contenere la parola chiave <a href="../Instance_Keywords.htm"><span class="notranslate">noone</span></a>. Poi eseguiamo un <span class="inline">do / until</span> <span class="notranslate">loop</span> controllo della prima posizione di una lista DS per vedere se contiene un ID di istanza valido, e se è così allora noi <span class="inline">break</span> il <span class="notranslate">loop</span>, altrimenti il valore per la posizione della lista viene cancellato. Dopo che il <span class="notranslate">loop</span> è terminato (o dal <span class="inline">break</span> o perché la lista è vuota) il valore della variabile locale viene assegnato alla variabile di istanza <span class="inline">target</span>.</p>
  <p>Un esempio di utilizzo di continue in un <span class="inline">do / until</span> <span class="notranslate">loop</span> potrebbe essere:</p>
  <p class="code">do<br />
    {<br />
        var _x = random(room_width);<br />
        var _y = random(room_height);<br />
        if (instance_position(_x, y, obj_Enemy)<br />
        {<br />
            continue;<br />
        }<br />
        instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br />
    }<br />
    until (instance_count(obj_Enemy) &gt;= 10);</p>
  <p>Questo codice genererà una posizione casuale <span class="notranslate">room</span> poi controllerà se un'istanza di <span class="notranslate">object</span> <span class="inline">obj_Enemy</span> esiste in quella posizione. Se esiste, l'iterazione corrente di <span class="notranslate">loop</span> viene terminata usando <span class="inline">continue</span> e viene avviata una nuova iterazione; se non esiste, viene creata un'istanza di <span class="notranslate">object</span> <span class="inline">obj_Enemy</span> nella posizione casuale. Il <span class="notranslate">loop</span> terminerà solo quando ci sono 10 o più istanze di <span class="notranslate">object</span> nel <span class="notranslate">room</span>.</p>
  <p>Un'ultima nota: fate attenzione al vostro <span class="inline">do</span> <span class="notranslate">loops</span>, perché potete facilmente renderlo <span class="notranslate">loop</span> per sempre, nel qual caso il vostro gioco si bloccherà e non reagirà più a nessun input dell'utente, che dovrà chiuderlo forzatamente.</p>
  <p>Per altri esempi di parole chiave <span class="notranslate">loop</span> vedere le sezioni su <a href="repeat.htm"><span class="inline">repeat</span></a>, <a href="while.htm"><span class="inline">while</span></a>, e <a href="for.htm"><span class="inline">for</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Language_Features.htm">Caratteristiche della lingua</a></div>
        <div style="float:right">Il prossimo: <a href="for.htm"><span class="notranslate">for</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
do
until
-->
  <!-- TAGS
do
until
-->
</body>
</html>