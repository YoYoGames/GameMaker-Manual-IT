<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>cancellare</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the delete function" />
  <meta name="rh-index-keywords" content="delete" />
  <meta name="search-keywords" content="delete" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>cancellare</h1>
  <p>L'operatore <span class="inline">delete</span> è usato per <strong>de-referenziare</strong> una <a href="../Structs.htm">struct</a>, e ha la seguente sintassi:</p>
  <p class="code">delete &lt;variable&gt;;</p>
  <p>Ciò significa che chiamate l'operatore di cancellazione insieme alla variabile che contiene un <span class="notranslate">struct</span> ed esso rimuoverà il <em>riferimento </em>specifico al <span class="notranslate">struct</span> memorizzato nella variabile data (un riferimento è semplicemente un valore che punta all'area di memoria
    che sta memorizzando il <span class="notranslate">struct</span> e il suo contenuto). Se questo riferimento era l'ultimo riferimento a <span class="notranslate">struct</span> nel vostro gioco, allora il <a class="glossterm" data-glossterm="collettore di rifiuti" href="#">garbage collector</a> rimuoverà <span class="notranslate">struct</span> dalla memoria in
    un'<a class="glossterm" data-glossterm="iterazione" href="#">iterazione</a> successiva, tipicamente all'inizio della fase successiva.</p>
  <p class="note"><strong>NOTA</strong>: <span class="inline">delete</span> può essere usato solo con le variabili e <i>non</i> con le espressioni</p>
  <p>Per impostazione predefinita, <span class="notranslate">structs</span> senza ulteriori riferimenti nel codice sarà garbage collect automaticamente nei passi successivi al loro utilizzo, ma è buona pratica usare questo operatore per segnalarli esplicitamente al garbage collector per rimuoverli dalla memoria all
    all'inizio del passo successivo, liberando la memoria in modo rapido ed efficiente.</p>
  <p>L'esempio seguente mostra la creazione di un <span class="notranslate">struct</span> - per esempio nell'evento Create di un'istanza:</p>
  <p class="code">mystruct =<br/> {
    <br/>     a : 0,<br/>     b : 100,<br/>     c : &quot;Hello World&quot;<br/> }
  </p>
  <p>Questo <span class="notranslate">struct</span> sarà poi usato negli eventi di istanza come al solito, prima di essere finalmente segnalato per il garbage collection nell'evento <a href="../../../The_Asset_Editors/Object_Properties/Object_Events.htm">Clean Up</a>, come questo:</p>
  <p class="code">delete mystruct;</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Language_Features.htm">Caratteristiche della lingua</a></div>
        <div style="float:right">Dopo: <a href="If_Else_and_Conditional_Operators.htm">if / else e operatori condizionali</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
delete
-->
  <!-- TAGS
delete
-->

</body></html>