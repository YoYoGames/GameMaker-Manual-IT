<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_encode</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for json_encode" />
  <meta name="rh-index-keywords" content="json_encode" />
  <meta name="search-keywords" content="json_encode" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_encode</h1>
  <h3><strong>IMPORTANTE!</strong> Questa funzione - anche se ancora valida - è stata sostituita dalla funzione <span class="inline"><a href="json_stringify.htm">json_stringify()</a></span>, e si consiglia di utilizzare questa funzione solo per il supporto legacy.</h3>
  <p>JSON (JavaScript <span class="notranslate">Object</span> Notation) è un formato leggero per lo scambio di dati che è facile da leggere e scrivere, sia per le persone che per le macchine. È costruito su due strutture di base:</p>
  <ul class="colour">
    <li>Un insieme di coppie nome/valore, chiamato <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a> in <span data-keyref="GameMaker Name">GameMaker</span> ma anche conosciuto come &quot;dizionario&quot; o &quot;oggetto&quot; in altri linguaggi di programmazione.</li>
    <li>Un elenco ordinato di valori, chiamato <a href="../../Data_Structures/DS_Lists/DS_Lists.htm"><span class="inline">DS </span><span class="inline">List</span></a> in <span data-keyref="GameMaker Name">GameMaker</span>, ma può anche essere chiamato &quot;array&quot; o &quot;sequenza&quot; in altri linguaggi di programmazione.</li>
  </ul>
  <p><span class="inline">json_encode()</span> prende una mappa o un array DS che avete precedentemente creato e lo codifica come JSON <span class="notranslate">string</span> che potete poi usare (per esempio) come parte di una chiamata <a href="../../Asynchronous_Functions/HTTP/http_post_string.htm"><span class="inline">http_post_string()</span></a> oppure, per essere memorizzato esternamente, può essere scritto in un file. Se usi un array come struttura di primo livello, allora l'array può contenere solo valori validi o altri array, e <em>non</em> strutture di dati. Per questo dovreste usare le funzioni DS appropriate.</p>
  <p class="note"><strong>IMPORTANTE!</strong> JSON è agnostico riguardo ai numeri. In qualsiasi linguaggio di programmazione, ci può essere una varietà di tipi di numeri di varie capacità e complementi, fissi o fluttuanti, binari o decimali. Questo può rendere difficile l'interscambio tra diversi linguaggi di programmazione. JSON invece offre solo la rappresentazione dei numeri che gli umani usano: un <span class="notranslate">sequence</span> di cifre. Tutti i linguaggi di programmazione sanno come dare un senso alle cifre <span class="notranslate">sequences</span> anche se non sono d'accordo sulle rappresentazioni interne. Per maggiori informazioni vedi lo <a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">standard ECMA JSON</a>.</p>
  <p>Si noti che si dovrebbe fare attenzione quando si scrive JSON in un file ini, poiché le specifiche ini possono causare problemi quando si usano virgolette e caratteri di escape. Vedere la funzione <a href="../Ini_Files/ini_write_string.htm"><span class="inline">ini_write_string()</span></a> per maggiori informazioni. Nota anche che se codifichi un int64 in JSON lo scriverà come un <i>int</i> se è nell'intervallo valido per un int32, come un <i>doppio</i> se può farlo senza perdere precisione o (se nessuno di questi casi è applicabile) come una <i>stringa</i> con un identificatore &quot;<span class="inline">@i64@</span>&quot; prima e &quot;<span class="inline">$i64$</span>&quot; dopo. Quando si arriva a decodificare il JSON in una mappa di nuovo <span data-keyref="GameMaker Name">GameMaker</span> prenderà questi identificatori e riconvertirà il valore in un int64. Questo significa che se il JSON è destinato a <span class="notranslate">server</span> o a qualche altro target non-GameMaker, questi valori non saranno appropriati e quindi dovrebbero essere evitati.</p>
  <p class="note"><b>NOTA</b>: La funzionalità gerarchica di JSON è disponibile attraverso le funzioni speciali DS map e DS list (per esempio <span class="inline"><a href="../../Data_Structures/DS_Maps/ds_map_add_list.htm" style="font-size: 14px">ds_map_add_list()</a></span> o <span class="inline"><a href="../../Data_Structures/DS_Lists/ds_list_mark_as_map.htm" style="font-size: 14px">ds_list_mark_as_map()</a></span>), quindi siete in grado di codificare sottoelenchi e mappe.</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">json_encode(map)</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Tipo</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">map</span></td>
        <td><span data-keyref="Type_ID_DS_Map">ID della mappa DS</span></td>
        <td><span class="notranslate">A DS map with the information to encode (or an array)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_String">String</span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">var hiscore_map, i, str;<br />
    hiscore_map = ds_map_create();<br />
    for (i = 0; i &lt; 10; i ++;)<br />
    {<br />
        ds_map_add(hiscore_map, name[i], score[i]);<br />
    }<br />
    str = json_encode(hiscore_map);<br />
    get[0] = http_post_string(&quot;http://www.angusgames.com/game?game_id=&quot; + string(global.game_id), str)<br />
    ds_map_destroy(hiscore_map);</p>
  <p>Il codice precedente crea una mappa DS e poi <span class="notranslate">loops</span> attraverso gli array di nomi e punteggi, aggiungendo ogni coppia chiave/valore alla nuova mappa. Successivamente, questa mappa viene codificata usando <span class="inline">json_encode()</span> e memorizzata come <span class="notranslate">string</span> nella variabile &quot;str&quot;. Questo <span class="notranslate">string</span> viene poi inviato a un web <span class="notranslate">server</span> usando <span class="inline">http_post_string()</span> e la mappa DS viene distrutta per prevenire una perdita di memoria, dato che non è più necessaria.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Encoding_And_Hashing.htm">Codifica dei file</a></div>
        <div style="float:right">Il prossimo: <a href="json_decode.htm"><span class="notranslate">json_decode</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
json_encode
-->
  <!-- TAGS
json_encode
-->
</body>
</html>