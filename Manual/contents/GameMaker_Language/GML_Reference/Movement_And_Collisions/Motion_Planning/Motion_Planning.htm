<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Pianificazione del movimento</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for Motion Planning functions and variables" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Motion Planning,mp,mp funtions" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Pianificazione del movimento</h1>
  <p>In molti giochi si vuole che gli avversari, i PNG, i nemici ecc... interagiscano con il giocatore e mostrino una certa intelligenza quando si muovono, cioè: si vuole che evitino gli ostacoli, pianifichino i percorsi e in generale non sbattano contro tutto ciò che si trova nel loro <span class="notranslate">path</span>! Per aiutare in questo <span data-keyref="GameMaker Name">GameMaker</span> ha una serie di funzioni che si occupano della pianificazione del movimento. Notate che mentre queste sono progettate per cose come i nemici del gioco, possono essere usate per ogni sorta di cose come creare un modo fluido per introdurre il testo, o per creare transizioni ecc... Comunque, qualunque cosa scegliate di usare dalla lista qui sotto nel vostro gioco, va notato che in molte situazioni un singolo set di funzioni non vi darà una soluzione perfetta e che dovrete &quot;mescolare e abbinare&quot; le funzioni, usando una o l'altra a seconda della situazione nel vostro gioco.</p>
  <p>La pianificazione del movimento in <span data-keyref="GameMaker Name">GameMaker</span> è gestita dalle funzioni <b>mp_</b>, che sono suddivise nei seguenti tre gruppi:</p>
  <h2><label for="one">Funzioni lineari</label></h2>
  <p>Questo tipo di funzione cerca di calcolare un <span class="notranslate">path</span> senza collisioni per l'istanza. Una volta che questo <span class="notranslate">path</span> è stato calcolato è possibile assegnarlo all'istanza per muoversi verso l'obiettivo. Il calcolo di <span class="notranslate">path</span> richiederà un po' di tempo, ma poi l'esecuzione di <span class="notranslate">path</span> sarà veloce. Naturalmente questo è valido solo se la situazione non è cambiata nel frattempo. Per esempio, se gli ostacoli cambiano è possibile che sia necessario ricomputare <span class="notranslate">path</span>. Notate ancora una volta che queste funzioni potrebbero fallire e che nessun <span class="notranslate">path</span> potrebbe essere trovato per l'istanza.</p>
  <ul class="colour">
    <li><a href="mp_linear_step.htm"><span class="notranslate">mp_linear_step</span></a></li>
    <li><a href="mp_linear_step_object.htm"><span class="notranslate">mp_linear_step_object</span></a></li>
    <li><a href="mp_linear_path.htm"><span class="notranslate">mp_linear_path</span></a></li>
    <li><a href="mp_linear_path_object.htm"><span class="notranslate">mp_linear_path_object</span></a></li>
  </ul>
  <p> </p>
  <h2><label for="three">Funzioni potenziali</label></h2>
  <p>Queste sono le funzioni di evitamento di base e vanno bene per l'IA semplice. Funzionano facendo fare a un'istanza un passo verso una particolare posizione dell'obiettivo, cercando di andare dritto se possibile, ma prendendo una direzione diversa se necessario. Queste funzioni dovrebbero essere usate nell'<b>evento Step</b> di un'istanza.</p>
  <ul class="colour">
    <li><a href="mp_potential_settings.htm"><span class="notranslate">mp_potential_settings</span></a></li>
    <li><a href="mp_potential_step.htm"><span class="notranslate">mp_potential_step</span></a></li>
    <li><a href="mp_potential_step_object.htm"><span class="notranslate">mp_potential_step_object</span></a></li>
    <li><a href="mp_potential_path.htm"><span class="notranslate">mp_potential_path</span></a></li>
    <li><a href="mp_potential_path_object.htm"><span class="notranslate">mp_potential_path_object</span></a></li>
  </ul>
  <p> </p>
  <h2><label for="two">Funzioni della griglia</label></h2>
  <p>L'ultimo tipo di funzione usa un meccanismo molto più complesso basato su un approccio a griglia (talvolta chiamato algoritmo A*). Avrà molto più successo nel trovare <span class="notranslate">paths</span> (anche se potrebbe ancora fallire) e troverà il più breve <span class="notranslate">paths</span> possibile, ma richiede più lavoro da parte vostra per impostarlo.</p>
  <p>L'idea globale è la seguente - Prima di tutto creiamo una griglia che copre il <span class="notranslate">room</span> (o la parte rilevante di esso). Puoi scegliere di usare una griglia fine, che sarà più lenta, o una griglia grossolana, ma entrambe dovrebbero essere basate sulla risoluzione di <span class="notranslate">room</span> in modo che il path-finding sia il più accurato possibile. Per esempio, se hai un <span class="notranslate">room</span> che è 400x200 pixel, puoi avere una risoluzione della griglia di 40, o 20, o 10... tutto dipende da quanto accurato hai bisogno che il <span class="notranslate">path</span> sia e quanta elaborazione vuoi che <span class="notranslate">GameMaker</span> faccia per generarlo.</p>
  <p>In seguito, per tutti i <span class="notranslate">objects</span> rilevanti che vogliamo evitare, dobbiamo determinare le celle della griglia che si sovrappongono (basandoci sui loro riquadri di delimitazione o sul loro preciso <span class="notranslate">sprite</span>) e contrassegnare queste celle come vietate. Così una cella sarà marcata come totalmente proibita, anche se un ostacolo è solo parzialmente sovrapposto.</p>
  <p>Infine specifichiamo una posizione di partenza e una posizione di arrivo, che <i>devono</i> trovarsi entrambe in celle libere, e la funzione calcola quindi il più breve <span class="notranslate">path</span> possibile tra queste due posizioni. Il <span class="notranslate">path</span> correrà tra i centri di tutte le celle libere, quindi se le celle sono abbastanza grandi in modo che l'istanza posta al suo centro giaccia completamente al suo interno, questo avrà successo. Questo <span class="notranslate">path</span> viene poi assegnato all'istanza da seguire usando le funzioni <a href="../../Asset_Management/Paths/Paths.htm"><span class="inline">path_*</span></a> funzioni. Dovreste rendervi conto di quanto sia importante la dimensione delle celle per questo, poiché le celle devono essere abbastanza grandi in modo che l'istanza mobile <span class="notranslate">object</span> posta con la sua origine al centro di una cella si trovi <i>completamente</i> all'interno della cella. (Fate attenzione alla posizione dell'origine del <span class="notranslate">object</span>. Rendetevi anche conto che potete spostare il <span class="notranslate">path</span> se l'origine del <span class="notranslate">object</span> non è nel suo centro!) D'altra parte, più le celle sono piccole e più sono possibili <span class="notranslate">paths</span>. Se si fanno celle troppo grandi, le aperture tra gli ostacoli possono chiudersi perché tutte le celle intersecano un ostacolo.</p>
  <ul class="colour">
    <li><a href="mp_grid_create.htm"><span class="notranslate">mp_grid_create</span></a></li>
    <li><a href="mp_grid_destroy.htm"><span class="notranslate">mp_grid_destroy</span></a></li>
    <li><a href="mp_grid_path.htm"><span class="notranslate">mp_grid_path</span></a></li>
    <li><a href="mp_grid_add_cell.htm"><span class="notranslate">mp_grid_add_cell</span></a></li>
    <li><a href="mp_grid_add_instances.htm"><span class="notranslate">mp_grid_add_instances</span></a></li>
    <li><a href="mp_grid_add_rectangle.htm"><span class="notranslate">mp_grid_add_rectangle</span></a></li>
    <li><a href="mp_grid_get_cell.htm"><span class="notranslate">mp_grid_get_cell</span></a></li>
    <li><a href="mp_grid_clear_all.htm"><span class="notranslate">mp_grid_clear_all</span></a></li>
    <li><a href="mp_grid_clear_cell.htm"><span class="notranslate">mp_grid_clear_cell</span></a></li>
    <li><a href="mp_grid_clear_rectangle.htm"><span class="notranslate">mp_grid_clear_rectangle</span></a></li>
    <li><a href="mp_grid_to_ds_grid.htm"><span class="notranslate">mp_grid_to_ds_grid</span></a></li>
    <li><a href="mp_grid_draw.htm"><span class="notranslate">mp_grid_draw</span></a></li>
  </ul>
  <p> </p>
  <p>L'approccio basato sulla griglia è molto potente (ed è usato in molti giochi professionali), ma richiede un'attenta riflessione in quanto si deve determinare quale area e dimensione delle celle sono sufficienti per risolvere il gioco. Inoltre, è necessario determinare quali <span class="notranslate">objects</span> devono essere evitati e se è importante un controllo preciso. Tutti questi parametri influenzano fortemente l'efficienza dell'approccio. Dovete anche decidere se è effettivamente necessario, dato che forse una delle funzioni meno costose di <span class="inline">mp_*</span> può fare il lavoro altrettanto bene.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Movement_And_Collisions.htm">Movimento e collisioni</a></div>
        <div style="float:right">Il prossimo: <a href="../Collisions/Collisions.htm">Collisioni</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
Motion Planning
MP Functions
Motion Planning Functions
-->
  <!-- TAGS
mp_functions
-->
</body>
</html>