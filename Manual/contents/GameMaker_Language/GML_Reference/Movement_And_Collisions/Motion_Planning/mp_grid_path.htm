<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>mp_grid_path</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="This page outlines the function mp_grid_path" />
  <meta name="rh-index-keywords" content="mp_grid_path" />
  <meta name="search-keywords" content="mp_grid_path" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>mp_grid_path</h1>
  <p>Con questa funzione potete creare un <span class="notranslate">path</span> che navigherà da un punto di partenza a un punto di arrivo utilizzando un <span class="inline">mp_grid</span> che avete precedentemente definito, evitando eventuali ostacoli che sono già stati aggiunti nella griglia. Gli argomenti xstart e ystart indicano l'inizio del <span class="notranslate">path</span> in coordinate <span class="notranslate">room</span>, mentre gli argomenti xgoal, ygoal indicano la destinazione. È anche possibile selezionare solo il movimento orizzontale/verticale, o permettere movimenti diagonali completi specificando true nell'argomento allowdiag. La funzione restituisce true (è riuscita a trovare un <span class="notranslate">path</span>) o false (ha fallito) così come l'impostazione del <span class="notranslate">path</span> scelto. Nell'immagine seguente, potete vedere come tutto questo funziona insieme:</p>
  <p><img>Come potete vedere, il &quot;tubo&quot; <span class="notranslate">objects</span> è stato aggiunto nella griglia, il che significa che qualsiasi <span class="notranslate">path</span> creato deve girarci intorno. Ci sono due <span class="notranslate">paths</span> creati nell'immagine, uno (verde) è stato fatto con le diagonali permesse e l'altro (rosso) senza. La differenza tra i due è abbastanza ovvia con il verde <span class="notranslate">path</span> che appare molto più &quot;elegante&quot; e diretto, ma tutto dipende dall'uso che ne farete e quale preferite. Notate che il <span class="notranslate">path</span> è indipendente dall'istanza corrente - è un <span class="notranslate">path</span> attraverso la griglia, non un <span class="notranslate">path</span> per una specifica istanza, anche se una specifica istanza può avere la variabile che memorizza l'indice <span class="notranslate">path</span>. Potreste anche aver bisogno di fare il debug di questi <span class="notranslate">paths</span> per vedere come sono fatti e come interagiscono nell'ambiente di gioco, nel qual caso dovreste usare la funzione <span class="inline"><a href="../../Drawing/Basic_Forms/draw_path.htm">draw_path()</a></span>.</p>
  <p class="note"><b>NOTA</b>: Il <span class="notranslate">path</span> deve essere stato creato in precedenza (sia nel codice con <span style="font-size:1px;"><a href="../../Asset_Management/Paths/Path_Manipulation/path_add.htm"><span class="inline">path_add()</span></a></span> o come risorsa) e sarà sostituito dal <span class="notranslate">path</span> generato da questa funzione.</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">mp_grid_path(id, path, xstart, ystart, xgoal, ygoal, allowdiag);</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Tipo</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">id</span></td>
        <td><span data-keyref="Type_ID_MP_Grid">ID griglia MP</span></td>
        <td><span class="notranslate">Index of the mp_grid that is to be used</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">path</span></td>
        <td><span data-keyref="Type_Asset_Path">Percorso patrimoniale</span></td>
        <td><span class="notranslate">index of the path that is to be used by the function</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xstart</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Starting x coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ystart</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Starting y coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xgoal</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Finishing x coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ygoal</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Finishing y coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">allowdiag</span></td>
        <td><span data-keyref="Type_Bool">Booleano</span></td>
        <td><span class="notranslate">Indicates whether diagonal moves are allowed instead of just horizontal or vertical</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_Bool">Boolean</span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">global.grid = mp_grid_create(0, 0, room_width div 32, room_height div 32, 32, 32);<br />
    mp_grid_add_instances(global.grid, obj_wall, false);<br />
    with (obj_Enemy)<br />
    {<br />
        path = path_add();<br />
        if mp_grid_path(global.grid, path, x, y, obj_Player.x, obj_Player.y, 1)<br />
        {<br />
            path_start(path, 0, 3, 0);<br />
        }<br />
    }</p>
  <p>Il codice qui sopra crea una variabile globale &quot;global.grid&quot;, poi genera una mp_grid e assegna il suo indice (id) a quella variabile per usarla in tutte le ulteriori chiamate di funzioni mp_grid. Quindi aggiunge tutte le istanze di &quot;obj_Wall&quot; nella griglia prima di ottenere tutte le istanze di &quot;obj_Enemy&quot; per creare un <span class="notranslate">path</span> e poi usare <span class="inline">mp_grid_path</span> per calcolare un percorso dalla loro posizione alla posizione di &quot;obj_Player&quot;. Se esiste un percorso, allora il <span class="notranslate">object</span> si avvia lungo il <span class="notranslate">path</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Motion_Planning.htm">Pianificazione del movimento</a></div>
        <div style="float:right">Il prossimo: <a href="mp_grid_add_cell.htm"><span class="notranslate">mp_grid_add_cell</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
mp_grid_path
-->
  <!-- TAGS
mp_grid_path
-->
</body>
</html>