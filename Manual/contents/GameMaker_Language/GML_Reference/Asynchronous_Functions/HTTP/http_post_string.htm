<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_post_stringa</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_post_string" />
  <meta name="rh-index-keywords" content="http_post_string" />
  <meta name="search-keywords" content="http_post_string" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_post_stringa</h1>
  <p>In informatica, una <b>post</b> request viene utilizzata quando il client ha bisogno di inviare dati al <span class="notranslate">server</span> come parte della richiesta di recupero, come quando si carica un file o si invia un modulo compilato, e lo stesso vale per questa funzione in <span data-keyref="GameMaker Name">GameMaker</span>. A differenza del metodo di richiesta <span class="inline"><a href="http_get.htm">http_get()</a></span> in cui solo un URL viene inviato a <span class="notranslate">server</span>, <span class="inline">http_post_string()</span> include anche un <span class="notranslate">string</span> che viene inviato a <span class="notranslate">server</span> e può risultare nella creazione di una nuova risorsa o l'aggiornamento di una risorsa esistente o entrambi. Si dovrebbe notare che i parametri di richiesta HTTP (i bit a volte &quot;attaccati&quot; alla fine di un URL quando si invia un modulo su una pagina web) sono perfettamente accettabili anche quando si usa questa funzione.</p>
  <p class="note"><b><span class="note">NOTA</span> </b>Dovresti essere consapevole che a causa della protezione XSS nei browser, le richieste e i tentativi di caricare risorse da altri domini sono bloccati e possono sembrare restituire risultati vuoti. Si prega di vedere la parte sui <a href="HTTP.htm">problemi di dominio incrociato</a> per ulteriori dettagli.</p>
  <p>Questo evento genererà un &quot;call back&quot; che viene raccolto da qualsiasi <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">evento HTTP</a>, nel qual caso genererà una <a href="../../Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> (più comunemente nota come &quot;dizionario&quot;) che è esclusiva di questo evento e viene memorizzata nella variabile speciale <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Questa mappa DS conterrà valori diversi a seconda che ci siano dati restituiti o meno. Per esempio, se è stato richiesto un file, l'evento si attiverà più volte man mano che ogni pacchetto di dati viene ricevuto, in modo da poter mostrare una barra di progresso, per esempio. La struttura generale della mappa DS sarà la seguente:</p>
  <ul class="colour">
    <li><b>id: </b>L'ID che è stato restituito dal comando. Se sparate una serie di richieste <span class="inline">http_</span>, allora avete bisogno di sapere a quale state ricevendo la risposta, e quindi usereste questo valore per confrontarlo con il valore che avete memorizzato quando avete originariamente inviato la richiesta per trovare quello giusto.</li>
    <li><b>stato: </b>Restituisce un valore minore di 0 per un errore, 0 per completo e 1 per la ricezione di pacchetti (vedi sotto per maggiori dettagli).</li>
    <li><b>risultato: </b>I dati ricevuti (solo<span class="notranslate">string</span> ).</li>
    <li><b>url: </b>L'URL completo che hai richiesto.</li>
    <li><b>http_status: </b>Il codice di stato http grezzo (se disponibile). Questo restituisce il codice di stato web standard per la maggior parte dei browser, ad esempio: 304 per &quot;Non modificato&quot; o 204 per &quot;Nessun contenuto&quot;, ecc.</li>
  </ul>
  <p>Se ci sono più pacchetti che vengono restituiti al gioco, la chiave di callback &quot;status&quot; restituirà 1, nel qual caso la mappa DS avrà le seguenti chiavi aggiuntive:</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;: </b>Questa è la dimensione del file che il web <span class="notranslate">server</span> ha detto che dovresti aspettarti di ricevere (può essere -1 se <span class="notranslate">server</span> non restituisce questi dati).</li>
    <li><b>&quot;sizeDownloaded&quot;: </b>La dimensione dei dati che sono già stati scaricati.</li>
  </ul>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">http_post_string(url, string);</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th><th>Tipo</th>
        <th>Descrizione</th>
     </tr>
      <tr>
        <td><span class="notranslate">url</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The web address of the server that you wish to get information from</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The string you wish to send to the specified URL</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Esempio esteso:</h4>
  <p>La funzione <span class="inline">http_post_string()</span> può essere chiamata da qualsiasi evento, e poiché è asincrona il callback può essere quasi istantaneo o potrebbe richiedere diversi secondi. Chiamare la funzione è semplice e sarebbe qualcosa del genere:</p>
  <p class="code">var str = &quot;name=&quot; + global.player_name + &quot;&amp;score=&quot; + string(global.player_score);<br />
    post = http_post_string(&quot;http://www.angusgames.com/game?game_id=&quot; + string(global.game_id), str);</p>
  <p>Il codice qui sopra invia una richiesta di recupero all'URL specificato con i parametri indicati, oltre a inviare i dati aggiuntivi (nome del giocatore e punteggio in forma codificata dall'URL) memorizzati nella variabile str. Questo innescherà tutti gli <b>eventi Http</b> asincroni definiti se viene ricevuto un callback, ed è possibile controllare l'&quot;id&quot; restituito rispetto a quello memorizzato nella variabile <span class="inline">post</span> per assicurarsi di eseguire il codice corretto se si sono utilizzate varie funzioni <span class="inline">http_post_string()</span>. Il seguente codice di esempio mostra come questo verrebbe fatto:</p>
  <p class="code">var r_str = &quot;null&quot;;<br />
    if ds_map_find_value(async_load, &quot;id&quot;) == post<br />
    {<br />
        if ds_map_find_value(async_load, &quot;status&quot;) == 0<br />
        {<br />
            r_str = ds_map_find_value(async_load, &quot;result&quot;);<br />
        }<br />
    }</p>
  <p>Il codice qui sopra controllerà prima l'id della mappa DS che è stata creata, poi controllerà lo stato della callback. Se il valore è uguale a 0 (segnalando il successo) il risultato della callback verrà memorizzato in una variabile per un uso futuro, altrimenti la variabile conterrà semplicemente un valore predefinito (in questo caso &quot;null&quot;).</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">Il prossimo: <a href="http_get_request_crossorigin.htm"><span class="notranslate">http_get_request_crossorigin</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
http_post_string
-->
  <!-- TAGS
http_post_string
-->
</body>
</html>