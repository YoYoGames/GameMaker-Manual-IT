<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_get_file</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_get_file" />
  <meta name="rh-index-keywords" content="http_get_file" />
  <meta name="search-keywords" content="http_get_file" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_get_file</h1>
  <p>Con questa funzione, è possibile connettersi all'URL specificato per recuperare informazioni sotto forma di file. Poiché questa è una funzione asincrona, <span data-keyref="GameMaker Name">GameMaker</span> non si bloccherà in attesa di una risposta, ma continuerà a funzionare a meno che non riceva informazioni di richiamo. Queste informazioni saranno sotto forma di un <span class="notranslate">string</span> e attiveranno un <b>evento asincrono</b> in qualsiasi istanza che ne abbia uno definito nelle loro proprietà <span class="notranslate">object</span>.</p>
  <p class="note"><b><span class="note">NOTA</span> </b>Dovresti essere consapevole che a causa della protezione XSS nei browser, le richieste e i tentativi di caricare risorse da altri domini sono bloccati e possono sembrare restituire risultati vuoti. Si prega di vedere la parte sui <a href="HTTP.htm">problemi di dominio incrociato</a> per ulteriori dettagli.</p>
  <p>Questo evento genererà un &quot;richiamo&quot; che viene raccolto da qualsiasi <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">evento HTTP</a>, nel qual caso genererà un <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a> (più comunemente noto come &quot;dizionario&quot;) che è esclusivo di questo evento e viene memorizzato nella variabile speciale <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Questa mappa DS conterrà valori diversi a seconda dei dati restituiti, cioè: l'evento si attiverà più volte quando ogni pacchetto di dati viene ricevuto in modo da poter mostrare una barra di progresso, per esempio. La struttura generale della mappa DS sarà la seguente:</p>
  <ul class="colour">
    <li><b>id: </b>L'ID che è stato restituito dal comando. Se sparate una serie di richieste <span class="inline">http_</span>, allora avete bisogno di sapere a quale state ricevendo la risposta, e quindi usereste questo valore per confrontarlo con il valore che avete memorizzato quando avete originariamente inviato la richiesta per trovare quello giusto.</li>
    <li><b>stato: </b>Restituisce un valore minore di 0 per un errore, 0 per completo e 1 per la ricezione di pacchetti (vedi sotto per maggiori dettagli).</li>
    <li><b>risultato: </b>I dati ricevuti (solo<span class="notranslate">string</span> ).</li>
    <li><b>url: </b>L'URL completo che hai richiesto.</li>
    <li><b>http_status: </b>Il codice di stato http grezzo (se disponibile). Questo restituisce il codice di stato web standard per la maggior parte dei browser, ad esempio: 304 per &quot;Non modificato&quot; o 204 per &quot;Nessun contenuto&quot;, ecc.</li>
  </ul>
  <p>Se ci sono più pacchetti che vengono restituiti al gioco, la chiave &quot;status&quot; di callback restituirà 1, nel qual caso la mappa DS avrà le seguenti chiavi aggiuntive:</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;: </b>Questa è la dimensione del file che il web <span class="notranslate">server</span> ha detto che dovresti aspettarti di ricevere (può essere -1 se <span class="notranslate">server</span> non restituisce questi dati).</li>
    <li><b>&quot;sizeDownloaded&quot;: </b>La dimensione dei dati che sono già stati scaricati.</li>
  </ul>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">http_get_file(url, local_target);</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Tipo</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">url</span></td>
        <td><span data-keyref="Type_String">Stringa</span></td>
        <td><span class="notranslate">The web address of the server that you wish to get file from</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">local_target</span></td>
        <td><span data-keyref="Type_String">Stringa</span></td>
        <td><span class="notranslate">The local storage path to save the file to</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Esempio esteso:</h4>
  <p>La funzione <span class="inline">http_get_file()</span> può essere chiamata da qualsiasi evento, e poiché è asincrona il callback può essere quasi istantaneo o potrebbe richiedere diversi secondi. Chiamare la funzione è semplice e sarebbe qualcosa di simile a questo:</p>
  <p class="code">file = http_get_file(&quot;http://www.macsweeneygames.com/downloads/upgrade.zip&quot;, &quot;\Downloads\Upgrade.zip&quot;);</p>
  <p>Il codice sopra richiederà un file dall'URL dato e lo imposterà per essere scaricato nell'area di memorizzazione locale (come specificato nelle Opzioni di gioco HTML5), in una directory &quot;Downloads&quot; con il nome del file dato (questo non deve essere necessariamente lo stesso del nome del file sorgente, ma dovrebbe usare lo stesso file <span class="notranslate">extension</span>). L'indice della mappa <span class="inline">async_load</span> sarà memorizzato nella variabile &quot;file&quot; in modo da poter controllare il callback corretto nell'Evento Asincrono, e se la directory di salvataggio non esiste, sarà creata. L'evento asincrono innescato sarebbe il sotto-evento <b>HTTP</b>, e in quell'evento avresti qualcosa come il seguente:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == file<br />
    {<br />
        var status = ds_map_find_value(async_load, &quot;status&quot;);<br />
        if status == 0<br />
        {<br />
            var path = ds_map_find_value(async_load, &quot;result&quot;);<br />
            var files = zip_unzip(path, &quot;/NewContent/&quot;);<br />
            if files &gt; 0<br />
            {<br />
                global.ExtraContent = true;<br />
            }<br />
        }<br />
    }</p>
  <p>Il codice di cui sopra controllerà prima l'&quot;id&quot; della ds_map che è stata creata, poi controllerà lo stato della callback. Se il valore è uguale a 0 (segnalando il successo) il risultato della callback sarà usato insieme alla funzione <a href="../../File_Handling/Encoding_And_Hashing/zip_unzip.htm"><span class="inline">zip_unzip()</span></a> per decomprimere il file scaricato nella directory data. Se l'unzip ha successo, una variabile globale viene impostata a true.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">Il prossimo: <a href="http_post_string.htm"><span class="notranslate">http_post_string</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
http_get_file
-->
  <!-- TAGS
http_get_file
-->
</body>
</html>