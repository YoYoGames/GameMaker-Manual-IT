<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_get</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_get" />
  <meta name="rh-index-keywords" content="http_get" />
  <meta name="search-keywords" content="http_get" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_get</h1>
  <p>Con questa funzione, ci si collega all'URL specificato per recuperare informazioni. Trattandosi di una funzione asincrona, <span data-keyref="GameMaker Name">GameMaker</span> non si bloccherà in attesa di una risposta, ma continuerà a funzionare a meno che non riceva informazioni di richiamo. Queste informazioni saranno sotto forma di <span class="notranslate">string</span> e attiveranno un <b>Evento asincrono</b> in qualsiasi istanza che ne abbia uno definito nelle proprietà <span class="notranslate">object</span>. Si noti anche che i parametri di richiesta HTTP (i bit che a volte vengono &quot;aggiunti&quot; alla fine di un URL quando si invia un modulo su una pagina web) sono perfettamente accettabili quando si usa questa funzione, ad esempio:</p>
  <p class="code">http_get(&quot;http://www.example.com/logon?username=&quot;+name);</p>
  <p>passerà il <span class="notranslate">string</span> contenuto nella variabile &quot;name&quot; al <span class="notranslate">server</span> e recupererà i dati da quell'URL. Quindi, essenzialmente, ogni volta che un semplice e breve dato deve essere passato dal client a <span class="notranslate">server</span>, questa sarebbe una scelta ragionevole come funzione da usare.</p>
  <p class="note"><b>NOTA</b>: È necessario tenere presente che, a causa della protezione XSS dei browser, le richieste e i tentativi di caricamento di risorse provenienti da domini diversi vengono bloccati e potrebbero restituire risultati vuoti. Per ulteriori dettagli, consultare la sezione <a href="HTTP.htm">Problemi di dominio incrociato</a>.</p>
  <p>Questa funzione genera più &quot;richiami&quot; che vengono raccolti da qualsiasi <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">evento HTTP</a>. Questi genereranno un file <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a> (più comunemente noto come &quot;dizionario&quot;) che è esclusivo di questo evento ed è memorizzato nella variabile speciale <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Questa mappa DS conterrà valori diversi a seconda che vengano restituiti o meno dei dati. Ad esempio, se è stato richiesto un file, l'evento si attiverà più volte al momento della ricezione di ogni pacchetto di dati, in modo da poter mostrare, ad esempio, una barra di avanzamento. La struttura generale della mappa DS sarà la seguente:</p>
  <ul class="colour">
    <li><b>id: </b>L'ID restituito dal comando. Se si invia una serie di richieste a <span class="inline">http_</span>, è necessario sapere quale risposta si sta ricevendo, quindi si usa questo valore per confrontarlo con quello memorizzato al momento dell'invio della richiesta per trovare quella giusta.</li>
    <li><b>status: </b>Restituisce un valore inferiore a 0 in caso di errore, 0 in caso di completamento e 1 in caso di ricezione di pacchetti (vedere sotto per maggiori dettagli).</li>
    <li><b>risultato: </b>I dati ricevuti (solo<span class="notranslate">string</span> ).</li>
    <li><b>url: </b>L'URL completo richiesto.</li>
    <li><b>http_status: </b>Il codice di stato http grezzo (se disponibile). Restituisce il codice di stato web standard per la maggior parte dei browser, ad esempio: 304 per &quot;Non modificato&quot; o 204 per &quot;Nessun contenuto&quot;, ecc...</li>
  </ul>
  <p>Se vengono restituiti più pacchetti al gioco, la chiave di callback &quot;status&quot; restituirà 1, nel qual caso la mappa DS avrà le seguenti chiavi aggiuntive:</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;: </b>È la dimensione del file che il sito <span class="notranslate">server</span> ha detto di aspettarsi di ricevere (può essere -1 se <span class="notranslate">server</span> non restituisce questo dato).</li>
    <li><b>&quot;sizeDownloaded&quot;: </b>La dimensione dei dati già scaricati.</li>
  </ul>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">http_get(url);</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Tipo</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">url</span></td>
        <td><span data-keyref="Type_String"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Stringa</a></span></td>
        <td><span class="notranslate">The web address of the server that you wish to get information from</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Restituzione:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event"><a href="../../../../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Asynchronous_Functions.htm" target="_blank">Async Request ID</a></span></p>
  <p> </p>
  <h4>Esempio esteso:</h4>
  <p>La funzione <span class="inline">http_get()</span> può essere richiamata da qualsiasi evento e, poiché è asincrona, il richiamo può essere quasi istantaneo o richiedere diversi secondi. La chiamata della funzione è semplice e si presenta in questo modo:</p>
  <p class="code">get = http_get(&quot;http://www.MacSweeneyGames.com/logon?username=&quot; + name);</p>
  <p>Il codice precedente passerà l'indirizzo <span class="notranslate">string</span> contenuto nella variabile &quot;name&quot; al dato <span class="notranslate">server</span> e recupererà i dati da quell'URL, scatenando un evento asincrono che conterrà la mappa async_load DS (l'indice della mappa async_load sarà memorizzato nella variabile &quot;get&quot;, in modo da poter controllare il callback corretto). L'evento asincrono scatenato sarà il sottoevento <b>HTTP</b>, nel quale si avrà quanto segue:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == get<br />
    {<br />
        if (ds_map_find_value(async_load, &quot;status&quot;) == 0) <br />
        {<br />
            r_str = ds_map_find_value(async_load, &quot;result&quot;);<br />
        }<br />
        else<br />
        {<br />
            r_str = &quot;null&quot;;<br />
        }<br />
    }</p>
  <p>Il codice sopra riportato controlla innanzitutto l'id della mappa DS che è stata creata, quindi controlla lo &quot;status&quot; della callback. Se il valore è uguale a 0 (che segnala il successo), il risultato della callback sarà memorizzato in una variabile per usi futuri, altrimenti la variabile sarà impostata su un valore predefinito (in questo caso &quot;null&quot;).</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">Il prossimo: <a href="http_get.htm"><span class="notranslate">http_get_file</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
http_get
-->
  <!-- TAGS
http_get
-->
</body>
</html>