<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>array_sort</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function array_sort" />
  <meta name="rh-index-keywords" content="array_sort" />
  <meta name="search-keywords" content="array_sort" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span>array_sort</span></h1>
  <p>Con questa funzione è possibile ordinare una matrice in ordine crescente o decrescente o utilizzando una funzione personalizzata per definire l'ordine. La funzione richiede di fornire l'array da ordinare e quindi una delle seguenti opzioni:</p>
  <ul class="colour">
    <li>Le costanti <span class="inline">true</span> o <span class="inline">false</span> per indicare un <span>ordine crescente (<span class="inline">true</span>) o decrescente (<span class="inline">false</span>)</span>.</li>
    <li>Una funzione personalizzata per definire l'ordine</li>
  </ul>
  <p>Questa funzione modifica il contenuto dell'array originale fornito. Per creare una copia ordinata, utilizzare <span class="inline"><a href="array_copy.htm">array_copy()</a></span> per duplicare l'array e poi passarlo a questa funzione.</p>
  <h3>Utilizzo di una funzione personalizzata</h3>
  <p>Se si utilizza una funzione personalizzata per l'ordinamento, questa deve accettare 2 argomenti che riceveranno rispettivamente i valori dell'elemento corrente e dell'elemento successivo. La funzione deve restituire uno dei seguenti valori per influenzare l'ordine (dove <span class="inline">elm1</span> è l'elemento corrente e <span class="inline">elm2</span> è l'elemento successivo):</p>
  <ul class="colour">
    <li><span class="inline">0</span>: se <span class="inline">elm1</span> e <span class="inline">elm2</span> sono uguali</li>
    <li><span class="inline">&lt;= -1</span> (intero negativo): se <span class="inline">elm1</span> va prima di <span class="inline">elm2</span></li>
    <li><span class="inline">&gt;= 1</span> (numero intero positivo): se <span class="inline">elm1</span> va dopo <span class="inline">elm2</span></li>
  </ul>
  <p class="note"><span class="note">NOTA</span> Il valore restituito dalla funzione personalizzata deve essere un numero intero. I valori in virgola mobile inferiori a 1 saranno letti come 0, pertanto è necessario utilizzare il metodo <a href="../Maths_And_Numbers/Number_Functions/sign.htm"><span class="inline">sign()</span></a> o <a href="../Maths_And_Numbers/Number_Functions/round.htm"><span class="inline">round()</span></a> se la funzione lavora con valori in virgola mobile.</p>
  <p>Se l'array contiene una serie di <span class="notranslate">strings</span>, le <span class="notranslate">strings</span> saranno ordinate alfabeticamente in base all'alfabeto inglese quando si utilizza il tipo di ordinamento ascendente/discendente predefinito. Tutti gli altri <span class="notranslate">data types</span> saranno ordinati in base al loro valore numerico, i cui valori esatti dipenderanno dagli <span class="notranslate">data type</span> stessi (ad esempio, un array di <span class="notranslate">buffers</span> sarà ordinato in base al valore numerico dei loro indirizzi di memoria).</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">array_sort(variable, sorttype_or_function);</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Tipo</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">variable</span></td>
        <td><span data-keyref="Type_Array"><a href="../../../../GameMaker_Language/GML_Overview/Arrays.htm" target="_blank">Array</a></span></td>
        <td><span class="notranslate">The variable that holds the array.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span>sorttype_or_function<span> </span></td>
        <td><span data-keyref="Type_Bool"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Booleano</a></span> o <span data-keyref="Type_Function_Script"><a href="../../../../GameMaker_Language/GML_Overview/Script_Functions.htm" target="_blank">Funzione Script</a></span>/<span data-keyref="Type_Method"><a href="../../../../GameMaker_Language/GML_Overview/Method_Variables.htm" target="_blank">Metodo</a></span></td>
        <td><span class="notranslate">The sort type (<span><span class="inline">true</span> per l'ordinamento ascendente o <span class="inline">false</span> per l'ordinamento discendente) o un riferimento a una funzione da utilizzare per l'ordinamento.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Restituzione:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">var _a = [10, 9, 8, 7, 6, 5];<br />
    <br />
    array_sort(_a, function(elm1, elm2)<br />
    {<br />
        return elm1 - elm2;<br />
    });
  </p>
  <p>Il codice precedente utilizza una funzione di ordinamento personalizzata per ordinare l'array in ordine crescente. La funzione di ordinamento prende i due elementi dell'array <span class="inline">elm1</span> e <span class="inline">elm2</span> ed esegue una sottrazione su di essi. Se <span class="inline">elm1</span> è maggiore di <span class="inline">elm2</span>, la sottrazione dà come risultato un numero positivo che spinge <span class="inline">elm1</span> a posizionarsi dopo <span class="inline">elm2</span>, mettendoli quindi in ordine crescente.</p>
  <p>Ecco un esempio esteso:</p>
  <p class="code">var _xx, _yy, _a;<br />
    <br />
    for (var i = 0; i &lt; 10; i++)<br />
    {<br />
        _xx = irandom(room_width);<br />
        _yy = irandom(room_height);<br />
        _a[i] = instance_create_layer(_xx, _yy, layer, obj_Bullet);<br />
    }<br />
    <br />
    show_debug_message(_a);<br />
    <br />
    var _f = function(inst1, inst2)<br />
    {<br />
        return inst1.x - inst2.x;<br />
    }<br />
    <br />
    array_sort(_a, _f);<br />
    show_debug_message(_a);
  </p>
  <p>Il codice precedente creerà un array di 10 istanze collocate in posizioni casuali all'interno di <span class="notranslate">room</span>. Il messaggio di debug mostrerà qualcosa di simile a quanto segue:</p>
  <p class="code">[ 100003,100004,100005,100006,100007,100008,100009,100010,100011,100012 ]</p>
  <p>Il codice crea quindi un metodo da utilizzare nella funzione <span class="inline">array_sort()</span> che restituisce la differenza tra ciascuna delle posizioni X delle istanze in <span class="notranslate">room</span>. Quindi la funzione <span class="inline">array_sort()</span> viene eseguita utilizzando tale metodo, ordinando le istanze per X dalla più bassa alla più alta. L'output dell'array sarà quindi simile a questo:</p>
  <p class="code">[ 100011,100004,100009,100006,100012,100008,100010,100005,100007,100003 ]</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Variable_Functions.htm">Funzioni variabili</a></div>
        <div style="float:right">Il prossimo: <a href="array_length.htm"><span class="notranslate">array_length</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
array_sort
-->
  <!-- TAGS
array_sort
-->
</body>
</html>