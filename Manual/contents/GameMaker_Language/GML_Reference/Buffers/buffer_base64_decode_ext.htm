<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_base64_decode_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_base64_decode_ext" />
  <meta name="rh-index-keywords" content="buffer_base64_decode_ext" />
  <meta name="search-keywords" content="buffer_base64_decode_ext" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>buffer_base64_decode_ext</h1>
  <p>Con questa funzione potete decodificare un <span class="notranslate">string</span> codificato in base64 (creato usando la funzione <a href="buffer_base64_encode.htm"><span class="inline">buffer_base64_encode()</span></a> ) in un <span class="notranslate">buffer</span>. A differenza della funzione <a href="buffer_base64_decode.htm"><span class="inline">buffer_base64_decode()</span></a>,
    questa <i>non</i> creerà un <span class="notranslate">buffer</span> per voi, ma piuttosto dovreste già aver creato il <span class="notranslate">buffer</span> (vedi <a href="buffer_create.htm"><span class="inline">buffer_create()</span></a>), il cui id verrebbe poi utilizzato con questa funzione. L'&quot;offset&quot; è la
    posizione all'interno di <span class="notranslate">buffer</span> per decodificare il dato <span class="notranslate">string</span> (in byte).</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">buffer_base64_decode_ext(buffer, string, offset);</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th><th>Tipo</th>
        <th>Descrizione</th>
     </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td><td><span data-keyref="Type_ID_Buffer"></span></td>
        <td><span class="notranslate">The index of the buffer to decode the string into.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The base64 encoded string to decode.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">offset</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The data offset value.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">buff = buffer_create(16384, buffer_grow, 2);<br/> ini_open(&quot;Save.ini&quot;);
    <br/> var str = ini_read_string(&quot;Save&quot;, &quot;Slot1&quot;, &quot;&quot;);<br/> buffer_base64_decode_ext(buff, str, 0);<br/> ini_close();
  </p>
  <p>Il codice qui sopra creerà un <span class="notranslate">buffer</span> e memorizzerà l'id unico per esso nella variabile &quot;buff&quot;, poi aprirà un file ini e leggerà un <span class="notranslate">string</span> da esso nella variabile locale &quot;str&quot;. Questo <span class="notranslate">string</span> viene poi decodificato nel nuovo <span class="notranslate">buffer</span> appena creato prima di
    chiudere nuovamente il file ini.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Buffers.htm">Buffer</a></div>
        <div style="float:right">Dopo: <a href="buffer_set_used_size.htm">buffer_set_used_size</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
buffer_base64_decode_ext
-->
  <!-- TAGS
buffer_base64_decode_ext
-->
</body>
</html>