<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_write</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_write" />
  <meta name="rh-index-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
  <meta name="search-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>buffer_write</h1>
  <p>Questa funzione può essere usata per scrivere dati in un <span class="notranslate">buffer</span> precedentemente creato. I dati che scrivete devono essere in accordo con l'argomento &quot;type&quot; di questa funzione, il che significa che non potete provare a scrivere un <span class="notranslate">string</span> come un intero senza segno a 16 bit, per esempio. Le seguenti costanti possono essere usate per definire il tipo di dati:</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Buffer_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_write.htm">Buffer <span class="notranslate">Data Type</span> Costante</a></span></th>
      </tr>
      <tr>
        <th>Costante</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u8</span></td>
        <td>Un intero senza segno a 8 bit. È un valore positivo da 0 a 255.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s8</span></td>
        <td>Un intero a 8 bit con segno. Può essere un valore positivo o negativo da -128 a 127 (0 è classificato come positivo).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u16</span></td>
        <td>Un intero a 16 bit senza segno. È un valore positivo da 0 a 65.535.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s16</span></td>
        <td>Un intero a 16 bit con segno. Può essere un valore positivo o negativo da -32.768 a 32.767 (0 è classificato come positivo).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u32</span></td>
        <td>Un intero senza segno a 32 bit. È un valore positivo da 0 a 4.294.967.295.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s32</span></td>
        <td>Un intero a 32 bit con segno. Può essere un valore positivo o negativo da -2.147.483.648 a 2.147.483.647 (0 è classificato come positivo).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u64</span></td>
        <td>Un intero senza segno a 64 bit.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f16</span></td>
        <td>Un float a 16 bit. Questo può essere un valore positivo o negativo all'interno della stessa gamma di un intero firmato a 16 bit.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f32</span></td>
        <td>Un float a 32 bit. Questo può essere un valore positivo o negativo all'interno della stessa gamma di un intero firmato a 32 bit.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f64</span></td>
        <td>Un float a 64bit.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_bool</span></td>
        <td>Un valore booleano. Può essere solo 1 o 0 (<span class="inline">true</span> o <span class="inline">false</span>)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_string</span></td>
        <td>Un <span class="notranslate">string</span> di qualsiasi dimensione, finalizzato con un carattere finale nullo.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_text</span></td>
        <td>Un <span class="notranslate">string</span> di qualsiasi dimensione, senza il carattere finale nullo.</td>
      </tr>
    </tbody>
  </table>
  <p>La funzione restituirà 0 se ha successo o -1 se fallisce.</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">buffer_write(buffer, type, value)</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Tipo</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">ID del buffer</a></span></td>
        <td><span class="notranslate">The index of the buffer to write to.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">Real</a></span></td>
        <td><span class="notranslate">The type of data that is to be written to the buffer (see the list of constants above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">value</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">Real</a></span></td>
        <td><span class="notranslate">The data to write.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">Real</a></span> (0 if success, or -1 if it fails)</p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">buffer_seek(buff, buffer_seek_start, 0);<br />
    buffer_write(buff, buffer_s16, 0);<br />
    buffer_write(buff, buffer_s16, x);<br />
    buffer_write(buff, buffer_s16, y);</p>
  <p>Il codice qui sopra trova l'inizio del <span class="notranslate">buffer</span> con l'id memorizzato nella variabile &quot;buff&quot; e vi scrive una serie di valori interi firmati a 16 bit.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Buffers.htm">Buffer</a></div>
        <div style="float:right">Il prossimo: <a href="buffer_fill.htm"><span class="notranslate">buffer_fill</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
buffer_write
buffer_u8
buffer_s8
buffer_u16
buffer_s16
buffer_u32
buffer_s32
buffer_u64
buffer_f16
buffer_f32
buffer_f64
buffer_bool
buffer_string
buffer_text
-->
  <!-- TAGS
buffer_write
-->
</body>
</html>