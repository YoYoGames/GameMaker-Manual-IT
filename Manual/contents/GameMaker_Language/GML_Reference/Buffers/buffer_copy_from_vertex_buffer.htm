<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_copy_from_vertex_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_copy_from_vertex_buffer" />
  <meta name="rh-index-keywords" content="buffer_copy_from_vertex_buffer" />
  <meta name="search-keywords" content="buffer_copy_from_vertex_buffer" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">buffer_copy_from_vertex_buffer</span></h1>
  <p>This function copies some (or all) of the vertex data stored in one vertex buffer into a previously created regular buffer.</p>
  <p>When copying from a vertex buffer into a regular buffer with this function, both buffers must have previously been created (using the <span class="inline3_func"><a data-xref="{title}" href="../Drawing/Primitives/vertex_create_buffer.htm">vertex_create_buffer</a></span> and <span class="inline3_func"><a data-xref="{title}" href="buffer_create.htm">buffer_create</a></span> functions, for example). You can specify the range of vertex data that you wish to copy into the buffer, where the start vertex can be anywhere between 0 and the number of vertices -1, and you can give the number of vertices from that point on to copy. You can use the function <span class="inline3_func"><a data-xref="{title}" href="../Drawing/Primitives/vertex_get_number.htm">vertex_get_number</a></span> on the vertex buffer to get the total number of vertices stored. Finally you give the buffer index to copy the vertex data into, as well as a data offset to define the position to copy the vertex data to in the destination buffer.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">buffer_copy_from_vertex_buffer</span>(vertex_buffer, start_vertex, num_vertices, dest_buffer, dest_offset);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>vertex_buffer</td>
        <td><span data-keyref="Type_ID_Buffer_Vertex"><a href="../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_create_buffer.htm" target="_blank">Vertex Buffer</a></span></td>
        <td>The vertex buffer to copy <i>from</i>.</td>
      </tr>
      <tr>
        <td>start_vertex</td>
        <td><span data-keyref="Type_Real"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The starting vertex.</td>
      </tr>
      <tr>
        <td>num_vertices</td>
        <td><span data-keyref="Type_Real"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The total number of vertices to copy.</td>
      </tr>
      <tr>
        <td>dest_buffer</td>
        <td><span data-keyref="Type_ID_Buffer"><a href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm" target="_blank">Buffer</a></span></td>
        <td>The buffer to copy <i>to</i>.</td>
      </tr>
      <tr>
        <td>dest_offset</td>
        <td><span data-keyref="Type_Real"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The offset position to copy the data to (in bytes).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var _v_num = vertex_get_number(model_buff);<br />
    buffer_copy_from_vertex_buffer(model_buffer, 0, _v_num - 1, player_buffer, 0);</p>
  <p>The above code copies the vertex data stored in the vertex buffer stored in the variable <span class="inline2">model_buffer</span>, and then pastes it into the buffer stored in the variable <span class="inline2">player_buffer</span>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Buffers.htm">Buffers</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="buffer_save.htm">buffer_save</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_copy_from_vertex_buffer
-->
  <!-- TAGS
buffer_copy_from_vertex_buffer
-->
</body>
</html>