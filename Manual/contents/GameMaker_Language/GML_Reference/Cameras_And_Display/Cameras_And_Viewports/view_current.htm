<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vista_corrente</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for view_current" />
  <meta name="rh-index-keywords" content="view_current" />
  <meta name="search-keywords" content="view_current" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vista_corrente</h1>
  <p>Questa variabile di <b>sola lettura</b> è valida solo nell'ambiente <a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm"><b>Evento Draw</b></a> e restituisce la porta della vista corrente che viene resa. Il valore di ritorno cambierà durante l'evento draw quando avete varie viste, poiché l'evento draw viene chiamato <i>una volta per ogni porta di vista in successione</i>. Così quando (per esempio) state usando view port[0] e view port[1] nel vostro gioco <span class="notranslate">room</span>, l'evento draw per <i>TUTTE le</i> istanze sarà eseguito due volte, una per ogni porta, e con questa variabile potete controllare quale vista è attualmente disegnata. In generale, questo è usato per rendere solo dettagli specifici su una singola porta quando più porte di vista sono visibili in <span class="notranslate">room</span> allo stesso tempo. Vedere il codice di esempio qui sotto.</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">view_current;</p>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span> (view port index from 0 to 7)</p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">if view_current == 0<br />
    {<br />
        var _xx = camera_get_view_x(view_camera[0]);<br />
        var _yy = camera_get_view_y(view_camera[0]);<br />
        draw_text(_xx + 32, _yy + 32, &quot;Player 1&quot;);<br />
    }<br />
    else<br />
    {<br />
        var _xx = camera_get_view_x(view_camera[1]);<br />
        var _yy = camera_get_view_y(view_camera[1]);<br />
        draw_text(_xx + 32, _yy + 32, &quot;Player 2&quot;);<br />
    }</p>
  <p>Il codice qui sopra controlla per vedere quale vista è attualmente disegnata e poi disegna un testo diverso per ogni vista in base al valore di ritorno.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Cameras_And_View_Ports.htm">Telecamere e porte di visualizzazione</a></div>
        <div style="float:right">Il prossimo: <a href="view_enabled.htm"><span class="notranslate">view_enabled</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
view_current
-->
  <!-- TAGS
view_current
-->
</body>
</html>