<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>prodotto_punto</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for dot_product" />
  <meta name="rh-index-keywords" content="dot_product" />
  <meta name="search-keywords" content="dot_product" />
  <meta name="is_pure" content="true" />
</head>

<body>




  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>prodotto_punto</h1>
  <p>Il prodotto di punti è un valore che esprime la relazione angolare tra due vettori e si trova prendendo due vettori, moltiplicandoli insieme e poi sommando i risultati. Il nome &quot;prodotto di punti&quot; deriva dal punto centrato &quot;-&quot;
    che è spesso usato per designare questa operazione (il nome alternativo &quot;prodotto scalare&quot; sottolinea la natura scalare piuttosto che vettoriale del risultato).</p>
  <p>La formula matematica effettiva può essere scritta così:</p>
  <p><img alt="Dot Product formula" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image.png"/></p>
  <p>Così, in 2D il prodotto di punti dei vettori <span class="inline">a[x1,y1]</span> e <span class="inline">b[x2,2]</span> è <span class="inline">x1x2 + y1y2</span>, il che significa che il prodotto_punto in <span data-keyref="GameMaker Name">GameMaker</span> è calcolato come:</p>
  <p class="code">a · b = (x1*x2)+(y1*y2);</p>
  <p>La cosa curiosa del prodotto di punti è la relazione che ha con l'angolo formato dai vettori di ingresso che può essere espresso come:</p>
  <p class="code">a · b = (length of a) * (length of b) * cos(angle)</p>
  <p>Cioè, il prodotto del punto di due vettori sarà uguale al coseno dell'angolo tra questi vettori, moltiplicato per le lunghezze di ciascuno di essi. Ecco un'immagine per illustrare:</p>
  <p><img alt="Dot Product ilustration" class="center" height="143" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image_2.png" width="406"/></p>
  <p class="note"><strong>NOTA</strong>: Per maggiori informazioni sui vettori, vedere <a href="../../../../Additional_Information/Vectors.htm">qui</a>.</p>
  <p>Ci sono alcune cose che ora possiamo affermare da due vettori qualsiasi in relazione al risultato del loro prodotto di punti:</p>
  <ul class="colour">
    <li>Se a e b sono perpendicolari (a 90 gradi tra loro), il risultato del prodotto di punti sarà zero, perché <span class="inline">cos(ang)</span> sarà zero</li>
    <li>Se l'angolo tra a e b è inferiore a 90 gradi, il prodotto di punti sarà positivo (maggiore di zero), poiché <span class="inline">cos(ang)</span> sarà positivo</li>
    <li>Se l'angolo tra a e b è maggiore di 90 gradi, il prodotto del punto sarà negativo (meno di zero), poiché <span class="inline">cos(ang)</span> sarà negativo</li>
  </ul>
  <p>Quindi cosa significa questo per quelli di noi che fanno giochi? Beh, questa relazione matematica può essere usata in diverse circostanze, ma il modo migliore per vederla è costruire uno scenario reale e vedere da soli cosa sta succedendo. Uno dei modi più semplici
    modo per farlo è generare un semplice controllo della &quot;linea di vista&quot; per un nemico, ad esempio, in un gioco di piattaforme, in modo che il nemico &quot;veda&quot; il giocatore se si trova entro 90° da entrambi i lati del suo vettore <i>normale</i>.</p>
  <p><img>Fondamentalmente, dobbiamo ottenere il vettore normale dal nemico (cioè: composto da una direzione e una distanza di vista)
    e poi dobbiamo ottenere il vettore del giocatore verso il nemico. Otterremo poi il prodotto_punto di questi vettori, e se il risultato è positivo il giocatore è stato visto, e se è negativo non lo è stato. Il codice effettivo per far funzionare tutto ciò è fornito
    nell'esempio qui sotto.</p>
  <p> </p>
  <h4><b>Sintassi:</b></h4>
  <p class="code">dot_product(x1, y1, x2, y2)</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th><th>Tipo</th>
        <th>Descrizione</th>
     </tr>
      <tr>
        <td><span class="notranslate">x1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the first vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the first vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">x2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the second vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the second vector.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">var x1, y1, x2, y2;<br/> x1 = lengthdir_x(1, image_angle);<br/> y1 = lengthdir_y(1, image_angle);<br/> x2 = o_Player.x - x;<br/> y2 = o_Player.y - y;<br/> if dot_product(x1, y1, x2, y2) &gt; 0 seen=true else seen=false;</p>
  <p>Il codice qui sopra crea un vettore usando l'angolo dell'immagine delle istanze, e poi ottiene il vettore del giocatore <span class="notranslate">object</span> &quot;o_Player&quot; a se stesso. Infine calcola il prodotto del punto di questi due vettori e se è maggiore di 0 imposta la variabile
    &quot;seen&quot; a true, e se è uguale o inferiore a 0 la imposta a &quot;false&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Angles_And_Distance.htm">Angoli e distanze</a></div>
        <div style="float:right">Il prossimo: <a href="dot_product_3d.htm"><span class="notranslate">dot_product_3d</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
dot_product
-->
  <!-- TAGS
dot_product
-->

</body></html>