<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_gear_create</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_gear_create" />
  <meta name="rh-index-keywords" content="physics_joint_gear_create" />
  <meta name="search-keywords" content="physics_joint_gear_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">physics_joint_gear_create</span></h1>
  <p>Se si vuole creare un congegno meccanico sofisticato, si potrebbero usare gli ingranaggi. In linea di principio, è possibile creare ingranaggi in <span data-keyref="GameMaker Name">GameMaker</span> utilizzando istanze di compounding per modellare i denti degli ingranaggi, ma questo non è molto efficiente e potrebbe essere noioso per l'autore! Per fortuna esiste un metodo più semplice, che consiste nell'utilizzare un <i>giunto a ingranaggi</i>. Per crearne uno è necessario aver definito in precedenza le fixture e aver creato i due giunti di base che comporranno l'ingranaggio: questi <b>devono</b> essere costituiti da un <a href="physics_joint_revolute_create.htm">giunto rotante</a> e da un <a href="physics_joint_prismatic_create.htm">giunto prismatico</a> o da un altro <i>giunto rotante</i>. L'immagine seguente mostra come viene creato un ingranaggio in un gioco:</p>
  <p><img>Cosa succede? Una volta che i due giunti sono stati aggiunti all'ingranaggio, l'interazione con uno di essi avrà un effetto sull'altro, quindi nell'immagine di esempio qui sopra, se si ruota l'ist2, l'ist3 si muoverà verso l'alto e verso il basso, oppure se si muove l'ist3 verso l'alto e verso il basso, l'ist2 ruoterà. È anche possibile modificare il rapporto di trasmissione, ovvero spostare un'istanza in più (o in meno) per ottenere l'effetto desiderato. Il codice dell'esempio in basso mostra come si può creare qualcosa di simile all'immagine precedente.</p>
  <p class="note"><b>NOTA</b>: Se si desidera eliminare una delle due istanze coinvolte nel giunto di trasmissione (o semplicemente eliminare i loro giunti), è <b>necessario</b> eliminare prima il giunto di trasmissione usando <span style="font-size:1px;"><a href="physics_joint_delete.htm"><span class="inline">physics_joint_delete()</span></a></span> altrimenti si otterrà un errore!</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code"><span data-field="title" data-format="default">physics_joint_gear_create</span>(inst1, inst2, joint_1, joint_2, ratio)</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Tipo</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/id.htm" target="_blank">ID istanza</a></span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/id.htm" target="_blank">ID istanza</a></span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">joint_1</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Reale</a></span></td>
        <td><span class="notranslate">A previously defined revolute joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">joint_2</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Reale</a></span></td>
        <td><span class="notranslate">A previously defined revolute <i>or</i> prismatic joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ratio</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Reale</a></span></td>
        <td><span class="notranslate">Set the velocity ratio between the two joints</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Restituzione:</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint"><a href="../../../../../GameMaker_Language/GML_Reference/Physics/Joints/Joints.htm" target="_blank">Physics Joint ID</a></span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">var t_fix, g_fix, inst1, inst2, inst3, r_joint, p_joint;<br />
    g_fix = physics_fixture_create();<br />
    physics_fixture_set_box_shape(g_fix, 40, 10);<br />
    t_fix = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(t_fix, 10);<br />
    physics_fixture_set_density(t_fix, 0.5);<br />
    inst1 = instance_create_layer(60, room_height - 30, &quot;Background&quot;, obj_Ground);<br />
    inst2 = instance_create_layer(40, room_height - 300, &quot;Instances&quot;, obj_Cog);<br />
    inst3 = instance_create_layer(150, room_height - 300, &quot;Instances&quot;, obj_Barrel);<br />
    physics_fixture_bind(g_fix, inst1);<br />
    physics_fixture_bind(t_fix, inst2);<br />
    physics_fixture_bind(t_fix, inst3);<br />
    r_joint = physics_revolute_joint_create(inst1, inst2, 40, room_height - 300, -80, 80, 1, 10, 0.5, 1, 0);<br />
    p_joint = physics_prismatic_joint_create(inst1, inst3, 150, room_height - 300, 0, 1, -10, 10, true, 0, 0, 0, 0);<br />
    <span data-field="title" data-format="default">physics_joint_gear_create</span>(inst2, inst3, r_joint, p_joint, 0.5);
  </p>
  <p>Il codice precedente crea e definisce due fixture e poi crea tre istanze, una &quot;obj_Ground&quot; e altre due, &quot;obj_Cog&quot; e &quot;obj_Barrel&quot;. Le fixture vengono quindi legate a queste istanze e vengono creati due giunti. Un giunto rotante tra il terreno e l'ingranaggio e un giunto prismatico tra il terreno e il barile. Infine, si crea un giunto a ingranaggi tra le istanze di pignone e barile, utilizzando i giunti rotanti e prismatici definiti in precedenza.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Joints.htm">Articolazioni</a></div>
        <div style="float:right">Il prossimo: <a href="physics_joint_rope_create.htm"><span class="notranslate">physics_joint_rope_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_gear_create
-->
  <!-- TAGS
physics_joint_gear_create
-->
</body>
</html>