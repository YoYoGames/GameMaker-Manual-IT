<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>istanza_distruzione</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function instance_destroy" />
  <meta name="rh-index-keywords" content="instance_destroy" />
  <meta name="search-keywords" content="instance_destroy" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>istanza_distruzione</h1>
  <p>Si chiama questa funzione ogni volta che si desidera &quot;distruggere&quot; un'istanza, normalmente innescando un <a href="../../../../The_Asset_Editors/Object_Properties/Object_Events.htm">evento Destroy</a> e anche un <a href="../../../../The_Asset_Editors/Object_Properties/Object_Events.htm">evento Clean Up</a>. Questo la rimuoverà da <span class="notranslate">room</span> fino a quando <span class="notranslate">room</span> non verrà riavviato (a meno che <span class="notranslate">room</span> non sia persistente). Chiamando la funzione senza argomenti si distruggerà semplicemente l'istanza che è attualmente nello scope e che esegue il codice, ma si può fornire un argomento opzionale &quot;id&quot; e puntare a un'istanza specifica usando il valore dell'istanza <span class="inline"><a href="Instance_Variables/id.htm">id</a></span>, oppure si possono puntare tutte le istanze di un particolare <span class="notranslate">object</span> usando un <a href="../Objects/object_index.htm"><span class="inline">object_index</span></a>. Per esempio:</p>
  <p class="code">instance_destroy(other);      // destroy the &quot;other&quot; instance in a Collision Event<br />
    instance_destroy(obj_Bullet); // destroy ALL instances of the object &quot;obj_Bullet&quot;</p>
  <p>Il secondo flag <i>opzionale</i> permette di &quot;spegnere&quot; l'evento Destroy per l'istanza che viene distrutta. Per impostazione predefinita l'evento Destroy verrà <i>sempre</i> eseguito, ma se si imposta questo flag a <span class="inline">false</span> allora si può fare in modo che l'istanza si distrugga da sola e saltare l'esecuzione dell'evento.</p>
  <p class="note"><b>IMPORTANTE!</b> Questo salterà l'evento Destroy, ma l'evento Clean Up verrà comunque chiamato.</p>
  <p>Vale la pena notare che quando si distrugge un'istanza, il suo evento destroy viene chiamato <i>immediatamente</i> dopo il codice o l'azione che chiama la funzione destroy. Inoltre, anche se l'evento destroy viene eseguito, l'istanza <i>non viene immediatamente rimossa dal gioco</i>, e continuerà ad eseguire il codice contenuto nell'evento corrente. Solo quando l'evento corrente è finito sarà rimosso dal gioco.</p>
  <p>Quindi, se avete, per esempio, questo codice:</p>
  <p class="code">if (hp &lt;= 0) instance_destroy();<br />
    score += 10;</p>
  <p>La variabile &quot;score&quot; sarà incrementata <i>anche se la funzione <span class="inline">instance_destroy</span> è stata chiamata</i>, e l'istanza sarà infine rimossa dal vostro gioco alla fine dell'evento. Fate attenzione a questo, perché se avete (per esempio) creato una risorsa dinamica per l'istanza, come una struttura dati, e poi l'avete distrutta nell'evento destroy, se ci sono riferimenti ad essa dopo che la funzione o azione destroy è stata eseguita, otterrete un errore &quot;risorsa sconosciuta&quot;, poiché l'evento destroy l'ha rimossa dal gioco.</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">instance_destroy([id, execute_event_flag]);</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Tipo</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">id</span></td>
        <td><span data-keyref="Type_ID_Instance">ID dell'istanza</span> o dell'<span data-keyref="Type_Asset_Object">oggetto Asset</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> L'ID dell'istanza da distruggere, o il <span class="notranslate">object</span> <span class="notranslate">asset</span> di cui distruggere le istanze (opzionale, il default è l'istanza chiamante)</td>
      </tr>
      <tr>
        <td><span class="notranslate">execute_event_flag</span></td>
        <td><span data-keyref="Type_Bool">Booleano</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> Impostare su <span class="inline">true</span> o <span class="inline">false</span> per eseguire o meno l'evento Destroy (opzionale, il default è <span class="inline">true</span>)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">if (bbox_right &lt; 0 || bbox_left &gt; room_width || bbox_bottom &lt; 0 || bbox_top &gt; room_height)<br />
    {<br />
        instance_destroy(id, false);<br />
    }</p>
  <p>Il codice di cui sopra distruggerà l'istanza che esegue il codice senza chiamare l'evento Destroy se l'istanza è fuori dai limiti di <span class="notranslate">room</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Instances.htm">Istanze</a></div>
        <div style="float:right">Il prossimo: <a href="instance_exists.htm"><span class="notranslate">instance_exists</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
instance_destroy
-->
  <!-- TAGS
instance_destroy
-->
</body>
</html>