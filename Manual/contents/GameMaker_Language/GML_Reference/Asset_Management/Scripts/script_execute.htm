<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>script_execute</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function script_execute" />
  <meta name="rh-index-keywords" content="script_execute" />
  <meta name="search-keywords" content="script_execute" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>script_execute</h1>
  <p>This function was originally designed for calling script <i>assets</i> in a dynamic way, but with the introduction of user-defined functions it can now be used in two ways:</p>
  <ul class="colour">
    <li>The first way is to support <b>legacy</b> scripts, where each script was a single function and the title of the script was also the name of the function. Used in this way, it will work as before and It will run a user created script asset and pass the given arguments into it. Note that it isn&#39;t actually calling the <i>script</i> in this case but, the <i>script function</i> of the same name within the script. <span style="text-align: justify;"></span></li>
    <li><span style="text-align: justify;">The second way is to call a function from a script asset that contains multiple functions. In this case you would provide the function name and the arguments it requires rather than the script asset name. Note that this will only work for <a href="../../../GML_Overview/Script_Functions.htm">script functions</a> and not for <a href="../../../GML_Overview/Method_Variables.htm">methods</a>, as only script functions have a script ID assigned to them.</span></li>
  </ul>
  <p><span style="text-align: justify;"></span>While this function is designed primarily for legacy support it is not deprecated as it still has it&#39;s place in networking and remote procedure call situations. It is also worth noting that this function is slow, and using it a lot may adversely affect performance.</p>
  <p class="note"><span class="note">NOTE</span> This function cannot be used with built-in functions.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">script_execute</span>(scr, arg0, arg1, arg2, etc.);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>scr</td>
        <td><span data-keyref="Type_Asset_Script"><a href="../../../../The_Asset_Editors/Scripts.htm" target="_blank">Script Asset</a></span> or <span data-keyref="Type_Function_Script"><a href="../../../GML_Overview/Script_Functions.htm" target="_blank">Script Function</a></span></td>
        <td>The function/script that you want to call</td>
      </tr>
      <tr>
        <td>arg0, arg1, arg2, etc.</td>
        <td><span data-keyref="Type_Any"><a href="../../../GML_Overview/Data_Types.htm#variable" target="_blank">Any</a></span></td>
        <td>The different arguments that you want to pass through to the function/script</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Any"><a href="../../../GML_Overview/Data_Types.htm#variable" target="_blank">Any</a></span> (Will depend on the return value from the script/function being called)</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code"><span data-field="title" data-format="default">script_execute</span>(choose(move_up, move_down, move_left, move_right), irandom(5));</p>
  <p>The above example code will use <span class="inline3_func"><span data-field="title" data-format="default">script_execute</span></span> to choose one of four user defined functions (in this case related to movement) and pass a random integer to it as the first argument.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Scripts.htm">Scripts</a></div>
        <div style="float:right">Next: <a href="script_execute_ext.htm">script_execute_ext</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
script_execute
-->
  <!-- TAGS
script_execute
-->
</body>
</html>