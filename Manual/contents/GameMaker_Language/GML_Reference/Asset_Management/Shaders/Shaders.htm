<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Shaders</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Shaders" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Shaders,_YY_GLSLES_,_YY_GLSL_,_YY_HLSL11_,_YY_PSSL_" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Shaders</h1>
  <p>Gli shader sono uno strumento incredibilmente potente per manipolare cosa e come le cose vengono <a class="glossterm" data-glossterm="reso" href="#">rese</a> sullo schermo dalla scheda grafica. Poiché questi piccoli programmi sono effettivamente eseguiti sulla scheda grafica stessa, ciò significa che sono estremamente veloci da elaborare, liberando preziosi cicli di CPU per la logica di gioco.</p>
  <p>Per creare un <span class="notranslate">shader</span> avrete bisogno di aver scritto sia un <b>Vertex Shader</b> che un <b>Fragment Shader</b> (conosciuto anche come <b>Pixel Shader</b>) usando lo <a href="../../../../The_Asset_Editors/Shaders.htm">Shader Editor</a>, e anche se (per esempio) volete solo cambiare le posizioni dei vertici per un'istanza disegnata, o se volete solo cambiare i valori di colore per i pixel, avrete comunque bisogno di <b>entrambi i</b> programmi per un completo <span class="notranslate">shader</span> per funzionare.</p>
  <p class="note"><span class="note">NOTA</span> Gli shader <b>non</b> vi permettono di cambiare il valore delle variabili che passate in essi, e quindi queste saranno chiamate <b>costanti di shader</b> in tutta la documentazione che si riferisce a loro.</p>
  <p>Per una panoramica completa delle funzioni e delle variabili GLSL ES disponibili che è possibile utilizzare per programmare il sito <span class="notranslate">shaders</span> stesso, si prega di fare riferimento alle <a href="https://www.khronos.org/registry/OpenGL/specs/es/2.0/es_cm_spec_2.0.pdf" target="_blank">pagine di riferimento OpenGL ES Shading Language (GLSL ES)</a>. Il seguente link è utile anche perché contiene alcune schede di riferimento rapido per l'API OpenGL ES (si noti che solo le ultime due schede mostrate sono applicabili a <span data-keyref="GameMaker Name">GameMaker</span>): <a href="https://www.khronos.org/opengles/sdk/docs/reference_cards/OpenGL-ES-2_0-Reference-card.pdf">Schede di riferimento OpenGL ES</a>.</p>
  <p>Usare un <span class="notranslate">shader</span> nei vostri progetti è molto semplice, e richiede solo un paio di righe di codice per ottenere l'uso più elementare:</p>
  <p class="code">shader_set(myShader);<br />
    draw_self();<br />
    shader_reset();</p>
  <p>Come puoi vedere, sono usati in modo simile alle modalità di fusione e alle superfici, dove prima selezioni (imposti) l'<span class="notranslate">shader</span>, disegni ciò che vuoi usando questo, e poi resetti di nuovo il target di disegno. Se vuoi rendere l'intero schermo attraverso un <span class="notranslate">shader</span>, e non solo un singolo <span class="notranslate">sprite</span> o sfondo, avrai bisogno di impostare una superficie per catturare la vista corrente, e poi passarla attraverso il <span class="notranslate">shader</span> (vedi <a href="../../Drawing/Surfaces/Surfaces.htm">Superfici</a> per maggiori informazioni).</p>
  <p class="note"><b>NOTA</b>: <span class="notranslate">Shaders</span>, come tutto ciò che riguarda il disegno, può <b>essere usato solo nell'evento draw</b>. Vale anche la pena notare che se state cercando di usare un valore di colore in un <span class="notranslate">shader</span> e il <span class="notranslate">object</span> non ha <span class="notranslate">texture</span>, i risultati saranno neri.</p>
  <p>Se il <span class="notranslate">shader</span> che state usando ha dei valori di ingresso, questi sono impostati usando le funzioni dell'<i>uniforme</i>. Dovreste prima ottenere l'<i>handle</i> dell'uniforme (che è essenzialmente un valore ID per l'uniforme da impostare) usando la funzione <a href="shader_get_uniform.htm"><span class="inline">shader_get_uniform()</span></a> nell'<b>evento Create</b> dell'istanza che usa il <span class="notranslate">shader</span>, e poi memorizzare questi handle in variabili, qualcosa come questo:</p>
  <p class="code">colour_to_find = shader_get_uniform(sShaderDemo5, &quot;f_Colour1&quot;);<br />
    colour_to_set = shader_get_uniform(sShaderDemo5, &quot;f_Colour2&quot;);</p>
  <p>Una volta che avete le maniglie uniformi, possono essere impostate nel codice <span class="notranslate">shader</span> per l'<b>evento Draw</b> in questo modo:</p>
  <p class="code">shader_set(sShaderDemo5);<br />
    shader_set_uniform_f(colour_to_find, 1,1,1 );<br />
    shader_set_uniform_f(colour_to_set, 1,0,0 );<br />
    draw_sprite(sprite_index,image_index,x+24, y);<br />
    shader_reset();</p>
  <p>Un'ultima cosa da notare è che anche se <span class="notranslate">shaders</span> è accettato su tutte le piattaforme, è comunque specifico del dispositivo e se l'hardware o il software del dispositivo non può usare <span class="notranslate">shaders</span> allora si otterrà un errore. Perciò si raccomanda di controllare che il <span class="notranslate">shader</span> sia stato compilato prima di impostare le uniformi o di usare il <span class="notranslate">shader</span> stesso, come questo:</p>
  <p class="code">if (shader_is_compiled(myShader))<br />
    {<br />
        shader_set(myShader);<br />
        draw_self();<br />
        shader_reset();<br />
    }<br />
    else show_debug_message(&quot;Shader failed&quot;);</p>
  <p>Come controllo extra potete anche chiamare la funzione <a href="shaders_are_supported.htm"><span class="inline">shaders_are_supported()</span></a> per vedere se l'hardware supporta <span class="notranslate">shaders</span>. In generale dovreste fare questi controlli all'inizio del gioco e memorizzare i risultati in una <a href="../../../GML_Overview/Variables/Global_Variables.htm">variabile globale</a> da controllare in seguito.</p>
  <p>È importante notare che <span data-keyref="GameMaker Name">GameMaker</span> supporta anche alcune <b>macro</b> di compilazione condizionale che possono essere utilizzate all'interno di GLSL ES <span class="notranslate">shaders</span> in modo che possano eseguire codice alternativo su specifiche piattaforme supportate. Le macro e le piattaforme su cui verranno generate sono mostrate nella tabella sottostante:</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Macro Shader</th>
        <th>Valore</th>
        <th>Piattaforma di destinazione</th>
      </tr>
      <tr>
        <td>_YY_GLSLES_</td>
        <td>1</td>
        <td>Tutte le piattaforme di destinazione</td>
      </tr>
      <tr>
        <td>_YY_GLSL_</td>
        <td>2</td>
        <td>Mac e <span class="notranslate">Ubuntu</span> (<span class="notranslate">Linux</span>)</td>
      </tr>
      <tr>
        <td>_YY_HLSL11_</td>
        <td>3</td>
        <td>Windows, UWP, XboxOne</td>
      </tr>
      <tr>
        <td>_YY_PSSL_</td>
        <td>4</td>
        <td>PS4</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Quando compilate il vostro progetto <span data-keyref="GameMaker Name">GameMaker</span> su una qualsiasi delle piattaforme elencate utilizzando un formato GLSL ES <span class="notranslate">shader</span>, verrà generata <i>una</i> delle macro di cui sopra che può poi essere utilizzata controllata nel codice <span class="notranslate">shader</span> come questa:</p>
  <p class="code">#ifdef _YY_HLSL11_<br />
    // HLSL shader code here<br />
    #else<br />
    // GLSL shader code here<br />
    #endif</p>
  <p>Se sei nuovo di <span class="notranslate">shaders</span> o vuoi una guida più completa per crearli e usarli usando <span data-keyref="GameMaker Name">GameMaker</span>, allora vedi la seguente pagina del manuale:</p>
  <ul class="colour">
    <li><a href="../../../../Additional_Information/Guide_To_Using_Shaders.htm">Guida all'uso degli shader</a></li>
  </ul>
  <p> </p>
  <p>Le seguenti funzioni sono disponibili per disegnare e impostare gli shader:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="shader_get_name.htm"><span class="notranslate">shader_get_name</span></a></li>
    <li><a href="shader_get_uniform.htm"><span class="notranslate">shader_get_uniform</span></a></li>
    <li><a href="shader_get_sampler_index.htm"><span class="notranslate">shader_get_sampler_index</span></a></li>
    <li><a href="shader_set.htm"><span class="notranslate">shader_set</span></a></li>
    <li><a href="shader_set_uniform_f.htm"><span class="notranslate">shader_set_uniform_f</span></a></li>
    <li><a href="shader_set_uniform_f_array.htm"><span class="notranslate">shader_set_uniform_f_array</span></a></li>
    <li><a href="shader_set_uniform_i.htm"><span class="notranslate">shader_set_uniform_i</span></a></li>
    <li><a href="shader_set_uniform_i_array.htm"><span class="notranslate">shader_set_uniform_i_array</span></a></li>
    <li><a href="shader_set_uniform_matrix.htm"><span class="notranslate">shader_set_uniform_matrix</span></a></li>
    <li><a href="shader_set_uniform_matrix_array.htm"><span class="notranslate">shader_set_uniform_matrix_array</span></a></li>
    <li><a href="shader_reset.htm"><span class="notranslate">shader_reset</span></a></li>
    <li><a href="shader_is_compiled.htm"><span class="notranslate">shader_is_compiled</span></a></li>
    <li><a href="shaders_are_supported.htm"><span class="notranslate">shaders_are_supported</span></a></li>
    <li><a href="shader_current.htm"><span class="notranslate">shader_current</span></a></li>
  </ul>
  <p> </p>
  <p>Abbiamo anche una funzione speciale che definisce uno stato globale per tutti gli shader:</p>
  <ul>
    <li><a href="shader_enable_corner_id.htm"><span class="notranslate">shader_enable_corner_id</span></a></li>
  </ul>
  <p> </p>
  <p>Quando lavorate con i campionatori di <span class="notranslate">texture</span> in <span class="notranslate">shaders</span> avrete bisogno di informazioni sul <span class="notranslate">texture</span> utilizzato, nel qual caso potete usare le seguenti funzioni:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="../Sprites/Sprite_Information/sprite_get_texture.htm"><span class="notranslate">sprite_get_texture</span></a></li>
    <li><a href="../Sprites/Sprite_Information/sprite_get_uvs.htm"><span class="notranslate">sprite_get_uvs</span></a></li>
    <li><a href="../Fonts/font_get_texture.htm"><span class="notranslate">font_get_texture</span></a></li>
    <li><a href="../Fonts/font_get_uvs.htm"><span class="notranslate">font_get_uvs</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_width.htm"><span class="notranslate">texture_get_width</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_height.htm"><span class="notranslate">texture_get_height</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_width.htm"><span class="notranslate">texture_get_texel_width</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_height.htm"><span class="notranslate">texture_get_texel_height</span></a></li>
    <li><a href="../../Drawing/Textures/texture_set_stage.htm"><span class="notranslate">texture_set_stage</span></a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texfilter_ext.htm"><span class="notranslate">gpu_set_texfilter_ext</span></a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texrepeat.htm"><span class="notranslate">gpu_set_texrepeat</span></a></li>
  </ul>
  <p> </p>
  <p>Mentre questo manuale <b>non</b> copre nessuna delle funzioni e variabili di Open GL <span class="notranslate">shader</span>, contiene una lista di quelle che sono uniche per <span data-keyref="GameMaker Name">GameMaker</span>. Queste costanti non fanno parte della specifica Open GL per <span class="notranslate">shaders</span> e sono fornite per semplificare l'integrazione di <span class="notranslate">shaders</span> all'interno dei vostri progetti.</p>
  <ul class="colour">
    <li><a href="Shader_Constants.htm">Costanti dello shader</a></li>
  </ul>
  <p> </p>
  <p>Infine, <span data-keyref="GameMaker Name">GameMaker</span> vi permette di definire i vostri <b>Vertex Format</b> da cui potete creare le vostre primitive personalizzate. Questo può accelerare notevolmente le operazioni di <span class="notranslate">shader</span> o può essere usato per estendere le loro capacità e creare effetti sorprendenti. Potete trovare informazioni su questo nelle sezioni seguenti:</p>
  <ul class="colour">
    <li><a href="../../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">Primitive e formati di vertici</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="../Asset_Management.htm">Gestione delle risorse</a></div>
        <div style="float:right">Prossimo: <a href="../Sequences/Sequences.htm">Sequenze</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
Shaders
_YY_GLSLES_
_YY_GLSL_
_YY_HLSL11_
_YY_PSSL_
-->
  <!-- TAGS
shader_functions
-->
</body>
</html>