<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>shader_set_uniform_f_array</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function shader_set_uniform_f_array" />
  <meta name="rh-index-keywords" content="shader_set_uniform_f_array" />
  <meta name="search-keywords" content="shader_set_uniform_f_array" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>shader_set_uniform_f_array</h1>
  <p>With this function you can set a shader constant to hold an array of values. You must previously have gotten the &quot;handle&quot; of the constant using the function <a href="shader_get_uniform.htm"><span class="inline">shader_get_uniform()</span></a>, and you will have to have previously initialised the array.</p>
  <p class="note"><b></b><b>NOTE</b>: All uniforms must be set <b>after</b> calling the function <span style="font-size:1px;"><a href="shader_set.htm"><span class="inline">shader_set()</span></a></span>, and before calling <span style="font-size:1px;"><a href="shader_reset.htm"><span class="inline">shader_reset()</span></a></span>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">shader_set_uniform_f_array(handle, array);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>handle</td>
        <td><span data-keyref="Type_Handle_Shader_Uniform">Shader Uniform Handle</span></td>
        <td>The handle of the shader constant to set.</td>
      </tr>
      <tr>
        <td>array</td>
        <td><span data-keyref="Type_Array">Array</span></td>
        <td>A previously initialised array of floating point values.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">shader_set(shader_Glass);<br />
    tex_array[0] = 0.5;<br />
    tex_array[1] = 0.1;<br />
    tex_array[2] = 0.25;<br />
    shader_params = shader_get_uniform(shader_glass, &quot;u_vParams&quot;);<br />
    shader_set_uniform_f_array(shader_params, tex_array);<br />
    draw_self();<br />
    shader_reset();</p>
  <p>The above code will get the handle of the shader constant &quot;u_vParams&quot; then set that constant to the given array.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Shaders.htm">Shaders</a></div>
        <div style="float:right">Next: <a href="shader_set_uniform_i.htm">shader_set_uniform_i</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
shader_set_uniform_f_array
-->
  <!-- TAGS
shader_set_uniform_f_array
-->
</body>
</html>