<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>skeleton_attachment_create</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function skeleton_attachment_create" />
  <meta name="rh-index-keywords" content="skeleton_attachment_create" />
  <meta name="search-keywords" content="skeleton_attachment_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>skeleton_attachment_create</h1>
  <p>When you create you skeletal animation sprite, you can assign <i>attachment slots</i> and <i>attachments</i> to go in them. These are simply images that are apart from the animation but when attached will move along with the bone they are attached to. Normally you would assign these attachments in your animation program (Spine), but with this function you can create your own at run-time using a sprite asset from your game. the function requires that you give the attachment a name (as a string) and then set the sprite_index and image_index to use, as well as the x and y origin (which can be different to that defined by the sprite in the sprite properties), and you can also set any transforms that you wish to be applied to the image when attached. If the attachment was successfully created the function will return <span class="inline">1</span> and if it was not (you supplied an invalid sprite index, or the base sprite is not a Spine sprite) then it will return <span class="inline">-1</span>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">skeleton_attachment_create(name, sprite, ind, xorigin, yorigin, xscale, yscale, rot);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>name</td>
        <td><span data-keyref="Type_String">String</span></td>
        <td>The name (as a string) of the attachment to create.</td>
      </tr>
      <tr>
        <td>sprite</td>
        <td><span data-keyref="Type_Asset_Sprite">Sprite Asset</span></td>
        <td>The sprite_index to get the attachment image from.</td>
      </tr>
      <tr>
        <td>ind</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>The image_index to get the attachment image from.</td>
      </tr>
      <tr>
        <td>xorigin</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>The x origin for the image being used.</td>
      </tr>
      <tr>
        <td>yorigin</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>The y origin for the image being used.</td>
      </tr>
      <tr>
        <td>xscale</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>The horizontal scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc...</td>
      </tr>
      <tr>
        <td>yscale</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>The vertical scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc...</td>
      </tr>
      <tr>
        <td>rot</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>The rotation of the image. 0=normal, 90=turned 90 degrees counter-clockwise etc.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span> (1 if successful, -1 if not)</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">skeleton_attachment_create(&quot;sword&quot;, spr_Weapons, 0, 0, 80, 1, 1, 90);<br />
    skeleton_attachment_create(&quot;knife&quot;, spr_Weapons, 1, 0, 45, 1, 1, 90);<br />
    skeleton_attachment_create(&quot;crossbow&quot;, spr_Weapons, 0, 10, 30, 1, 1, 0);<br />
    skeleton_attachment_set(&quot;slot_leftHand&quot;, choose(&quot;sword&quot;, &quot;knife&quot;, &quot;crossbow&quot;));</p>
  <p>The above code would check the currently assigned attachment name for the slot named &quot;slot_leftHand&quot; and if an empty string is returned, a new sprite is attached.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Attachments.htm">Attachments</a></div>
        <div style="float:right">Next: <a href="skeleton_attachment_create_colour.htm">skeleton_attachment_create_colour</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
skeleton_attachment_create
-->
  <!-- TAGS
skeleton_attachment_create
-->
</body>
</html>