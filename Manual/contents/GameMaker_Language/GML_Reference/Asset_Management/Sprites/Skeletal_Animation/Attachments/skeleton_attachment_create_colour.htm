<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>scheletro_attachment_creare_colore</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function skeleton_attachment_create_colour" />
  <meta name="rh-index-keywords" content="skeleton_attachment_create_colour,skeleton_attachment_create_color" />
  <meta name="search-keywords" content="skeleton_attachment_create_colour,skeleton_attachment_create_color" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>scheletro_attachment_creare_colore</h1>
  <p>Quando create la vostra animazione scheletrica <span class="notranslate">sprite</span>, potete assegnare <i>degli slot di attacco</i> e degli <i>attacchi</i> da inserire in essi. Queste sono semplicemente immagini (<span class="notranslate">sprites</span>) che sono separate dall'animazione ma quando sono attaccate si muovono insieme all'osso a cui sono attaccate. Normalmente assegnereste questi allegati nel vostro programma di animazione (<span class="notranslate">Spine</span>), ma con questa funzione potete creare i vostri a run-time usando un <span class="notranslate">sprite</span> <span class="notranslate">asset</span> dal vostro gioco. la funzione richiede che voi diate un nome all'allegato (come <span class="notranslate">string</span>) e poi impostiate i parametri <a href="../../Sprite_Instance_Variables/sprite_index.htm"><span class="inline">sprite_index</span></a> e <a href="../../Sprite_Instance_Variables/image_index.htm"><span class="inline">image_index</span></a> da utilizzare, così come l'origine x e y (che può essere diversa da quella definita da <span class="notranslate">sprite</span> nelle proprietà di <span class="notranslate">sprite</span> ), e si può anche impostare qualsiasi trasformazione che si desidera applicare all'immagine quando viene allegata, così come il colore da fondere con l'immagine e il suo valore alfa (trasparenza). Se l'allegato è stato creato con successo la funzione restituirà <span class="inline">1</span> e se non lo è stato (avete fornito un indice <span class="notranslate">sprite</span> non valido, o la base <span class="notranslate">sprite</span> non è un <span class="notranslate">Spine</span> <span class="notranslate">sprite</span>) allora restituirà <span class="inline">-1</span>.</p>
  <p>Vale la pena notare che l'istanza <span class="notranslate">sprite</span> può avere un colore di fusione e un'impostazione alfa (<a href="../../Sprite_Instance_Variables/image_blend.htm"><span class="inline">image_blend</span></a> e <a href="../../Sprite_Instance_Variables/image_alpha.htm"><span class="inline">image_alpha</span></a>), così come lo slot dell'allegato (si veda la funzione <a href="../Slots/skeleton_slot_colour_set.htm"><span class="inline">skeleton_slot_colour_set()</span></a>), e quindi il colore finale e l'alfa che l'allegato assegnato <span class="notranslate">sprite</span> per lo slot avrà sarà un composto di tutti questi valori.</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">skeleton_attachment_create_colour(name, sprite, ind, xorigin, yorigin, xscale, yscale, rot, colour, alpha);</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Tipo</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">name</span></td>
        <td><span data-keyref="Type_String">Stringa</span></td>
        <td><span class="notranslate">The name (as a string) of the attachment to create.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">sprite</span></td>
        <td><span data-keyref="Type_Asset_Sprite">Sprite Asset</span></td>
        <td><span class="notranslate">The sprite_index to get the attachment image from.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ind</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The image_index to get the attachment image from.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xorigin</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x origin for the image being used.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">yorigin</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y origin for the image being used.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xscale</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The horizontal scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc...</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">yscale</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The vertical scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc...</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">rot</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The rotation of the image: 0 = normal, 90 = turned 90° counter-clockwise etc.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">Colour</span></td>
        <td><span data-keyref="Type_Constant_Colour">Colore</span></td>
        <td><span class="notranslate">The colour value to use (A constant, integer or hex value).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">Alpha</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The alpha value to use (from 0 to 1).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span> (1 if successful, -1 if not)</p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">skeleton_attachment_create_colour(&quot;sword&quot;, spr_Weapons, 0, 0, 80, 1, 1, 90, c_red, 1);<br />
    skeleton_attachment_create_colour(&quot;knife&quot;, spr_Weapons, 1, 0, 45, 1, 1, 90, c_yellow, 1);<br />
    skeleton_attachment_create_colour(&quot;crossbow&quot;, spr_Weapons, 0, 10, 30, 1, 1, 0, c_white, 0.5);<br />
    skeleton_attachment_set(&quot;slot_leftHand&quot;, choose(&quot;sword&quot;, &quot;knife&quot;, &quot;crossbow&quot;));</p>
  <p>Il codice di cui sopra controllerebbe il nome dell'allegato attualmente assegnato per lo slot chiamato &quot;slot_leftHand&quot; e se viene restituito un <span class="notranslate">string</span> vuoto, viene allegato un nuovo <span class="notranslate">sprite</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Attachments.htm">Allegati</a></div>
        <div style="float:right">Il prossimo: <a href="../Bones/skeleton_bone_data_get.htm"><span class="notranslate">skeleton_bone_data_get</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
skeleton_attachment_create_colour
skeleton_attachment_create_color
-->
  <!-- TAGS
skeleton_attachment_create_colour
-->
</body>
</html>