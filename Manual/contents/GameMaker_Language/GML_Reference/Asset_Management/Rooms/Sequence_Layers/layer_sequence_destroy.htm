<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>layer_sequence_destroy</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function layer_sequence_destroy" />
  <meta name="rh-index-keywords" content="layer_sequence_destroy" />
  <meta name="search-keywords" content="layer_sequence_destroy" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">layer_sequence_destroy</span></h1>
  <p>With this function you can destroy (remove from the room) a sequence element and its corresponding sequence instance.</p>
  <p>You supply the sequence element ID as returned by <a href="layer_sequence_create.htm"><span class="inline">layer_sequence_create()</span></a> or by one of the <a href="../General_Layer_Functions/General_Layer_Functions.htm">layer element functions</a> and the sequence will be destroyed.</p>
  <p>The function frees the <a href="../../Sequences/Sequence_Structs/The_Sequence_Instance_Struct.htm">sequence instance struct</a> and all the structs under it. Any structs under the sequence instance struct that have been assigned to a variable are <i>not</i> freed at that point, e.g. if you assigned one of the track structs under <span class="inline2">activeTracks</span> to a variable then that struct will only be freed when the variable no longer references it.<br />
    The function also destroys all instances that were created for the sequence&#39;s object tracks. This also applies to instances created from an override object defined with <a data-xref="{title}" href="../../Sequences/sequence_instance_override_object.htm">sequence_instance_override_object</a>.<br />
    Already existing instances that were provided as a replacement for an object index using <a data-xref="{title}" href="../../Sequences/sequence_instance_override_object.htm">sequence_instance_override_object</a> are <i>not</i> destroyed automatically.</p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">layer_sequence_destroy</span>(sequence_element_id)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>sequence_element_id</td>
        <td><span data-keyref="Type_ID_Element_Sequence"><a href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Rooms/Sequence_Layers/layer_sequence_create.htm" target="_blank">Sequence Element ID</a></span></td>
        <td>The unique ID value of the sequence element to target</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example 1:</h4>
  <p class="code">var a = layer_get_all_elements(layer);<br />
    for (var i = 0; i &lt; array_length(a); i++;)<br />
    {<br />
        if layer_get_element_type(a[i]) == layerelementtype_sequence<br />
        {<br />
            <span data-field="title" data-format="default">layer_sequence_destroy</span>(a[i]);<br />
        }<br />
    }</p>
  <p>The above code gets the IDs for all the elements assigned to the layer of the instance running the code. The code then checks to see if any of the returned elements are sequence assets and if they are then they are destroyed.</p>
  <h4>Example 2:</h4>
  <p class="code">var a = layer_get_all_elements(layer);<br />
    var track_struct;<br />
    for (var i = 0; i &lt; array_length(a); i++;)<br />
    {<br />
        if layer_get_element_type(a[i]) == layerelementtype_sequence<br />
        {<br />
            var ins = layer_sequence_get_instance(a[i]);<br />
            track_struct = ins.activeTracks[0];<br />
            <span data-field="title" data-format="default">layer_sequence_destroy</span>(a[i]);<br />
        }<br />
    }<br />
    show_debug_message(track_struct);</p>
  <p>The above code gets the IDs for all the elements assigned to the layer of the instance running the code. The code then checks to see if any of the returned elements are sequence assets. If they are, it then gets the instance struct using <span class="inline2">layer_sequence_get_instance</span>. Next it assigns the first element of the <span class="inline2">activeTracks</span> array to a temporary variable <span class="inline2">track_struct</span> and it destroys the sequence afterwards.</p>
  <p>After going through all the sequence elements and destroying them it shows a debug message with the contents of the variable <span class="inline2">track_struct</span>. While the sequences were destroyed, <span class="inline2">track_struct</span> still contains the struct of the first track of the last encountered sequence instance.</p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Sequence_Layers.htm">Sequence Layers</a></div>
        <div style="float:right">Next: <a href="layer_sequence_x.htm">layer_sequence_x</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
layer_sequence_destroy
-->
  <!-- TAGS
layer_sequence_destroy
-->
</body>
</html>