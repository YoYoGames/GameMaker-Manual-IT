<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_falloff_set_model</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_falloff_set_model" />
  <meta name="rh-index-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none" />
  <meta name="search-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">audio_falloff_set_model</span></h1>
  <p>Per aggiungere maggiore versatilità al motore audio, <span data-keyref="GameMaker Name">GameMaker</span> consente di selezionare il modello di falloff più adatto al gioco. Questo modello sarà utilizzato per <b>tutte le</b> funzioni audio del gioco o dell'applicazione, quindi è necessario assicurarsi che il modello scelto sia quello corretto, poiché ognuno di essi influisce sul modo in cui l'ascoltatore percepisce i suoni riprodotti attraverso gli emettitori o con la funzione <span class="inline"><a href="audio_play_sound_at.htm">audio_play_sound_at()</a></span>.</p>
  <p>Il modello di falloff predefinito è <span class="inline">audio_falloff_none</span>, il che significa che non c'è falloff quando si usano emettitori o audio posizionati, a meno che non si cambi il modello di falloff.</p>
  <h2>Modelli di falloff</h2>
  <p>Quando si riproduce l'audio attraverso <span class="inline"><a href="audio_play_sound_at.htm">audio_play_sound_at()</a></span> o si imposta il <a href="Audio_Emitters/audio_emitter_falloff.htm">falloff per un emettitore</a>, è necessario impostare tre argomenti, ognuno dei quali è appropriato per un modello specifico e influisce sul modo in cui il suono finale viene ascoltato dal lettore, a seconda della distanza dell'ascoltatore dalla sorgente. I tre argomenti sono:</p>
  <ul class="colour">
    <li><b>Distanza di riferimento</b>: è la distanza dall'ascoltatore alla quale il volume del suono riprodotto si ridurrebbe normalmente della metà prima di essere influenzato dal fattore di roll-off o dalla distanza massima specificata.<b></b></li>
    <li><b>Distanza massima</b>: imposta la distanza alla quale non si verifica più alcuna attenuazione del suono della sorgente. Può essere il punto in cui il suono non si sente più <i>o il</i> punto in cui il volume del suono non scende più sotto la soglia minima definita dal modello scelto.<b></b></li>
    <li><b>Fattore di falloff</b>: Il fattore di falloff è utilizzato nell'attenuazione della distanza basata sul modello di distanza inversa e stabilisce la soglia minima finale per un suono con falloff.</li>
  </ul>
  <p>I modelli di falloff che sono influenzati da questi argomenti sono rappresentati in <span data-keyref="GameMaker Name">GameMaker</span> dalle seguenti costanti (la tabella mostra anche i calcoli esatti utilizzati):</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Audio_Falloff_Type"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_falloff_set_model.htm" target="_blank">Costante di falloff audio</a></span></th>
      </tr>
      <tr>
        <th>Costante</th>
        <th>Calcolo del guadagno</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_exponent_distance</span></td>
        <td><span class="inline"><br />
            gain = (listener_distance / reference_distance) ^ (-falloff_factor)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_exponent_distance_clamped</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            gain = (distance / reference_distance) ^ (-falloff_factor)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_exponent_distance_scaled</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            <br />
            gain = ((distance / reference_distance) ^ (-falloff_factor)) * (((maximum_distance - distance) / (maximum_distance - reference_distance)) ^ (distance / maximum_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_inverse_distance</span></td>
        <td><span class="inline"><br />
            gain = reference_distance / (reference_distance + falloff_factor * (listener_distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_inverse_distance_clamped</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            gain = reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_inverse_distance_scaled</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            <br />
            gain = (reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))) * (((maximum_distance - distance) / (maximum_distance - reference_distance)) ^ (distance / maximum_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_linear_distance</span></td>
        <td><span class="inline"><br />
            distance = min(distance, maximum_distance)<br />
            gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_linear_distance_clamped</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_none</span></td>
        <td><span class="inline"><br />
            gain = 1</span></td>
      </tr>
    </tbody>
  </table>
  <p>I modelli &quot;<span class="inline">_scaled</span>&quot; sono scalati in modo tale da garantire che i suoni cadano completamente alla distanza massima.</p>
  <p>I grafici seguenti sono rappresentazioni visive del funzionamento di alcune delle costanti di cui sopra e dell'effetto sul suono riprodotto:</p>
  <p><img alt="Distance Model Examples" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Distance_Models.png" /></p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code"><span data-field="title" data-format="default">audio_falloff_set_model</span>(model);</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th>
        <th>Tipo</th>
        <th>Descrizione</th>
      </tr>
      <tr>
        <td><span class="notranslate">model</span></td>
        <td><span data-keyref="Type_Constant_Audio_Falloff_Type"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_falloff_set_model.htm" target="_blank">Costante di falloff audio</a></span></td>
        <td><span class="notranslate">The <b>constant</b> used to set the falloff model.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Restituzione:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code"><span data-field="title" data-format="default">audio_falloff_set_model</span>(audio_falloff_exponent_distance_clamped);<br />
    audio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);</p>
  <p>Il codice precedente imposta il modello di caduta e riproduce il suono indicizzato nella variabile &quot;snd_Waterfall&quot;, che verrà riprodotto in loop nella posizione <span class="notranslate">room</span>, con un riferimento di caduta di 100, una distanza di caduta di 300, un fattore di caduta di 1 e una priorità bassa.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Audio.htm">Audio</a></div>
        <div style="float:right">Il prossimo: <a href="audio_sound_gain.htm"><span class="notranslate">audio_sound_gain</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
audio_falloff_set_model
audio_falloff_exponent_distance
audio_falloff_exponent_distance_clamped
audio_falloff_inverse_distance
audio_falloff_inverse_distance_clamped
audio_falloff_linear_distance
audio_falloff_linear_distance_clamped
audio_falloff_none
-->
  <!-- TAGS
audio_falloff_set_model
-->
</body>
</html>