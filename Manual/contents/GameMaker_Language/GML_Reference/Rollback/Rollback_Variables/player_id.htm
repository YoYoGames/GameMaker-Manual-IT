<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>ID giocatore</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="template" content="../../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="condition-tags" content="Export:Beta" />
  <meta name="rh-index-keywords" content="player_id" />
  <meta name="search-keywords" content="player_id" />
</head>
<body>
  <h1>ID giocatore</h1>
  <p>Quando si usa <a href="../Rollback_Functions/rollback_define_player.htm"><span class="inline">rollback_define_player()</span></a> per definire un giocatore <span class="notranslate">object</span>, il sistema crea automaticamente un'istanza di quel <span class="notranslate">object</span> per ogni giocatore. Ogni istanza di <span class="notranslate">object</span> riceve la variabile <span class="inline">player_id</span>, che memorizza l'ID del giocatore.</p>
  <p>Questo ID parte da 0, che inizialmente è l'host stesso. I giocatori da 1 in su sono &quot;pari&quot; che si sono uniti al gioco.</p>
  <p>Se non si usa <span class="inline">rollback_define_player()</span>, questa variabile non verrà creata per nessun <span class="notranslate">objects</span>. In questo caso, le istanze dei giocatori e i loro ID devono essere gestiti manualmente, come spiegato in <a data-xref="{text}" href="../Rollback_System.htm#h1">Definire un oggetto giocatore</a>.</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">player_id;</p>
  <p> </p>
  <h4>Restituzione:</h4>
  <p class="code"><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">// Create event<br />
    if (player_id == 0)<br />
    {<br />
        x = 300;<br />
    }<br />
    else if (player_id == 1)<br />
    {<br />
        x = 500;<br />
    }</p>
  <p>Il codice precedente modifica la posizione X dell'istanza del giocatore in base al suo ID.</p>
  <p>È possibile utilizzare questo ID anche come indice di un array, ad esempio per memorizzare i punteggi di tutti i giocatori:</p>
  <p class="code">// Step event<br />
    var _coin = instance_place(x, y, obj_coin);<br />
    if (_coin != noone)<br />
    {<br />
        obj_game.scores[player_id]++;<br />
        instance_destroy(_coin);<br />
    }<br />
    <br />
    // Draw event<br />
    var _my_score = obj_game.scores[player_id];<br />
    draw_text(x, y, _my_score);
  </p>
  <p>Il codice dell'evento Step sopra riportato aumenta il punteggio del giocatore in un array in <span class="inline2">obj_game</span> quando si scontra con una moneta. L'istanza della moneta viene poi distrutta.</p>
  <p>Il codice dell'evento Draw recupera il punteggio del giocatore dallo stesso array e ne disegna il valore.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Indietro: <a data-xref="{title}" href="Rollback_Variables.htm">Variabili di rollback</a></div>
        <div>Avanti: <a data-xref="{title}" href="player_local.htm">player_local</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
player_id
-->
  <!-- TAGS
player_id
-->
</body>
</html>