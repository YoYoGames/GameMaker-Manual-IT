<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Vincoli di rollback</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="template" content="../../../assets/masterpages/Manual_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="condition-tags" content="Export:Beta" />
</head>
<body>
  <h1>Vincoli di rollback</h1>
  <p>Il sistema di rollback ha alcuni vincoli di cui bisogna essere consapevoli. Se si infrange uno di questi vincoli, <a data-xref="{text}" href="Rollback_System.htm#h">Sync Test</a> lancia un errore per segnalare il problema.</p>
  <h2>Camere</h2>
  <p>È possibile cambiare <span class="notranslate">rooms</span> mentre è attiva una partita multigiocatore, purché tutti i giocatori siano connessi.</p>
  <p>La modifica di <span class="notranslate">room</span> farà sì che il gioco esegua nuovamente il processo di sincronizzazione.</p>
  <p>I dati di <span class="notranslate">objects</span> gestiti <strong>non </strong>vengono trasferiti automaticamente quando si cambia <span class="notranslate">room</span>. È possibile trasferirli manualmente utilizzando variabili globali, un <span class="notranslate">object</span> persistente o salvando le informazioni del giocatore locale in un file.</p>
  <p>Utilizzando queste opzioni è possibile salvare le informazioni del giocatore prima della fine di <span class="notranslate">room</span> e riapplicarle quando l'istanza del giocatore viene creata in un nuovo <span class="notranslate">room</span>.</p>
  <h2>Ordine dell'evento</h2>
  <p>Quando si avvia una partita multigiocatore, i seguenti eventi vengono eseguiti nell'ordine indicato:</p>
  <ul class="colour">
    <li><a data-xref="{text}" href="../../../The_Asset_Editors/Object_Properties/Other_Events.htm#p">Inizio camera</a></li>
    <li><strong>Creare</strong> eventi per <a href="Rollback_Functions/rollback_define_player.htm">giocatori definiti</a></li>
    <li><a data-xref="{text}" href="Rollback_Events.htm#h">Avvio del rollback</a>
      <ul>
        <li><span class="inline2">rollback_event_param.first_start</span> sarà <span class="inline2">vero</span></li>
      </ul>
    </li>
  </ul>
  <p>Quando si cambia il sito <span class="notranslate">room</span> nel mezzo di una partita multigiocatore, i seguenti eventi verranno eseguiti nell'ordine indicato:</p>
  <ul class="colour">
    <li><a data-xref="{text}" href="../../../The_Asset_Editors/Object_Properties/Other_Events.htm#p1">Fine della stanza</a></li>
    <li>Eventi di<strong>pulizia</strong> per <a href="Rollback_Functions/rollback_define_player.htm">giocatori definiti </a></li>
    <li><a data-xref="{text}" href="../../../The_Asset_Editors/Object_Properties/Other_Events.htm#p">Inizio camera</a></li>
    <li><strong>Creare</strong> eventi per <a href="Rollback_Functions/rollback_define_player.htm">giocatori definiti</a></li>
    <li><a data-xref="{text}" href="Rollback_Events.htm#h">Avvio del rollback</a>
      <ul>
        <li><span class="inline2">rollback_event_param.first_start</span> sarà <span class="inline2">false</span></li>
      </ul>
    </li>
  </ul>
  <h2>Distruggere l'evento</h2>
  <p>L'evento <strong>Destroy</strong> di un'istanza viene normalmente eseguito non appena viene distrutta, ad esempio dopo la chiamata a <span class="inline"><a href="../Asset_Management/Instances/instance_destroy.htm">instance_destroy()</a></span>. Tuttavia, l'evento potrebbe non essere eseguito immediatamente in una partita multigiocatore.</p>
  <p>Una chiamata a <span class="inline">instance_destroy()</span> può essere facilmente eseguita da una previsione sbagliata, il che significa che la distruzione dell'istanza sarà presto annullata quando si riceveranno i dati corretti dal giocatore responsabile.</p>
  <p>Per questo motivo, l'evento Destroy di un'istanza viene chiamato solo quando è confermato che doveva essere distrutta. Ciò significa che potrebbe esserci un leggero ritardo tra la distruzione dell'istanza sullo schermo del giocatore e la chiamata dell'evento Destroy.</p>
  <p>Se si vuole che accada qualcosa sullo schermo del client nello stesso frame in cui un'istanza viene distrutta, si raccomanda di creare una funzione personalizzata e di chiamarla insieme a <span class="inline">instance_destroy()</span>.</p>
  <p>Questo vale anche per l'evento <strong>Clean Up</strong> in esecuzione su un'istanza che viene distrutta.</p>
  <h2>Gestione dello Stato</h2>
  <p>Rollback Multiplayer gestisce lo &quot;stato&quot; del gioco tra i client, che comprende le istanze gestite e le loro variabili. Queste parti gestite del gioco possono essere riportate indietro in caso di previsione errata dal sistema di rollback.</p>
  <p>Quando si crea o si distrugge un'istanza gestita, o si modificano le proprietà/variabili di un'istanza gestita, si aggiorna lo stato del gioco. Questo stato <strong>non</strong> viene inviato agli altri giocatori, poiché solo l'<a href="Rollback_Functions/rollback_define_input.htm">input</a> è condiviso da tutti i client.</p>
  <p>Ci sono alcune restrizioni nella gestione dello stato del gioco che è necessario seguire per garantire una corretta sincronizzazione tra i giocatori.</p>
  <h3 id="h1">Stato prima dell'avvio del rollback</h3>
  <p>È necessario assicurarsi che ogni giocatore inizi con lo stesso stato di gioco. Ciò significa che tutto ciò che riguarda il gioco e le sue istanze gestite deve essere uguale per tutti i giocatori quando si attiva l'evento <a href="Rollback_Events.htm">Rollback Start</a>, cioè quando il gioco inizia effettivamente.</p>
  <p>È possibile eseguire qualsiasi codice di creazione o impostazione per le istanze gestite prima di questo momento, purché sia fatto esattamente nello stesso modo per tutti i client. Per sapere se il gioco è iniziato, usare <span class="inline"><a data-xref="{title}" href="Rollback_Variables/rollback_game_running.htm">rollback_game_running</a></span>.</p>
  <p>È possibile utilizzare il tempo che intercorre tra la chiamata di inizio/partenza e l'evento <a href="Rollback_Events.htm">Rollback Start</a> per visualizzare una schermata di caricamento per i giocatori in attesa.</p>
  <p>Il giocatore torna allo stesso stato quando <a href="Rollback_Functions/rollback_leave_game.htm">esce da una partita</a>, quindi l'uso di <span class="inline"><a data-xref="{title}" href="Rollback_Variables/rollback_game_running.htm">rollback_game_running</a></span> è necessario per garantire che la logica di gioco venga eseguita solo quando la partita è connessa.</p>
  <h3>Stato globale</h3>
  <p>Non è possibile che le variabili globali influenzino lo stato del gioco, poiché non sono sincronizzate tra i giocatori. Tutte le variabili necessarie devono trovarsi all'interno del sito gestito <span class="notranslate">objects</span>.</p>
  <h3>Stato dell'evento di disegno</h3>
  <p>Non è possibile modificare lo stato di un evento Draw e il suo scopo deve rimanere quello di disegnare solo la grafica basata sullo stato impostato negli eventi precedenti. Tutti i siti <span class="notranslate">objects</span> gestiti diventano di sola lettura durante un evento Draw, quindi non è possibile modificare alcuna variabile in essi e non è possibile creare o distruggere istanze dei siti <span class="notranslate">objects</span> gestiti.</p>
  <h3 id="h">Variabili temporali</h3>
  <p>Non utilizzare variabili/funzioni come <span class="inline"><a href="../Maths_And_Numbers/Date_And_Time/current_time.htm">current_time</a></span> o <span class="inline"><a href="../Maths_And_Numbers/Date_And_Time/get_timer.htm">get_timer()</a></span> per influenzare la logica di gioco. È stata fornita una variabile gestita chiamata <span class="inline"><a data-xref="{title}" href="Rollback_Variables/rollback_current_frame.htm">rollback_current_frame</a></span> che può essere utilizzata al suo posto. Essa restituisce il numero di fotogrammi trascorsi dall'inizio della partita multigiocatore.</p>
  <p>Gli<a href="../Asset_Management/Instances/Instance_Variables/alarm.htm">eventi di allarme</a> sono sicuri da usare in <span class="notranslate">objects</span>.</p>
  <p>Assicuratevi inoltre di non utilizzare <span class="inline"><a href="../Maths_And_Numbers/Date_And_Time/delta_time.htm">delta_time</a></span>, poiché dipende fortemente dal sistema che esegue il gioco e non può essere sincronizzato tra i giocatori.</p>
  <h3>Riferimenti all'istanza</h3>
  <p>Un ID di istanza memorizzato in un'istanza gestita deve puntare a un'istanza gestita.</p>
  <p>Se un'istanza gestita ha un riferimento a un'istanza non gestita, si verificheranno incoerenze tra gli stati del client, poiché le modifiche a tale istanza non gestita non possono essere gestite e annullate.</p>
  <p>Ad esempio, se l'istanza di <span class="inline2">obj_workstation</span> gestita ha un riferimento a un'istanza di <span class="inline2">obj_anvil</span>, <span class="inline2">obj_anvil</span> deve essere un oggetto gestito <span class="notranslate">object</span>.</p>
  <h3>Riferimenti di istanza persi</h3>
  <p>Una variabile all'interno di un'istanza gestita, contenente un riferimento a un'altra istanza gestita, sarà impostata a <span class="inline2">undefined</span> se l'istanza di riferimento viene distrutta.</p>
  <p>Ciò significa che se una variabile in un'istanza gestita <strong>persistente</strong> contiene un riferimento a un'istanza gestita <strong>non persistente</strong>, tale variabile sarà impostata a <span class="inline2">undefined</span> quando <span class="notranslate">room</span> cambierà, poiché l'istanza non persistente smetterà di esistere.</p>
  <h2>Numeri casuali</h2>
  <p>Lo stato della generazione di numeri casuali (RNG) è gestito tra i giocatori, quindi è assolutamente sicuro utilizzare funzioni casuali (ad esempio <span class="inline">random()</span>, <span class="inline">choose()</span>, ecc.) per la logica di gioco. Il sistema di rollback garantisce che ogni giocatore riceva lo stesso numero casuale nello stesso momento della partita.</p>
  <p>Gli eventi Draw utilizzano uno stato RNG separato. Ciò significa che le funzioni casuali chiamate in un evento Sorteggio non influiscono sullo stato RNG regolare di altri eventi e potrebbero non essere le stesse tra i diversi giocatori.</p>
  <h3>Semi</h3>
  <p>Non è possibile utilizzare <span class="inline"><a href="../Maths_And_Numbers/Number_Functions/randomise.htm">randomise()</a></span> o <a href="../Maths_And_Numbers/Number_Functions/random_set_seed.htm"><span class="inline">random_set_seed()</span></a> per cambiare il seme del RNG, perché è gestito dal sistema di Rollback.</p>
  <p>Lo stato RNG gestito inizia solo quando viene richiamato l'<a data-xref="{text}" href="Rollback_Events.htm#h">avvio del rollback</a>, ovvero quando inizia la partita multigiocatore. È possibile modificare il seme prima di quel momento, ma non avrà alcun effetto dopo il punto di partenza.</p>
  <h2>Ulteriori letture</h2>
  <p>Per ulteriori informazioni sul sistema Rollback, leggere le pagine seguenti:</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="Rollback_Events.htm">Eventi di rollback</a></li>
    <li><a data-xref="{title}" href="Creating_Multiplayer.htm">Creare un gioco multiplayer</a></li>
    <li><a data-xref="{title}" href="Rollback_System.htm">Sistema Rollback</a></li>
    <li><a data-xref="{title}" href="Defining_Inputs.htm">Definizione degli ingressi</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Indietro: <a data-xref="{title}" href="Rollback_Multiplayer.htm">Rollback Multiplayer</a></div>
        <div>Il prossimo: <a data-xref="{title}" href="Rollback_Events.htm">Eventi di rollback</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
</body>
</html>