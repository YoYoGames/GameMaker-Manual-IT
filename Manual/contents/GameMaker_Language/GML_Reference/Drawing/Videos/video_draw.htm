<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>video_disegno</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <meta name="template" content="../../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Reference page for video_draw" />
  <meta name="rh-index-keywords" content="video_draw" />
  <meta name="search-keywords" content="video_draw, draw video, render video" />
  <meta name="condition-tags" content="" />
</head>
<body>
  <h1>video_disegno</h1>
  <p>Questa funzione disegna il fotogramma corrente del <a href="video_open.htm">video aperto</a> su una superficie (o due superfici). Restituisce la superficie (o le superfici) come parte del suo array di ritorno, che può essere <a href="../Surfaces/draw_surface.htm">disegnato manualmente</a>.</p>
  <p>La funzione restituisce anche i dati relativi allo stato del video, che vengono ampliati di seguito.</p>
  <p>Assicuratevi che questo sia chiamato solo dopo una chiamata <span class="inline"><a href="video_open.htm">video_open()</a></span> ma prima di una chiamata <span class="inline"><a href="video_close.htm">video_close()</a></span>, altrimenti non farà nulla (poiché non ci sarà un video caricato).</p>
  <h2>Dati di ritorno</h2>
  <p>La funzione restituirà un array, il cui primo elemento (<span class="inline2">[0]</span>) sarà un valore reale. Questo valore dice lo stato del video, e sarà:</p>
  <ul class="colour">
    <li><strong>0</strong>, se il video viene riprodotto senza problemi</li>
    <li><strong>-1</strong>, se c'è stato un errore</li>
    <li>Su alcune piattaforme, <strong>-2</strong>, se il video ha finito la riproduzione (a quel punto può essere rimosso dalla memoria con una chiamata <span class="inline"><a href="video_close.htm">video_close()</a></span> )
      <ul>
        <li>Si raccomanda invece di usare le <a data-xref="{text}" href="Videos.htm#h">callback asincrone</a> per sapere quando un video finisce</li>
      </ul>
    </li>
  </ul>
  <p>Quando questo valore di stato è <strong>0</strong>, l'array conterrà più dati, che dipenderanno dal formato del video. È possibile conoscere il formato video chiamando <span class="inline"><a href="video_get_format.htm">video_get_format()</a></span>.</p>
  <h2>Video RGBA</h2>
  <p><span>Per i video RGBA, la posizione <span class="inline2">[1]</span> conterrà la superficie dove il fotogramma del video è stato disegnato. Puoi ottenere questa superficie e <a href="../Surfaces/draw_surface.htm">disegnarla</a> manualmente.</span></p>
  <h2>Video YUV</h2>
  <p><span>Alcune piattaforme (specialmente le console) usano il formato di colore YUV per i video, che fa uso di due superfici. In questo caso l'array avrà le posizioni <span class="inline2">[1]</span> e <span class="inline2">[2]</span> con due superfici:</span></p>
  <ul class="colour">
    <li><span>[<span class="inline2">1]</span> è la superficie video principale in bianco e nero</span></li>
    <li><span>[<span class="inline2">2]</span> è la superficie chroma che contiene tutti i dati di colore</span></li>
  </ul>
  <p>Entrambe queste superfici sono poi combinate usando un YUV <span class="notranslate">shader</span> prima di essere usate per <span class="notranslate">texture</span> un quad personalizzato, che disegnerà il video sullo schermo.</p>
  <p>Leggete i <a data-xref="{title}" href="YUV_Videos.htm">video YUV</a> per i passi sul disegno di queste due superfici usando un <span class="notranslate">shader</span>.</p>
  <p>Per i dettagli specifici di implementazione di una particolare console, si prega di fare riferimento alla sua documentazione sull'<a href="https://help.yoyogames.com/hc/en-us/">Helpdesk di YoYo Games</a>.</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">video_draw();</p>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_Array"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Overview/Arrays.htm">Array</a></span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">var _data = video_draw();<br />
    var _status = _data[0];<br />
    var _video_status = video_get_status();<br />
    <br />
    if (_status == 0 &amp;&amp; _video_status == video_status_playing)<br />
    {<br />
        var _surface = _data[1];<br />
    <br />
        draw_surface(_surface, x, y);<br />
    }
  </p>
  <p>Il codice di cui sopra chiama <span class="inline">video_draw()</span>, e controlla se lo stato restituito è 0, il che significa che il video è in riproduzione. In questo caso ottiene l'ID della superficie e la disegna nella posizione dell'istanza. Questo funzionerà solo per i video RGBA.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Indietro: <a data-xref="{title}" href="Videos.htm">Riproduzione video</a></div>
        <div>Prossimo: <a data-xref="{title}" href="YUV_Videos.htm">Video YUV</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
video_draw
-->
  <!-- TAGS
video_draw
-->
</body>
</html>