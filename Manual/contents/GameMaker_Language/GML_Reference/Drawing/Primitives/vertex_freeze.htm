<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vertex_freeze</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for vertex_freeze" />
  <meta name="rh-index-keywords" content="vertex_freeze" />
  <meta name="search-keywords" content="vertex_freeze" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">vertex_freeze</span></h1>
  <p>This function can be used to &quot;freeze&quot; a vertex buffer.</p>
  <p>This vertex buffer becomes <b>read-only</b>, meaning that should you need to change it, you would have to delete the whole buffer and re-create it. A frozen vertex buffer can be submitted to the shader faster than a normal, dynamic buffer and is recommended for those effects that require an unchanging custom primitive for the duration of a level or the game.</p>
  <p>The function will return 0 on successfully freezing the specified vertex buffer, however if it failed for any reason, it will return -1.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">vertex_freeze</span>(buffer);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>buffer</td>
        <td><span data-keyref="Type_ID_Buffer_Vertex"><a href="vertex_create_buffer.htm" target="_blank">Vertex Buffer</a></span></td>
        <td>The vertex buffer to freeze.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span> (0 for success, -1 for failure)</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code_heading">Create Event</p>
  <p class="code">
    <span data-field="title" data-format="default">vertex_freeze</span>(vbuff);
  </p>
  <p>The above code will freeze the given vertex buffer in the Create event, so it can be used as a &quot;static&quot; buffer in other events for faster access.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Primitives_And_Vertex_Formats.htm">Primitives And Vertex Formats</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="vertex_submit.htm">vertex_submit</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
vertex_freeze
-->
  <!-- TAGS
vertex_freeze
-->
</body>
</html>