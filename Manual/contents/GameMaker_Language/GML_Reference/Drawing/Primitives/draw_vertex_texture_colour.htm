<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>colore_vertex_texture</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for draw_vertex_texture_colour" />
  <meta name="rh-index-keywords" content="draw_vertex_texture_colour,draw_vertex_texture_color" />
  <meta name="search-keywords" content="draw_vertex_texture_colour,draw_vertex_texture_color" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>colore_vertex_texture</h1>
  <p>Questa funzione definisce la posizione di un vertice testurizzato per una primitiva. L'aspetto finale della primitiva dipenderà dal tipo di primitiva scelta per disegnare (vedere <a href="draw_primitive_begin.htm"><span class="inline">draw_primitive_begin()</span></a> per maggiori informazioni),
    dall'ordine con cui si aggiungono i vertici ad essa, dalla posizione dei punti di inizio e fine che si danno per il campione <span class="notranslate">texture</span> e dai valori di colore e alfa che si sono impostati. Per mantenere l'aspetto di <span class="notranslate">texture</span> cambiando solo l'alfa, un valore
    di -1 (o <span class="inline">c_white</span>) può essere usato per l'argomento colore. Per terminare e disegnare la primitiva è necessario chiamare <a href="draw_primitive_end.htm"><span class="inline">draw_primitive_end()</span></a>.</p>
  <p class="note"><b><span class="note">NOTA</span></b> Perché un <span class="notranslate">texture</span> si ripeta deve essere una potenza di due in dimensioni, cioè: 32x32, 128x128, ecc...</p>
  <p> </p>
  <h4>Sintassi:</h4>
  <p class="code">draw_vertex_texture_colour(x, y, xtex, ytex, col, alpha)</p>
  <table>
    <tbody>
      <tr>
        <th>Argomento</th><th>Tipo</th>
        <th>Descrizione</th>
     </tr>
      <tr>
        <td><span class="notranslate">x</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the vertex.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the vertex.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">xtex</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate within the texture.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">ytex</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate within the texture.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">col</span></td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td><span class="notranslate">The colour to blend with the texture at this vertex (-1 or <span class="inline">c_white</span> per nessuna miscelazione).</td>
     </tr>
      <tr>
        <td><span class="notranslate">alpha</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The alpha to draw this vertex with (0-1).</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Ritorna:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Esempio:</h4>
  <p class="code">draw_set_colour(c_white);<br/> var tex = sprite_get_texture(spr_Background, 0);<br/> draw_primitive_begin_texture(pr_trianglestrip, tex);<br/> draw_vertex_texture_colour(0, 0, 0, 0, c_fuchsia, 1);<br/> draw_vertex_texture_colour(640, 0, 1, 0, c_yellow,
    1);<br/> draw_vertex_texture_colour(0, 480, 0, 1, c_aqua, 1);<br/> draw_vertex_texture_colour(640, 480, 1, 1, c_lime, 1);<br/> draw_primitive_end();
  </p>
  <p>Il codice qui sopra disegnerà una striscia di triangolo a 4 vertici (facendo un rettangolo) texturizzato con il <span class="notranslate">texture</span> tenuto nella variabile &quot;tex&quot;, e l'intero <span class="notranslate">texture</span> sarà usato per coprire la primitiva completata, e sarà sfumato con quattro colori diversi.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Indietro: <a href="Primitives_And_Vertex_Formats.htm">Primitivi e formati di vertici</a></div>
        <div style="float:right">Il prossimo: <a href="vertex_format_begin.htm"><span class="notranslate">vertex_format_begin</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Tutti i diritti riservati</span></h5>
  </div>
  <!-- KEYWORDS
draw_vertex_texture_colour
draw_vertex_texture_color
-->
  <!-- TAGS
draw_vertex_texture_colour
-->
</body>
</html>