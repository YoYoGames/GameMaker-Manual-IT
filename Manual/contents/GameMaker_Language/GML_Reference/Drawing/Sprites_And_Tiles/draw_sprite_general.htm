<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>draw_sprite_general</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for draw_sprite_general" />
  <meta name="rh-index-keywords" content="draw_sprite_general" />
  <meta name="search-keywords" content="draw_sprite_general" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>draw_sprite_general</h1>
  <p>This function combines the function <a href="draw_sprite_ext.htm"><span class="inline">draw_sprite_ext()</span></a> with the function <a href="draw_sprite_part.htm"><span class="inline">draw_sprite_part()</span></a>, adding in some additional blending options so that each corner of the
    final sprite part can be blended with an individual colour.</p>
  <p class="note"><b>NOTE</b>: Colour blending is only recommended for the HTML5 target when WebGL is enabled, although you can still set the blending colour if it is not enabled and it will blend the sprite as normal. However all blending in this way creates a duplicate
    sprite which is then stored in the cache and used when required. This is far from optimal and if you use multiple colour changes it will slow down your games performance unless you activate WebGL. if you do not wish to use WebGL, then you can set
    the font cache size to try and limit this should it be necessary using the function <span style="font-size:1px;"><a href="../../Asset_Management/Sprites/Sprite_Manipulation/sprite_set_cache_size_ext.htm"><span class="inline">sprite_set_cache_size()</span></a></span>.</p>
  <p class="note"><b>NOTE</b>: This function may not work as expected when using skeleton animation sprites, and you may find that the function only draws the first frame of the default pose. You should be using the <span class="inline">draw_skeleton_*</span> functions instead.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">draw_sprite_general(sprite, subimg, left, top, width, height, x, y, xscale, yscale, rot, c1, c2, c3, c4, alpha);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>sprite</td><td><span data-keyref="Type_Asset_Sprite"></span></td>
        <td>The index of the sprite to draw.</td>
     </tr>
      <tr>
        <td>subimg</td><td><span data-keyref="Type_Real"></span></td>
        <td>The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object).</td>
     </tr>
      <tr>
        <td>left</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x position on the sprite of the top left corner of the area to draw.</td>
     </tr>
      <tr>
        <td>top</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y position on the sprite of the top left corner of the area to draw.</td>
     </tr>
      <tr>
        <td>width</td><td><span data-keyref="Type_Real"></span></td>
        <td>The width of the area to draw.</td>
     </tr>
      <tr>
        <td>height</td><td><span data-keyref="Type_Real"></span></td>
        <td>The height of the area to draw.</td>
     </tr>
      <tr>
        <td>x</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of where to draw the sprite.</td>
     </tr>
      <tr>
        <td>y</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of where to draw the sprite.</td>
     </tr>
      <tr>
        <td>xscale</td><td><span data-keyref="Type_Real"></span></td>
        <td>The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc...</td>
     </tr>
      <tr>
        <td>yscale</td><td><span data-keyref="Type_Real"></span></td>
        <td>The vertical scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc...</td>
     </tr>
      <tr>
        <td>rot</td><td><span data-keyref="Type_Real"></span></td>
        <td>The rotation of the sprite. 0=normal, 90=turned 90 degrees counter-clockwise etc.</td>
     </tr>
      <tr>
        <td>c1</td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td>The colour with which to blend the top left area of the sprite.</td>
     </tr>
      <tr>
        <td>c2</td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td>The colour with which to blend the top right area of the sprite.</td>
     </tr>
      <tr>
        <td>c3</td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td>The colour with which to blend the bottom right area of the sprite.</td>
     </tr>
      <tr>
        <td>c4</td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td>The colour with which to blend the bottom left area of the sprite.</td>
     </tr>
      <tr>
        <td>alpha</td><td><span data-keyref="Type_Real"></span></td>
        <td>The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque).</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">draw_sprite_general(sprite_index, image_index, 8, 8, sprite_width-16, sprite_height-16, x, y, 2, 0.5, 180, c_white, c_white, c_black, c_black, 1);</p>
  <p>This will draw the instances assigned sprite (sprite_index) and its current frame of animation (image_index), however it will shave an 8px margin off all four sides of the sprite. It will be stretched to double its usual width but half its usual height.
    It will be opaque, and upside down. The top area of the sprite will be blended white and hence normal, but the bottom area will be black, meaning the sprite will go from normal to a silhouette downwards in a smooth gradient.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Sprites_And_Tiles.htm">Sprites And Tiles</a></div>
        <div style="float:right">Next: <a href="draw_sprite_part.htm">draw_sprite_part</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
draw_sprite_general
-->
  <!-- TAGS
draw_sprite_general
-->
</body>
</html>