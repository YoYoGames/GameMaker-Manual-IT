<?xml version="1.0" encoding="UTF-8"?>        

<glossgroup id="Default">          
<title>Glossary Definitions</title>        
<glossentry id="Default_absolute">
<glossterm>assoluto</glossterm>
<glossdef>Un valore assoluto è un valore in cui il segno del valore viene ignorato, convertendo essenzialmente tutti i valori in positivi o in zero. Quindi, ad esempio, un valore assoluto per -10 sarebbe 10.</glossdef></glossentry>
<glossentry id="Default_algorithm">
<glossterm>algoritmo</glossterm>
<glossdef>Un algoritmo è fondamentalmente un insieme di istruzioni o regole progettate per risolvere un determinato problema. Il problema può essere semplice, come l'addizione di due numeri, o complesso, come la conversione di un file video da un formato a un altro o la compressione di un audio in un file di dimensioni più ridotte.</glossdef></glossentry>
<glossentry id="Default_anti-aliasing">
<glossterm>anti-aliasing</glossterm>
<glossdef>Si tratta di una tecnica utilizzata per smussare linee o texture altrimenti frastagliate, fondendo il colore di un bordo con quello dei pixel che lo circondano. Il risultato dovrebbe essere un aspetto più gradevole e realistico, a seconda dell'intensità dell'effetto.</glossdef></glossentry>
<glossentry id="Default_API">
<glossterm>API</glossterm>
<glossdef>L'acronimo "API" sta per Application Programming Interface (Interfaccia di programmazione di un'applicazione) e si riferisce a un insieme di regole, routine e protocolli utilizzati per costruire applicazioni software. Le API aiutano a comunicare con programmi o servizi di terze parti, che possono essere utilizzati per costruire software diversi. Aziende come Facebook e Twitter utilizzano attivamente le API per aiutare gli sviluppatori a ottenere un accesso più facile ai loro servizi e in GameMaker Studio 2 si vedrà l'acronimo API quando si parla di estensioni, ad esempio l'API di Google Play Services o l'API di Amazon Game On.</glossdef></glossentry>
<glossentry id="Default_application_surface">
<glossterm>superficie di applicazione</glossterm>
<glossdef>La superficie dell'applicazione è una speciale superficie incorporata su cui GameMaker Studio 2 disegna tutto negli eventi di disegno di un gioco (una superficie è essenzialmente un'area di memoria riservata alla grafica). Questa superficie viene poi disegnata nel buffer di visualizzazione alla fine di ogni fotogramma di gioco, mostrando il suo contenuto al giocatore.</glossdef></glossentry>
<glossentry id="Default_architectures">
<glossterm>architetture</glossterm>
<glossdef>L'architettura di un chip di processore (CPU) è una descrizione dei suoi componenti e delle sue operazioni di base. Ogni famiglia di processori ha una propria architettura, come ARM o x64.</glossdef></glossentry>
<glossentry id="Default_ARGB">
<glossterm>ARGB</glossterm>
<glossdef>È l'anacronimo di Alpha, Red, Green, Blue e viene utilizzato per riferirsi ai componenti del colore specificati come valore esadecimale, ad esempio: #FF53E270, dove ogni serie di due cifre rappresenta un singolo componente. Scomponendo l'esempio ARGB di cui sopra si ottengono i seguenti valori dei componenti: Alfa (FF), Rosso (53), Verde (E2) e Blu (70).</glossdef></glossentry>
<glossentry id="Default_argument">
<glossterm>argomento</glossterm>
<glossdef>Un argomento (noto anche come parametro) è un valore che viene passato a una funzione. Ad esempio, la funzione del linguaggio GameMaker "sqr(num)" è una funzione che fornisce il quadrato di un numero fornito come argomento, ad esempio: "a = sqr(4);" In questo caso l'argomento è 4 e la funzione restituisce 16, che viene memorizzato nella variabile "a".</glossdef></glossentry>
<glossentry id="Default_asset_key">
<glossterm>chiave di asset</glossterm>
<glossdef>Una posizione sulla timeline del foglio di lavoro in cui è stata collocata una risorsa. La chiave di una risorsa può durare più fotogrammi.</glossdef></glossentry>
<glossentry id="Default_Asset_Track">
<glossterm>traccia delle attività</glossterm>
<glossdef>Una traccia nel pannello delle tracce delle sequenze che contiene una singola risorsa, sia essa una sprite, un suono, un'istanza o una sequenza.</glossdef></glossentry>
<glossentry id="Default_assignment">
<glossterm>assegnazione</glossterm>
<glossdef>Un'assegnazione è semplicemente il termine usato quando si imposta (assegna) un valore a una variabile.</glossdef></glossentry>
<glossentry id="Default_backend">
<glossterm>backend</glossterm>
<glossdef>Il backend è la parte di un programma che viene eseguita in background ed è opaca per l'utente, di solito senza la necessità di alcuna interazione da parte dell'utente. Ad esempio, il lato server delle cose quando si programma in rete su Internet, o l'elaborazione dei dati che avviene dietro le quinte di un gioco RPG. È essenzialmente l'opposto del frontend.</glossdef></glossentry>
<glossentry id="Default_bezier_interpolation">
<glossterm>interpolazione bezier</glossterm>
<glossdef>L'interpolazione di Bezier consiste nello stimare un nuovo valore collegando due valori noti adiacenti con una curva spline generata matematicamente e modificabile mediante "maniglie" collegate a ciascun punto. È quindi possibile ottenere il valore interpolato controllando qualsiasi punto lungo la linea.</glossdef></glossentry>
<glossentry id="Default_bit">
<glossterm>bit</glossterm>
<glossdef>Un singolo valore di dati che può essere 1 o 0 (vero o falso). I bit vengono combinati in blocchi di 8 per creare un byte.</glossdef></glossentry>
<glossentry id="Default_bit_depth">
<glossterm>profondità di bit</glossterm>
<glossdef>La profondità di bit si riferisce al numero di bit in ogni campione di un file audio. Una profondità di bit inferiore offre una qualità del suono più scadente, ma una dimensione del file molto inferiore. Le profondità di bit più basse sono di solito utilizzate per piccoli effetti sonori e per le forme in cui la memoria può essere un problema (come l'HTML5).</glossdef></glossentry>
<glossentry id="Default_bit_rate">
<glossterm>velocità di trasmissione</glossterm>
<glossdef>La velocità di trasmissione è misurata in kilobit per secondo (kbps o k) e rappresenta il numero di bit codificati al secondo o il numero di bit trasmessi o ricevuti al secondo. Maggiore è la velocità di trasmissione e di campionamento, maggiore è la qualità dell'audio, ma maggiore è la potenza di elaborazione e la larghezza di banda necessaria. Le frequenze di bit più basse creano file di dimensioni più ridotte e utilizzano meno elaborazione e larghezza di banda, ma con un calo della qualità audio. Per la musica di buona qualità è preferibile una velocità di trasmissione di 64-128kbps (si consiglia 96kbps).</glossdef></glossentry>
<glossentry id="Default_bitmap">
<glossterm>bitmap</glossterm>
<glossdef>Il termine bitmap indica qualsiasi immagine statica composta da pixel colorati memorizzati sotto forma di bit (a differenza delle immagini vettoriali che vengono memorizzate utilizzando algoritmi matematici). PNG, JPG e BMP sono esempi di immagini bitmap, mentre SWF è un esempio di immagine vettoriale.</glossdef></glossentry>
<glossentry id="Default_boolean">
<glossterm>booleano</glossterm>
<glossdef>Un booleano è un tipo di variabile che può restituire vero o falso in base al suo valore e può essere utilizzato in condizioni ed espressioni. A un booleano si possono applicare le costanti 'false' o 'true', che sono l'equivalente dei valori reali 0 e 1.</glossdef></glossentry>
<glossentry id="Default_bounding_box">
<glossterm>riquadro di delimitazione</glossterm>
<glossdef>Per gli sprite, il bounding-box è il nome dato ai bordi dell'area in cui verranno inizialmente rilevate le collisioni e non deve necessariamente avere le stesse dimensioni dello sprite a cui viene applicato. Per le sequenze, la bounding box è il bordo esterno dello spazio totale che una o più risorse occupano nella tela.</glossdef></glossentry>
<glossentry id="Default_build_tools">
<glossterm>strumenti di costruzione</glossterm>
<glossdef>Gli strumenti di compilazione sono applicazioni esterne che GameMaker Studio 2 richiede per generare pacchetti eseguibili per le diverse piattaforme di destinazione.</glossdef></glossentry>
<glossentry id="Default_byte">
<glossterm>byte</glossterm>
<glossdef>Un byte è un'unità di dati di otto cifre binarie, e ciascuna delle cifre che compongono un byte è chiamata bit, cioè un byte è composto da 8 bit e un bit può essere un 1 o uno 0.</glossdef></glossentry>
<glossentry id="Default_Cache">
<glossterm>Cache</glossterm>
<glossdef>La cache è una raccolta di file che vengono generati da GameMaker una sola volta e poi memorizzati e riutilizzati in più esecuzioni di un progetto. Si noti che questa cache può talvolta diventare 'stantia', il che significa che deve essere cancellata per costringere GameMaker a ricostruirla da zero, assicurando che nessun file stantìo danneggi l'eseguibilità del gioco finale.</glossdef></glossentry>
<glossentry id="Default_callback">
<glossterm>callback</glossterm>
<glossdef>Un callback è semplicemente una funzione che viene eseguita e poi attiva un'altra funzione (o un blocco di codice) quando ha finito di fare ciò che le è stato assegnato. Ad esempio, la funzione sprite_add() attiverà un callback nell'evento asincrono Image Loaded quando lo sprite è stato caricato.</glossdef></glossentry>
<glossentry id="Default_catmull-rom_interpolation">
<glossterm>interpolazione catmull-rom</glossterm>
<glossdef>Si tratta di un tipo di interpolazione non lineare basata su spline matematiche. Si utilizza per stimare un nuovo valore collegando due valori noti adiacenti mediante curve "lisce" (spline) e un nuovo valore può essere derivato da qualsiasi punto lungo la linea.</glossdef></glossentry>
<glossentry id="Default_Compiling">
<glossterm>Compilazione</glossterm>
<glossdef>La compilazione è il momento in cui GameMaker prende il codice e lo raccoglie in modo da creare un pacchetto eseguibile che verrà eseguito su un dispositivo come gioco.</glossdef></glossentry>
<glossentry id="Default_compression">
<glossterm>compressione</glossterm>
<glossdef>La compressione è l'uso di algoritmi matematici per ridurre le dimensioni di un file. È utilizzata in particolare per i file audio e di immagine, dove formati come JPG (immagini) e MP3 (audio) sono formati compressi. La compressione di solito porta a file di dimensioni molto più ridotte, ma con una perdita di dati che può essere o meno evidente a seconda del tipo e della forza della compressione utilizzata. I formati non compressi sono il BMP (immagine) o il WAV (audio), che hanno dimensioni maggiori, ma nessuna perdita di dati.</glossdef></glossentry>
<glossentry id="Default_conditional">
<glossterm>condizionale</glossterm>
<glossdef>I condizionali, gli enunciati condizionali e le espressioni condizionali sono caratteristiche del linguaggio di programmazione generale e aiutano il codice a fare una scelta il cui risultato è vero o falso. Possono eseguire azioni diverse a seconda delle esigenze del programmatore e più condizionali possono essere combinati in un'unica condizione, purché il valore finale della condizione sia vero o falso. Esempi di dichiarazioni condizionali sono 'if' e 'while'.</glossdef></glossentry>
<glossentry id="Default_constants">
<glossterm>costante</glossterm>
<glossdef>Una costante è un termine usato per descrivere un valore nominato che non cambia durante l'esecuzione del programma. GameMaker Studio 2 dispone di una serie di costanti incorporate (ad esempio os_windows), ma è anche possibile creare valori costanti personalizzati da utilizzare nei progetti (chiamati macro) e nelle estensioni.</glossdef></glossentry>
<glossentry id="Default_CPU_overhead">
<glossterm>Sovraccarico della CPU</glossterm>
<glossdef>L'overhead della CPU misura la quantità di lavoro che l'unità di elaborazione centrale di un computer è in grado di eseguire e la percentuale di tale capacità utilizzata da singole attività di calcolo.</glossdef></glossentry>
<glossentry id="Default_deadzone">
<glossterm>zona morta</glossterm>
<glossdef>La deadzone è la distanza a cui si deve muovere uno stick analogico prima che il gioco riconosca che è stato mosso. Una deadzone bassa fa sì che ogni minimo movimento dello stick analogico faccia muovere il giocatore o la mira o altro. Un valore elevato di deadzone significa che la levetta analogica deve essere mossa molto di più prima che il gioco la rilevi e muova l'oggetto controllato.</glossdef></glossentry>
<glossentry id="Default_back-buffer">
<glossterm>buffer di visualizzazione</glossterm>
<glossdef>Il buffer di visualizzazione è la 'tela' dove tutto viene disegnato alla fine. Alcuni eventi si rivolgono direttamente a questo (come l'evento Pre Draw), mentre altri disegnano prima sulla superficie dell'applicazione e poi sul buffer di visualizzazione.</glossdef></glossentry>
<glossentry id="Default_Dope_Sheet">
<glossterm>Foglio di droghe</glossterm>
<glossdef>Il Dope Sheet è la rappresentazione visiva della timeline della sequenza, dove è possibile aggiungere, rimuovere e modificare le diverse asset key e parameter key che influenzano il comportamento delle diverse tracce della sequenza nel tempo.</glossdef></glossentry>
<glossentry id="Default_encoding">
<glossterm>codifica</glossterm>
<glossdef>La codifica trasforma i dati in un altro formato utilizzando uno schema pubblicamente disponibile che può essere facilmente invertito. Non è la stessa cosa della crittografia, poiché non richiede una chiave per essere decodificata. La codifica viene generalmente utilizzata per modificare i dati in un formato che possa essere utilizzato più facilmente da un altro sistema (come l'invio di dati a un server) o per rendere i dati illeggibili all'occhio umano.</glossdef></glossentry>
<glossentry id="Default_EULA">
<glossterm>EULA</glossterm>
<glossdef>Il Contratto di licenza con l'utente finale (EULA) è un documento legale che delinea la licenza di un prodotto che si sta acquistando.</glossdef></glossentry>
<glossentry id="Default_exception">
<glossterm>eccezione</glossterm>
<glossdef>Una condizione speciale, inaspettata e anomala riscontrata durante l'esecuzione di un programma è nota come eccezione. Può anche essere definita come un errore o una condizione che altera il percorso del programma o del microprocessore. Un esempio di eccezione può essere il caso in cui un programma tenta di accedere a una variabile, ma questa non esiste. Le eccezioni devono essere gestite ed eliminate nel codice del programma per evitare errori fatali, un processo chiamato debug.</glossdef></glossentry>
<glossentry id="Default_executable_package">
<glossterm>pacchetto eseguibile</glossterm>
<glossdef>Un pacchetto di file utilizzati per eseguire un programma. In GameMaker Studio questo può essere un singolo file, come un programma di installazione per Windows, o più file, come l'output HTML5.</glossdef></glossentry>
<glossentry id="Default_expression">
<glossterm>espressione</glossterm>
<glossdef>Un'espressione è una combinazione di una o più costanti, variabili, operatori e/o funzioni che vengono interpretate secondo particolari regole di precedenza e associazione per restituire un altro valore. Un'espressione semplice potrebbe essere (5 5), che restituisce 10.</glossdef></glossentry>
<glossentry id="Default_falsy">
<glossterm>falsario</glossterm>
<glossdef>Un valore che viene considerato "falso" se usato come booleano, ad esempio in una condizione if().</glossdef></glossentry>
<glossentry id="Default_floating_point">
<glossterm>in virgola mobile</glossterm>
<glossdef>I numeri in virgola mobile sono numeri che contengono punti decimali. Ad esempio, i numeri 5,5, 0,001 e -2.345,6789 sono numeri in virgola mobile. I numeri che non hanno cifre decimali sono chiamati numeri interi (ad esempio, 2, 56, 1400).</glossdef></glossentry>
<glossentry id="Default_font">
<glossterm>carattere</glossterm>
<glossdef>Un font è un insieme di glifi grafici utilizzati per rappresentare il testo in una lingua. I font possono avere pesi, dimensioni e stili diversi e vengono utilizzati per visualizzare qualsiasi contenuto scritto in un progetto.</glossdef></glossentry>
<glossentry id="Default_framework">
<glossterm>quadro</glossterm>
<glossdef>Un framework è una base di codice che può essere modificata e/o costruita dall'utente. Un framework può includere diverse librerie software, API, compilatori e molto altro. In termini più semplici, un framework fornisce un ambiente favorevole a un certo tipo e livello di programmazione per un progetto. In GameMaker Studio 2 è possibile, ad esempio, creare i propri progetti quadro (tramite i pacchetti di risorse locali) che contengono script e oggetti per i controlli generali, la gestione delle statistiche, il collegamento in rete o qualsiasi altra cosa si utilizzi comunemente nei progetti, per poi importarli nei nuovi progetti fin dall'inizio, in modo da fornire le basi per continuare senza dover riprogrammare questi sistemi ogni volta.</glossdef></glossentry>
<glossentry id="Default_frontend">
<glossterm>frontend</glossterm>
<glossdef>Il frontend è la parte di un programma "rivolta verso l'esterno", cioè la parte con cui l'utente finale interagisce. Ad esempio, in GameMaker Studio 2 l'interfaccia in cui si esegue la programmazione e si aggiungono le risorse, ecc... è il frontend del programma, in quanto è il luogo in cui si interagisce con il programma e si immettono valori, file e altro. È essenzialmente l'opposto del backend.</glossdef></glossentry>
<glossentry id="Default_GameMaker:_Studio 1.4">
<glossterm>GameMaker: Studio 1.4</glossterm>
<glossdef>Una versione precedente del software GameMaker (spesso chiamata Legacy GameMaker) che non è più disponibile né supportata.</glossdef></glossentry>
<glossentry id="Default_garbage_collector">
<glossterm>collettore di rifiuti</glossterm>
<glossdef>Il garbage collector è uno strumento automatico che fa parte del codice del gioco e viene utilizzato per rimuovere alcuni elementi (come array e strutture) dalla memoria quando non sono più referenziati nel codice, senza che sia necessario rimuoverli esplicitamente.</glossdef></glossentry>
<glossentry id="Default_gizmos">
<glossterm>aggeggi</glossterm>
<glossdef>I Gizmo sono idiomi visivi dello schermo direttamente manipolabili e autosufficienti - essenzialmente qualsiasi cosa sia visiva e possa essere interagita o manipolata dall'utente per generare un effetto o un risultato specifico.</glossdef></glossentry>
<glossentry id="Default_GUI">
<glossterm>INTERFACCIA GRAFICA</glossterm>
<glossdef>Abbreviazione di 'Graphical User Interface', interfaccia utente che include elementi grafici, come finestre, icone e pulsanti. In GameMaker esiste una serie specifica di eventi oggetto (Draw GUI Events) che possono essere disegnati su questo livello specificamente progettato per cose come il punteggio, le vite, gli inventari, ecc...</glossdef></glossentry>
<glossentry id="Default_hard-code">
<glossterm>codificato</glossterm>
<glossdef>Nella programmazione informatica, il termine hard-coded è usato per descrivere il codice che è considerato fisso e non suscettibile di modifiche. Le caratteristiche hard-coded sono integrate nell'hardware o nel software in modo tale da non poter essere modificate in seguito. Ad esempio, se si sta realizzando un gioco e si "codifica" la salute del giocatore a 10, si utilizza il valore 10 in tutto il codice del gioco anziché una variabile.</glossdef></glossentry>
<glossentry id="Default_hashing">
<glossterm>hashing</glossterm>
<glossdef>L'hash è il metodo di creazione di una stringa o di un valore che si riferisce a una singola fonte, di solito un file, e SOLO a quella fonte. Ad esempio, in GameMaker è possibile generare un hash per un file di salvataggio, quindi, prima di accedervi in seguito, generare un altro hash e controllare l'hash originale e il nuovo hash per determinare se il file è stato manomesso.</glossdef></glossentry>
<glossentry id="Default_HVS">
<glossterm>HSV</glossterm>
<glossdef>L'acronimo è Hue (tinta), Saturation (saturazione) e Value (valore) ed è un modo per esprimere un colore, di solito utilizzando valori da 0 a 255. La tinta è il valore del colore, la saturazione è la quantità di colore da utilizzare e il valore è la luminosità del colore.</glossdef></glossentry>
<glossentry id="Default_HUD">
<glossterm>HUD</glossterm>
<glossdef>Nei giochi, HUD è l'acronimo di Heads-Up Display. È il metodo con cui le informazioni vengono trasmesse visivamente al giocatore come parte dell'interfaccia utente di un gioco, quindi elementi come la barra della salute, le icone di stato, il punteggio, ecc... fanno tutti parte dell'HUD e di solito gli elementi dell'HUD non richiedono l'interazione dell'utente.</glossdef></glossentry>
<glossentry id="Default_IDE">
<glossterm>IDE</glossterm>
<glossdef>L'IDE, o Ambiente di sviluppo integrato, è un'applicazione software che fornisce ai programmatori di computer strutture complete per lo sviluppo di software. In questo caso, l'intero frontend di GameMaker Studio 2 è considerato l'IDE e comprende sezioni per creare grafica, aggiungere suoni e aggiungere codice per creare i giochi.</glossdef></glossentry>
<glossentry id="Default_iteration">
<glossterm>iterazione</glossterm>
<glossdef>Un'iterazione è un singolo passaggio attraverso un insieme di operazioni nel codice del progetto. Una forma di iterazione nella programmazione informatica è rappresentata dai cicli. Un ciclo ripete un determinato segmento di codice finché non viene soddisfatta una condizione e si può procedere oltre. Ogni volta che il computer esegue un ciclo, si parla di iterazione. In parole povere, l'iterazione è il processo di ripetizione di un particolare frammento di codice più volte per eseguire una determinata azione.</glossdef></glossentry>
<glossentry id="Default_JSON">
<glossterm>JSON</glossterm>
<glossdef>JSON è l'acronimo di JavaScript Object Notatio ed è un formato leggero per la memorizzazione dei dati. JSON viene spesso utilizzato quando i dati vengono inviati da un server a una pagina web ed è considerato "autodescrittivo" e facile da capire e seguire quando viene visualizzato.</glossdef></glossentry>
<glossentry id="Default_keyframe">
<glossterm>keyframe</glossterm>
<glossdef>Un keyframe (chiamato anche chiave di parametro) è un punto della timeline del foglio di lavoro in cui viene definita la modifica del valore di un parametro.</glossdef></glossentry>
<glossentry id="Default_keyword">
<glossterm>parola chiave</glossterm>
<glossdef>Le parole chiave sono parole speciali che vengono riservate da un linguaggio di programmazione o da un programma in quanto hanno un significato particolare. Queste parole chiave sono riservate per eseguire determinati compiti e possono essere comandi o parametri. Ogni linguaggio di programmazione ha una serie di parole chiave riservate (note anche come nomi riservati) che non possono essere utilizzate come nomi di variabili, e il linguaggio GameMaker non fa eccezione: parole come return, while, if e break sono tutte parole chiave riservate utilizzate nel linguaggio di programmazione.</glossdef></glossentry>
<glossentry id="Default_linear_interpolation">
<glossterm>interpolazione lineare</glossterm>
<glossdef>L'interpolazione lineare consiste nello stimare un nuovo valore collegando due valori noti adiacenti con una linea retta. È quindi possibile ottenere il valore interpolato controllando qualsiasi punto lungo la linea. In grafica, l'interpolazione lineare si riferisce a un metodo di base per smussare i bordi dei pixel.</glossdef></glossentry>
<glossentry id="Default_literal">
<glossterm>letterale</glossterm>
<glossdef>Un valore esplicito scritto nel codice, ad esempio quando si scrive "UNA STRINGA DI TESTO" si utilizza un letterale di stringa, invece di restituire una stringa attraverso una variabile o una funzione. Analogamente, [0, 1, 2] è un letterale di array.</glossdef></glossentry>
<glossentry id="Default_machine_code">
<glossterm>codice macchina</glossterm>
<glossdef>Il codice macchina è un codice che viene eseguito direttamente da una CPU senza bisogno di essere interpretato da un interprete. È il livello più basso di codice e contiene le istruzioni che il processore esegue. È specifico per l'architettura di un processore. Di conseguenza, è ottimizzato. Può anche essere generato da un codice sorgente in un linguaggio di programmazione di livello superiore da un compilatore. In GameMaker il compilatore YoYo può essere usato per generare un eseguibile contenente codice macchina ottimizzato per una varietà di piattaforme.</glossdef></glossentry>
<glossentry id="Default_method">
<glossterm>metodo</glossterm>
<glossdef>In GameMaker, un metodo è il nome dato a una funzione definita dall'utente che è stata legata a un'istanza, in modo che la variabile di istanza sia il nome della funzione e ciò che si usa per chiamarla.</glossdef></glossentry>
<glossentry id="Default_operand">
<glossterm>operando</glossterm>
<glossdef>Un operando è un termine utilizzato per indicare i valori che possono essere manipolati utilizzando diversi operatori. Nell'espressione A B C, A, B e C sono gli operandi.</glossdef></glossentry>
<glossentry id="Default_operator">
<glossterm>operatore</glossterm>
<glossdef>Un operatore è un termine utilizzato per indicare qualcosa che può manipolare diversi operandi. Nell'espressione A B - C e - sono gli operatori. Esempi di operatori diversi sono (addizione), - (sottrazione), = (uguale), != (non uguale) e >= (maggiore o uguale a), ma ce ne sono molti altri.</glossdef></glossentry>
<glossentry id="Default_parameter_key">
<glossterm>chiave del parametro</glossterm>
<glossdef>Una chiave di parametro (detta anche keyframe) è un punto della timeline del foglio di lavoro in cui viene definita la modifica del valore di un parametro.</glossdef></glossentry>
<glossentry id="Default_parameter_tracks">
<glossterm>tracce dei parametri</glossterm>
<glossdef>Una traccia che è stata assegnata a una traccia risorsa nel pannello delle tracce e che modifica un singolo parametro della traccia risorsa a cui è collegata, come la posizione o l'indice dell'immagine.</glossdef></glossentry>
<glossentry id="Default_physics">
<glossterm>fisica</glossterm>
<glossdef>In GameMaker, quando si parla di un oggetto, di un'istanza o di una stanza che utilizza la "fisica", si intende che utilizza le funzioni di simulazione fisica integrate, basate sulla libreria fisica Box2D.</glossdef></glossentry>
<glossentry id="Default_playhead">
<glossterm>playhead</glossterm>
<glossdef>La posizione corrente di 'riproduzione' all'interno della timeline nel foglio di lavoro Sequenze o nella vista fotogrammi dell'editor Sprite. Nelle sequenze (e negli sprite), questa posizione si sposta durante l'anteprima dell'animazione e può essere posizionata su fotogrammi specifici per vedere e modificare le chiavi e i fotogrammi chiave in quella posizione.</glossdef></glossentry>
<glossentry id="Default_port_number">
<glossterm>numero di porta</glossterm>
<glossdef>Il numero di porta è un modo per identificare un processo specifico a cui deve essere inoltrato un messaggio Internet o di altra rete quando arriva a un server.</glossdef></glossentry>
<glossentry id="Default_PURE">
<glossterm>puro</glossterm>
<glossdef>Una funzione pura non ha alcun effetto sul gioco e non crea o modifica nulla. Restituisce solo un valore. Dato lo stesso insieme di argomenti, restituisce sempre lo stesso valore.</glossdef></glossentry>
<glossentry id="Default_Remote_Workers">
<glossterm>Lavoratori a distanza</glossterm>
<glossdef>Un Remote Worker è un programma speciale che GameMaker Studio 2 utilizzerà su determinate piattaforme per creare gli eseguibili del gioco senza eseguire effettivamente l'IDE di GameMaker Studio 2 su quella piattaforma.</glossdef></glossentry>
<glossentry id="Default_render">
<glossterm>reso</glossterm>
<glossdef>Quando qualcosa viene renderizzato in GameMaker Studio 2, generalmente significa che è stato semplicemente "disegnato sul buffer di visualizzazione" o "disegnato su una superficie".  Il rendering può anche riferirsi al processo di trasformazione di una sorgente vettoriale (come un font) in un'immagine bitmap.</glossdef></glossentry>
<glossentry id="Default_RSS">
<glossterm>RSS</glossterm>
<glossdef>Abbreviazione di "Rich Site Summary", è un sistema standardizzato per la distribuzione di contenuti da un editore online agli utenti di Internet.</glossdef></glossentry>
<glossentry id="Default_Runtime">
<glossterm>Tempo di esecuzione</glossterm>
<glossdef>Il runtime in GameMaker Studio 2 è la raccolta di risorse del compilatore necessarie al programma per creare un pacchetto eseguibile finale per una determinata piattaforma di destinazione. Queste risorse sono installate separatamente dall'IDE e possono essere modificate e aggiornate in qualsiasi momento.</glossdef></glossentry>
<glossentry id="Default_sample_rate">
<glossterm>frequenza di campionamento</glossterm>
<glossdef>La frequenza di campionamento è il numero di campioni di audio trasportati al secondo, misurato in Hz o kHz (un kHz corrisponde a 1000 Hz). Più alta è la frequenza di campionamento, più il suono si avvicina alla forma d'onda analogica originale, ma la dimensione del file sarà maggiore. In generale, gli effetti sonori sono compatibili con una frequenza di campionamento inferiore a quella della musica.</glossdef></glossentry>
<glossentry id="Default_SCM">
<glossterm>SCM</glossterm>
<glossdef>SCM è l'acronimo di Source Control Management, un programma (o una suite di programmi) responsabile della manutenzione delle versioni del codice sorgente di un progetto. SCM consente, tra l'altro, di memorizzare una cronologia delle modifiche al codice, nonché di rivedere e annullare qualsiasi modifica apportata al codice sorgente.</glossdef></glossentry>
<glossentry id="Default_SDK">
<glossterm>SDK</glossterm>
<glossdef>SDK è l'acronimo di "Software Development Kit". Di solito si riferisce a una raccolta di software e/o pacchetti utilizzati per lo sviluppo di applicazioni per un dispositivo o un sistema operativo specifico.</glossdef></glossentry>
<glossentry id="Default_server">
<glossterm>server</glossterm>
<glossdef>In informatica, un server è un programma informatico o un dispositivo che fornisce funzionalità ad altri programmi o dispositivi, chiamati "client".</glossdef></glossentry>
<glossentry id="Default_shader">
<glossterm>shader</glossterm>
<glossdef>Uno shader è un insieme di piccoli programmi che vengono eseguiti direttamente sulla GPU per creare grafica ed effetti grafici. L'esecuzione di questi programmi è molto veloce e consente alla CPU di dedicarsi ad altre attività.</glossdef></glossentry>
<glossentry id="Default_smooth_interpolation">
<glossterm>interpolazione uniforme</glossterm>
<glossdef>L'interpolazione uniforme consiste nello stimare un nuovo valore collegando due valori noti adiacenti con una curva spline generata matematicamente. È quindi possibile ottenere il valore interpolato controllando qualsiasi punto lungo la linea.</glossdef></glossentry>
<glossentry id="Default_source_code">
<glossterm>codice sorgente</glossterm>
<glossdef>Il codice sorgente è il componente fondamentale di un programma informatico, necessario per la sua esecuzione.</glossdef></glossentry>
<glossentry id="Default_spline">
<glossterm>spline</glossterm>
<glossdef>Una spline è fondamentalmente una curva liscia utilizzata per unire punti. Dal punto di vista matematico, si definisce come una funzione polinomiale sufficientemente liscia, definita in modo frammentario e con un elevato grado di scorrevolezza nei punti in cui i pezzi della polinomiale si collegano.</glossdef></glossentry>
<glossentry id="Default_sprites">
<glossterm>sprite</glossterm>
<glossdef>Uno sprite è una grafica bitmap progettata per far parte di una scena più ampia. Può essere un'immagine statica o una grafica animata.</glossdef></glossentry>
<glossentry id="Default_statement">
<glossterm>dichiarazione</glossterm>
<glossdef>Nella programmazione, un'istruzione è una singola riga di codice scritta legalmente in un linguaggio di programmazione che esprime un'azione da eseguire. Un'istruzione può avere componenti interni, tra cui espressioni, operatori e funzioni. Un esempio di istruzione è A = B 5. Un programma di GameMaker Studio 2 non è altro che una sequenza di una o più istruzioni che insieme eseguono un'azione (ad esempio, spostare il giocatore).</glossdef></glossentry>
<glossentry id="Default_swatches">
<glossterm>campioni</glossterm>
<glossdef>Un campione è semplicemente un piccolo campione quadrato di un colore o di un materiale utilizzato per illustrare il suo aspetto.</glossdef></glossentry>
<glossentry id="Default_syntax">
<glossterm>sintassi</glossterm>
<glossdef>Come i linguaggi umani, anche i linguaggi di programmazione hanno un proprio insieme di regole sul modo in cui le affermazioni possono essere trasmesse, e questo insieme di regole è noto come sintassi. Sebbene diversi linguaggi di programmazione condividano molte caratteristiche, funzioni e capacità, in genere si differenziano per la sintassi. Senza l'uso corretto della sintassi, non è possibile scrivere un programma eseguibile e una sintassi errata comporta errori in fase di compilazione.</glossdef></glossentry>
<glossentry id="Default_texel">
<glossterm>texel</glossterm>
<glossdef>Il texel (o elemento della texture) è l'unità fondamentale dello spazio delle texture, proprio come il pixel è l'elemento fondamentale dello spazio delle immagini. Le texture sono rappresentate da array di texel, proprio come le immagini sono rappresentate da array di pixel. Quando si esegue la texturizzazione di una superficie 3D (un processo noto come mappatura delle texture), il renderer mappa i texel nei pixel appropriati dell'immagine di uscita.</glossdef></glossentry>
<glossentry id="Default_texture_atlas">
<glossterm>atlante delle texture</glossterm>
<glossdef>Un altro nome per una pagina di texture, che è semplicemente una raccolta di immagini richieste da uno o più sprite nel gioco, organizzate in modo ottimale per utilizzare la minor memoria possibile per le texture.</glossdef></glossentry>
<glossentry id="Default_texture_page">
<glossterm>pagina della texture</glossterm>
<glossdef>Una pagina di texture (chiamata anche atlante di texture) è una raccolta di immagini (sprite, tileset, caratteri di font, ecc.) raggruppate in modo ottimale per occupare la minor quantità di memoria delle texture durante l'esecuzione del gioco.</glossdef></glossentry>
<glossentry id="Default_tile_map">
<glossterm>mappa delle piastrelle</glossterm>
<glossdef>La mappa di piastrelle è il nome dato a una collezione di piastrelle prese da un set di piastrelle e utilizzate per creare livelli in un gioco.</glossdef></glossentry>
<glossentry id="Default_tile-sets">
<glossterm>set di piastrelle</glossterm>
<glossdef>Un set di piastrelle è un insieme di risorse grafiche quadrate o rettangolari disposte su una griglia come un'unica immagine. Ogni elemento della griglia può essere collocato più volte in una stanza per creare una scena più ampia, chiamata "mappa di piastrelle".</glossdef></glossentry>
<glossentry id="Default_timeline">
<glossterm>linee temporali</glossterm>
<glossdef>Una timeline in GameMaker Studio 2 è una raccolta lineare di eventi che vengono eseguiti in ordine consecutivo. A ogni evento possono essere assegnati codice o azioni per eseguire un compito e quando la timeline viene eseguita, questi compiti verranno eseguiti man mano che viene raggiunto ogni evento della timeline.</glossdef></glossentry>
<glossentry id="Default_Track_Panel">
<glossterm>Pannello di binario</glossterm>
<glossdef>L'area dell'editor di sequenza che mostra tutte le diverse tracce di una sequenza: tracce di risorse, tracce di parametri, gruppi di tracce e gruppi di maschere di clip.</glossdef></glossentry>
<glossentry id="Default_truth_table">
<glossterm>tabella della verità</glossterm>
<glossdef>Una tabella di verità è una tabella matematica utilizzata in logica - in particolare in relazione all'algebra booleana e alle funzioni booleane - che stabilisce i valori funzionali delle espressioni logiche su ciascuno dei loro argomenti funzionali, cioè per ogni combinazione di valori assunti dalle loro variabili logiche.</glossdef></glossentry>
<glossentry id="Default_truthy">
<glossterm>sincero</glossterm>
<glossdef>Un valore che viene considerato "vero" se usato come booleano, ad esempio in una condizione if().</glossdef></glossentry>
<glossentry id="Default_typo">
<glossterm>refuso</glossterm>
<glossdef>Errore tipografico.</glossdef></glossentry>
<glossentry id="Default_URL">
<glossterm>URL</glossterm>
<glossdef>È l'abbreviazione di "Universal Resource Locator" (localizzatore universale di risorse) ed è sostanzialmente l'indirizzo di qualcosa su Internet.</glossdef></glossentry>
<glossentry id="Default_v-sync">
<glossterm>v-sync</glossterm>
<glossdef>Il V-sync o sincronizzazione verticale viene utilizzato per sincronizzare la velocità di aggiornamento del gioco con la frequenza di aggiornamento del monitor. Ciò può ridurre lo screen tearing, ovvero quando lo schermo visualizza porzioni di più fotogrammi in una sola volta, ma può anche causare problemi di prestazioni o di frequenza di aggiornamento su monitor con una frequenza di aggiornamento elevata.</glossdef></glossentry>
<glossentry id="Default_variable">
<glossterm>variabile</glossterm>
<glossdef>Una variabile è un valore denominato all'interno di un programma che può essere modificato, memorizzato e visualizzato quando necessario. Per esempio, se abbiamo una variabile intera con nome XYZ che memorizza il valore 10, possiamo fare cose come A = XYZ 10, che imposterà il valore della variabile A a 20, dato che XYZ è 10 e noi gli stiamo aggiungendo 10. È inoltre possibile modificare i valori delle variabili utilizzando gli operatori, per cui facendo XYZ = XYZ 100 si modificherà il valore della nostra variabile XYZ in 110. Le variabili possono essere utilizzate anche per memorizzare identificatori e riferimenti a diverse risorse.</glossdef></glossentry>
<glossentry id="Default_vector">
<glossterm>vettore</glossterm>
<glossdef>Un vettore è un costrutto matematico che ha una dimensione, detta grandezza, e una direzione. In GameMaker, un vettore viene solitamente utilizzato per mostrare la distanza e la direzione in cui qualcosa si è mosso. Un vettore può anche essere usato per definire le immagini e alcuni formati di immagine come SWF usano la matematica vettoriale per definire le immagini che contengono.</glossdef></glossentry>
<glossentry id="Default_Version_Number">
<glossterm>Numero di versione</glossterm>
<glossdef>Un numero di versione è un insieme unico di numeri assegnati a una specifica versione di un programma software, di un gioco o di una risorsa, di solito con il formato MAGGIORE.MINORE.MANTENIMENTO, ad esempio: v2.3.56. In genere, con il rilascio di aggiornamenti e di edizioni completamente nuove di un gioco o di una risorsa, il numero di versione aumenta.</glossdef></glossentry>
<glossentry id="Default_vertex">
<glossterm>vertice</glossterm>
<glossdef>Un vertice è il nome dato a un singolo punto di un poligono che contiene varie caratteristiche che ne definiscono la posizione, il colore e la texture. Nella grafica computerizzata, di solito si intende un angolo di un triangolo che viene utilizzato per creare una primitiva, e la combinazione di tali primitive è ciò che crea la grafica sullo schermo.</glossdef></glossentry>
<glossentry id="Default_virtual_machine">
<glossterm>Macchina virtuale (VM)</glossterm>
<glossdef>In GameMaker, la VM (Virtual Machine) è un metodo di compilazione che utilizza un runner generico per ogni piattaforma e poi lo usa per interpretare il codice del gioco.</glossdef></glossentry>
<glossentry id="Default_VRAM">
<glossterm>VRAM</glossterm>
<glossdef>La VRAM è la quantità di memoria disponibile per il video, ovvero lo spazio di memoria in grado di memorizzare texture e immagini.</glossdef></glossentry>
<glossentry id="Default_weak_reference">
<glossterm>riferimento debole</glossterm>
<glossdef>Un riferimento debole è un riferimento che non protegge l'oggetto referenziato dalla raccolta da parte del garbage collector e quindi può essere usato per verificare se una struct è ancora "viva" (referenziata) o meno da qualche parte nel gioco.</glossdef></glossentry>
<glossentry id="Default_YoYo_Compiler">
<glossterm>Compilatore YoYo (YYC)</glossterm>
<glossdef>Si tratta di un compilatore speciale per la creazione di pacchetti eseguibili che utilizzano il codice nativo invece del codice interpretato e di un runner (che è quello utilizzato dalla compilazione di GameMaker VM). Il codice compilato è più veloce da eseguire, ma richiede più tempo per compilare l'eseguibile.</glossdef></glossentry>
<glossentry id="Default_multicast">
<glossterm>multicast</glossterm>
<glossdef>Il multicast è una comunicazione di rete in cui vengono indirizzati più ricevitori invece di un singolo ricevitore in una singola trasmissione.</glossdef></glossentry></glossgroup>